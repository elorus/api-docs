{"swagger": "2.0", "info": {"title": "API Documentation", "description": "", "version": "native", "x-logo": {"url": "https://www.elorus.com/media/filer_public/58/0e/580e16b8-4a9f-400b-9828-065d98f8fb71/elorus-logo-api.svg", "backgroundColor": "#FFFFFF"}}, "host": "api.elorus.com", "schemes": ["https"], "paths": {"/native/contacts/": {"get": {"description": "Get the list of contacts.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. To get all the results pass the value \"all\"."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `first_name`, `last_name`, `company`, `profession`, `vat_number`, `email__email`, `phones__number`, `addresses__address`, `addresses__city`, `addresses__state`"}, {"required": false, "type": "string", "name": "letter", "in": "query", "description": "Optionally filter by starting letter. Refers to the contact's \"display_name.\""}, {"required": false, "type": "string", "name": "ctype", "in": "query", "description": "Optionally filter by contact type. Either `client` or `supplier`."}, {"required": false, "type": "string", "name": "profession", "in": "query", "description": "Optionally filter by profession."}, {"required": false, "type": "string", "name": "company", "in": "query", "description": "Optionally filter by company."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `display_name`, `profession`, `vat_number`. Prepend a `-` to denote reverse ordering (e.g `-display_name`)."}], "tags": ["contacts"], "summary": "/native/contacts/", "operationId": "contacts_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "first_name": {"type": "string", "description": "First name of the contact"}, "last_name": {"type": "string", "description": "Last name of the contact"}, "company": {"type": "string", "description": "The company the contact represents"}, "display_name": {"type": "string", "description": "Automatically generated representation string"}, "profession": {"type": "string", "description": "Profession of the contact"}, "is_client": {"type": "boolean", "description": "Whether or not the contact is a client"}, "is_supplier": {"type": "boolean", "description": "Whether or not the contact is a supplier"}, "invoice_due": {"type": "string", "description": "The contact's sum of invoices that are due"}, "organization": {"type": "string", "description": "ID of the owning organization"}, "email": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "email": {"type": "string", "description": ""}, "email_type": {"type": "string", "description": "The email type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Personal\n`work` | Work\n`other` | Other\n</details>"}, "client_portal_access": {"type": "boolean", "description": "Whether the contact is allowed to access the client portal or not."}, "last_login": {"type": "string", "description": "When the contact logged in to the client for the last time. ISO-formatted date and time.\n\nTimezone information is included."}}, "description": "A list of emails"}, "phones": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "number": {"type": "string", "description": ""}, "phone_type": {"type": "string", "description": "The phone type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Home\n`fax` | Fax\n`mobile` | Mobile\n`work` | Work\n`other` | Other\n</details>"}}, "description": "A list of phone numbers"}, "addresses": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "address": {"type": "string", "description": ""}, "city": {"type": "string", "description": ""}, "state": {"type": "string", "description": ""}, "zip": {"type": "string", "description": ""}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`MK` | Republic of Macedonia\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>"}, "ad_type": {"type": "string", "description": "The address type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`bill` | Billing\n`ship` | Shipping\n`other` | Other\n</details>"}}, "description": "A list of postal addresses"}}, "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any."}, "previous": {"type": "string", "description": "URL to the previous page, if any."}, "count": {"type": "integer", "description": "Number of total results."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new contact.\n---\nThis endpoint will add a new contact to the organization.\nAlthough `first_name`, `last_name` and `company` are not required\nfields, at least one of them must be specified for the record\nto be valid. The newly created record's ID is included in\nthe response.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"first_name": {"type": "string", "description": "First name of the contact"}, "last_name": {"type": "string", "description": "Last name of the contact"}, "company": {"type": "string", "description": "The company the contact represents"}, "profession": {"type": "string", "description": "Profession of the contact"}, "notes": {"type": "string", "description": "Personal notes regarding the contact"}, "vat_number": {"type": "string", "description": "The tax ID of the contact"}, "is_client": {"type": "boolean", "description": "Whether or not the contact is a client"}, "is_supplier": {"type": "boolean", "description": "Whether or not the contact is a supplier"}, "default_language": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "addresses": {"items": {"type": "object", "properties": {"city": {"type": "string", "description": ""}, "zip": {"type": "string", "description": ""}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`MK` | Republic of Macedonia\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>"}, "ad_type": {"type": "string", "description": "The address type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`bill` | Billing\n`ship` | Shipping\n`other` | Other\n</details>"}, "state": {"type": "string", "description": ""}, "address": {"type": "string", "description": ""}}}, "required": false, "type": "array", "name": "addresses", "description": "A list of postal addresses"}, "email": {"items": {"type": "object", "properties": {"email": {"type": "string", "description": ""}, "email_type": {"type": "string", "description": "The email type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Personal\n`work` | Work\n`other` | Other\n</details>"}}}, "required": false, "type": "array", "name": "email", "description": "A list of emails"}, "phones": {"items": {"type": "object", "properties": {"phone_type": {"type": "string", "description": "The phone type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Home\n`fax` | Fax\n`mobile` | Mobile\n`work` | Work\n`other` | Other\n</details>"}, "number": {"type": "string", "description": ""}}}, "required": false, "type": "array", "name": "phones", "description": "A list of phone numbers"}}}, "name": "data", "in": "body"}], "tags": ["contacts"], "summary": "/native/contacts/", "operationId": "contacts_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "first_name": {"type": "string", "description": "First name of the contact"}, "last_name": {"type": "string", "description": "Last name of the contact"}, "company": {"type": "string", "description": "The company the contact represents"}, "display_name": {"type": "string", "description": "Automatically generated representation string"}, "profession": {"type": "string", "description": "Profession of the contact"}, "notes": {"type": "string", "description": "Personal notes regarding the contact"}, "vat_number": {"type": "string", "description": "The tax ID of the contact"}, "is_client": {"type": "boolean", "description": "Whether or not the contact is a client"}, "is_supplier": {"type": "boolean", "description": "Whether or not the contact is a supplier"}, "default_language": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "addresses": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "address": {"type": "string", "description": ""}, "city": {"type": "string", "description": ""}, "state": {"type": "string", "description": ""}, "zip": {"type": "string", "description": ""}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`MK` | Republic of Macedonia\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>"}, "ad_type": {"type": "string", "description": "The address type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`bill` | Billing\n`ship` | Shipping\n`other` | Other\n</details>"}}, "description": "A list of postal addresses"}, "email": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "email": {"type": "string", "description": ""}, "email_type": {"type": "string", "description": "The email type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Personal\n`work` | Work\n`other` | Other\n</details>"}, "client_portal_access": {"type": "boolean", "description": "Whether the contact is allowed to access the client portal or not."}, "last_login": {"type": "string", "description": "When the contact logged in to the client for the last time. ISO-formatted date and time.\n\nTimezone information is included."}}, "description": "A list of emails"}, "phones": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "number": {"type": "string", "description": ""}, "phone_type": {"type": "string", "description": "The phone type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Home\n`fax` | Fax\n`mobile` | Mobile\n`work` | Work\n`other` | Other\n</details>"}}, "description": "A list of phone numbers"}, "organization": {"type": "string", "description": "ID of the owning organization"}, "created": {"type": "string", "description": "ISO-formatted creation date & time\n\nTimezone information is included."}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time\n\nTimezone information is included."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/contacts/{id}/": {"get": {"description": "Get the details of a single contact.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["contacts"], "summary": "/native/contacts/{id}/", "operationId": "contacts_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "first_name": {"type": "string", "description": "First name of the contact"}, "last_name": {"type": "string", "description": "Last name of the contact"}, "company": {"type": "string", "description": "The company the contact represents"}, "display_name": {"type": "string", "description": "Automatically generated representation string"}, "profession": {"type": "string", "description": "Profession of the contact"}, "notes": {"type": "string", "description": "Personal notes regarding the contact"}, "vat_number": {"type": "string", "description": "The tax ID of the contact"}, "is_client": {"type": "boolean", "description": "Whether or not the contact is a client"}, "is_supplier": {"type": "boolean", "description": "Whether or not the contact is a supplier"}, "default_language": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "addresses": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "address": {"type": "string", "description": ""}, "city": {"type": "string", "description": ""}, "state": {"type": "string", "description": ""}, "zip": {"type": "string", "description": ""}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`MK` | Republic of Macedonia\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>"}, "ad_type": {"type": "string", "description": "The address type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`bill` | Billing\n`ship` | Shipping\n`other` | Other\n</details>"}}, "description": "A list of postal addresses"}, "email": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "email": {"type": "string", "description": ""}, "email_type": {"type": "string", "description": "The email type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Personal\n`work` | Work\n`other` | Other\n</details>"}, "client_portal_access": {"type": "boolean", "description": "Whether the contact is allowed to access the client portal or not."}, "last_login": {"type": "string", "description": "When the contact logged in to the client for the last time. ISO-formatted date and time.\n\nTimezone information is included."}}, "description": "A list of emails"}, "phones": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "number": {"type": "string", "description": ""}, "phone_type": {"type": "string", "description": "The phone type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Home\n`fax` | Fax\n`mobile` | Mobile\n`work` | Work\n`other` | Other\n</details>"}}, "description": "A list of phone numbers"}, "organization": {"type": "string", "description": "ID of the owning organization"}, "created": {"type": "string", "description": "ISO-formatted creation date & time\n\nTimezone information is included."}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time\n\nTimezone information is included."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a contact.\n---\nYou must provide at least the required fields for the record to be\nsuccessfully updated. Any missing parameter will\nresult in keeping the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"first_name": {"type": "string", "description": "First name of the contact"}, "last_name": {"type": "string", "description": "Last name of the contact"}, "company": {"type": "string", "description": "The company the contact represents"}, "profession": {"type": "string", "description": "Profession of the contact"}, "notes": {"type": "string", "description": "Personal notes regarding the contact"}, "vat_number": {"type": "string", "description": "The tax ID of the contact"}, "is_client": {"type": "boolean", "description": "Whether or not the contact is a client"}, "is_supplier": {"type": "boolean", "description": "Whether or not the contact is a supplier"}, "default_language": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "addresses": {"items": {"type": "object", "properties": {"city": {"type": "string", "description": ""}, "zip": {"type": "string", "description": ""}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`MK` | Republic of Macedonia\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>"}, "ad_type": {"type": "string", "description": "The address type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`bill` | Billing\n`ship` | Shipping\n`other` | Other\n</details>"}, "state": {"type": "string", "description": ""}, "address": {"type": "string", "description": ""}, "id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}}}, "required": false, "type": "array", "name": "addresses", "description": "A list of postal addresses"}, "email": {"items": {"type": "object", "properties": {"email_type": {"type": "string", "description": "The email type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Personal\n`work` | Work\n`other` | Other\n</details>"}, "id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "email": {"type": "string", "description": ""}}}, "required": false, "type": "array", "name": "email", "description": "A list of emails"}, "phones": {"items": {"type": "object", "properties": {"phone_type": {"type": "string", "description": "The phone type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Home\n`fax` | Fax\n`mobile` | Mobile\n`work` | Work\n`other` | Other\n</details>"}, "id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "number": {"type": "string", "description": ""}}}, "required": false, "type": "array", "name": "phones", "description": "A list of phone numbers"}}}, "name": "data", "in": "body"}], "tags": ["contacts"], "summary": "/native/contacts/{id}/", "operationId": "contacts_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "first_name": {"type": "string", "description": "First name of the contact"}, "last_name": {"type": "string", "description": "Last name of the contact"}, "company": {"type": "string", "description": "The company the contact represents"}, "display_name": {"type": "string", "description": "Automatically generated representation string"}, "profession": {"type": "string", "description": "Profession of the contact"}, "notes": {"type": "string", "description": "Personal notes regarding the contact"}, "vat_number": {"type": "string", "description": "The tax ID of the contact"}, "is_client": {"type": "boolean", "description": "Whether or not the contact is a client"}, "is_supplier": {"type": "boolean", "description": "Whether or not the contact is a supplier"}, "default_language": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "addresses": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "address": {"type": "string", "description": ""}, "city": {"type": "string", "description": ""}, "state": {"type": "string", "description": ""}, "zip": {"type": "string", "description": ""}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`MK` | Republic of Macedonia\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>"}, "ad_type": {"type": "string", "description": "The address type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`bill` | Billing\n`ship` | Shipping\n`other` | Other\n</details>"}}, "description": "A list of postal addresses"}, "email": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "email": {"type": "string", "description": ""}, "email_type": {"type": "string", "description": "The email type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Personal\n`work` | Work\n`other` | Other\n</details>"}, "client_portal_access": {"type": "boolean", "description": "Whether the contact is allowed to access the client portal or not."}, "last_login": {"type": "string", "description": "When the contact logged in to the client for the last time. ISO-formatted date and time.\n\nTimezone information is included."}}, "description": "A list of emails"}, "phones": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "number": {"type": "string", "description": ""}, "phone_type": {"type": "string", "description": "The phone type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Home\n`fax` | Fax\n`mobile` | Mobile\n`work` | Work\n`other` | Other\n</details>"}}, "description": "A list of phone numbers"}, "organization": {"type": "string", "description": "ID of the owning organization"}, "created": {"type": "string", "description": "ISO-formatted creation date & time\n\nTimezone information is included."}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time\n\nTimezone information is included."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a contact.\n---\nThe only difference between full & partial update is that the latter\nwill treat all parameters as optional. Any missing parameter will\nresult in keeping the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"first_name": {"type": "string", "description": "First name of the contact"}, "last_name": {"type": "string", "description": "Last name of the contact"}, "company": {"type": "string", "description": "The company the contact represents"}, "profession": {"type": "string", "description": "Profession of the contact"}, "notes": {"type": "string", "description": "Personal notes regarding the contact"}, "vat_number": {"type": "string", "description": "The tax ID of the contact"}, "is_client": {"type": "boolean", "description": "Whether or not the contact is a client"}, "is_supplier": {"type": "boolean", "description": "Whether or not the contact is a supplier"}, "default_language": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "addresses": {"items": {"type": "object", "properties": {"city": {"type": "string", "description": ""}, "zip": {"type": "string", "description": ""}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`MK` | Republic of Macedonia\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>"}, "ad_type": {"type": "string", "description": "The address type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`bill` | Billing\n`ship` | Shipping\n`other` | Other\n</details>"}, "state": {"type": "string", "description": ""}, "address": {"type": "string", "description": ""}, "id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}}}, "required": false, "type": "array", "name": "addresses", "description": "A list of postal addresses"}, "email": {"items": {"type": "object", "properties": {"email_type": {"type": "string", "description": "The email type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Personal\n`work` | Work\n`other` | Other\n</details>"}, "id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "email": {"type": "string", "description": ""}}}, "required": false, "type": "array", "name": "email", "description": "A list of emails"}, "phones": {"items": {"type": "object", "properties": {"phone_type": {"type": "string", "description": "The phone type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Home\n`fax` | Fax\n`mobile` | Mobile\n`work` | Work\n`other` | Other\n</details>"}, "id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "number": {"type": "string", "description": ""}}}, "required": false, "type": "array", "name": "phones", "description": "A list of phone numbers"}}}, "name": "data", "in": "body"}], "tags": ["contacts"], "summary": "/native/contacts/{id}/", "operationId": "contacts_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "first_name": {"type": "string", "description": "First name of the contact"}, "last_name": {"type": "string", "description": "Last name of the contact"}, "company": {"type": "string", "description": "The company the contact represents"}, "display_name": {"type": "string", "description": "Automatically generated representation string"}, "profession": {"type": "string", "description": "Profession of the contact"}, "notes": {"type": "string", "description": "Personal notes regarding the contact"}, "vat_number": {"type": "string", "description": "The tax ID of the contact"}, "is_client": {"type": "boolean", "description": "Whether or not the contact is a client"}, "is_supplier": {"type": "boolean", "description": "Whether or not the contact is a supplier"}, "default_language": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "addresses": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "address": {"type": "string", "description": ""}, "city": {"type": "string", "description": ""}, "state": {"type": "string", "description": ""}, "zip": {"type": "string", "description": ""}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`MK` | Republic of Macedonia\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>"}, "ad_type": {"type": "string", "description": "The address type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`bill` | Billing\n`ship` | Shipping\n`other` | Other\n</details>"}}, "description": "A list of postal addresses"}, "email": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "email": {"type": "string", "description": ""}, "email_type": {"type": "string", "description": "The email type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Personal\n`work` | Work\n`other` | Other\n</details>"}, "client_portal_access": {"type": "boolean", "description": "Whether the contact is allowed to access the client portal or not."}, "last_login": {"type": "string", "description": "When the contact logged in to the client for the last time. ISO-formatted date and time.\n\nTimezone information is included."}}, "description": "A list of emails"}, "phones": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely."}, "number": {"type": "string", "description": ""}, "phone_type": {"type": "string", "description": "The phone type. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`home` | Home\n`fax` | Fax\n`mobile` | Mobile\n`work` | Work\n`other` | Other\n</details>"}}, "description": "A list of phone numbers"}, "organization": {"type": "string", "description": "ID of the owning organization"}, "created": {"type": "string", "description": "ISO-formatted creation date & time\n\nTimezone information is included."}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time\n\nTimezone information is included."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a contact.\n---\nNote that you cannot delete contacts having relations with other\nobjects (such as invoices, payments etc). Trying to delete such\nrecords will result in a 400 HTTP status -with appropriate error\nmessages-.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["contacts"], "summary": "/native/contacts/{id}/", "operationId": "contacts_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/contacts/{id}/invoice-projects/": {"post": {"description": "Invoice all unbilled client projects.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["contacts"], "summary": "/native/contacts/{id}/invoice-projects/", "operationId": "contacts_invoice_projects", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "documenttype": {"type": "string", "description": "ID of the associated document type"}, "series": {"type": "string", "description": "ID of the associated sales series"}, "number": {"type": "string", "description": "Use 0 (zero) for automatic numbering"}, "representation": {"type": "string", "description": "Automatically generated representation string"}, "draft": {"type": "boolean", "description": "If true the document is not considered to be issued"}, "paid": {"type": "number", "description": "Automatically calculated amount"}, "payable": {"type": "number", "description": "Total payable amount. This amount may differ from the document's total amount in case withholding taxes have been applied."}, "status": {"type": "string", "description": "Automatically generated status One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>"}, "date": {"type": "string", "description": "The issue date"}, "due_date": {"type": "string", "description": "Expected payment date"}, "client": {"type": "string", "description": "ID of the associated client"}, "client_display_name": {"type": "string", "description": "If not provided, the client name will be retrieved from the specified client contact"}, "client_address": {"type": "string", "description": ""}, "client_shipping_address": {"type": "string", "description": ""}, "client_profession": {"type": "string", "description": ""}, "client_vat_number": {"type": "string", "description": ""}, "client_contact_person": {"type": "string", "description": ""}, "client_phone_number": {"type": "string", "description": ""}, "client_email": {"type": "string", "description": ""}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Calculate totals based on initial values\n`total` | Calculate initial values based on total values\n</details>"}, "items": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product"}, "product": {"type": "string", "description": "ID of the associated product / service"}, "description": {"type": "string", "description": ""}, "quantity": {"type": "number", "description": "Up to 2 decimal places"}, "unit_value": {"type": "number", "description": "Used in \"initial\" calculation mode; up to 5 decimal places"}, "unit_discount": {"type": "number", "description": "Absolute value, not percentage; up to 5 decimal places"}, "taxes": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "taxes", "description": "A list of the applied tax IDs"}, "unit_total": {"type": "number", "description": "Used in \"total\" calculation mode; up to 5 decimal places"}, "item_net": {"type": "number", "description": "Automatically calculated amount"}, "unit_measure": {"type": "string", "description": "Measurement unit One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>"}, "project": {"type": "string", "description": ""}, "timeentries": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "timeentries", "description": "The list of time entries for the invoice item"}}, "description": "None"}, "initial": {"type": "number", "description": "Automatically calculated amount"}, "net": {"type": "number", "description": "Automatically calculated amount"}, "total": {"type": "number", "description": "Automatically calculated amount"}, "withholding_taxes": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "withholding_taxes", "description": "A list of withholding tax IDs to be applied"}, "exchange_rate": {"type": "number", "description": "Will always equal 1.00 for the base currency. Up to 6 decimal places"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form."}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form."}, "notes": {"type": "string", "description": "These notes are private."}, "payment_gateways": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "payment_gateways", "description": "A list of payment gateway IDs that can be used to pay the invoice"}, "recurring": {"type": "string", "description": "ID of the recurring record that created this document (if any)"}, "permalink": {"type": "string", "description": "Public URL for clients"}, "organization": {"type": "string", "description": "ID of the owning organization"}, "trackingcategories": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category."}, "option": {"type": "string", "description": "The selected option of the tracking category."}}, "description": "An optional list of tracking categories to classify this record."}, "created": {"type": "string", "description": "ISO-formatted creation date & time\n\nTimezone information is included."}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time\n\nTimezone information is included."}, "template_settings": {"type": "object", "properties": {"hide_description": {"type": "boolean", "description": "Hide the item description column"}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document"}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column"}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column"}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)"}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "unit_measure_appearance": {"type": "string", "description": "Measurement unit column appearance.  One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}, "discount_appearance": {"type": "string", "description": "Discount column appearance.  One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "theme": {"type": "string", "description": "ID of the associated theme"}}, "description": "The set of appearance settings"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/contacts/{id}/summary/": {"get": {"description": "Get summaries for the contact.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `first_name`, `last_name`, `company`, `profession`, `vat_number`, `email__email`, `phones__number`, `addresses__address`, `addresses__city`, `addresses__state`"}, {"required": false, "type": "string", "name": "letter", "in": "query", "description": "Optionally filter by starting letter. Refers to the contact's \"display_name.\""}, {"required": false, "type": "string", "name": "ctype", "in": "query", "description": "Optionally filter by contact type. Either `client` or `supplier`."}, {"required": false, "type": "string", "name": "profession", "in": "query", "description": "Optionally filter by profession."}, {"required": false, "type": "string", "name": "company", "in": "query", "description": "Optionally filter by company."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `display_name`, `profession`, `vat_number`. Prepend a `-` to denote reverse ordering (e.g `-display_name`)."}], "tags": ["contacts"], "summary": "/native/contacts/{id}/summary/", "operationId": "contacts_summary", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"total_sales": {"type": "number", "description": "The net sums of invoices minus the net sums of credit notes"}, "invoices_due": {"type": "number", "description": "Total invoice amount due"}, "invoices_overdue": {"type": "number", "description": "Total invoice overdue amount (invoices whose due date has passed)"}, "total_hours": {"type": "integer", "description": "Total tracked time, in seconds"}, "unbilled_hours": {"type": "integer", "description": "Total billable hours, that have not been invoiced yet"}, "sales_purchases_chart": {"type": "string", "description": "Sales and purchases data. Used to create charts"}, "total_hours_chart": {"type": "string", "description": "Total tracked hours data. Used to create charts. Time is expressed in seconds."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/native/contacts/{id}/unbilled-amount/": {"get": {"description": "Get the sum amount of all the client's unbilled hours\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `first_name`, `last_name`, `company`, `profession`, `vat_number`, `email__email`, `phones__number`, `addresses__address`, `addresses__city`, `addresses__state`"}, {"required": false, "type": "string", "name": "letter", "in": "query", "description": "Optionally filter by starting letter. Refers to the contact's \"display_name.\""}, {"required": false, "type": "string", "name": "ctype", "in": "query", "description": "Optionally filter by contact type. Either `client` or `supplier`."}, {"required": false, "type": "string", "name": "profession", "in": "query", "description": "Optionally filter by profession."}, {"required": false, "type": "string", "name": "company", "in": "query", "description": "Optionally filter by company."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `display_name`, `profession`, `vat_number`. Prepend a `-` to denote reverse ordering (e.g `-display_name`)."}], "tags": ["contacts"], "summary": "/native/contacts/{id}/unbilled-amount/", "operationId": "contacts_unbilled_amount", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"amount": {"type": "number", "description": "The net amount of unbilled hours for this client"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/native/dashboard/summary/": {"get": {"tags": ["dashboard"], "summary": "/native/dashboard/summary/", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"total_sales": {"type": "number", "description": "The net sums of invoices minus the net sums of credit notes"}, "invoices_due": {"type": "number", "description": "Total invoice amount due"}, "invoices_overdue": {"type": "number", "description": "Total invoice overdue amount (invoices whose due date has passed)"}, "total_hours": {"type": "integer", "description": "Total tracked time, in seconds"}, "unbilled_hours": {"type": "integer", "description": "Total billable hours, that have not been invoiced yet"}, "sales_purchases_chart": {"type": "string", "description": "Sales and purchases data. Used to create charts"}, "total_hours_chart": {"type": "string", "description": "Total tracked hours data. Used to create charts. Time is expressed in seconds."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}, "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page."}, {"required": false, "type": "string", "name": "include_cn", "in": "query", "description": "Whether to include credit notes / purchase credit notes on the sales_purchases_chart calculations. By default they are included. Can be either [\"1\" or \"0\"]"}, {"required": false, "type": "string", "name": "only_unbilled", "in": "query", "description": "Whether to show only unbilled hours in the total hours chart. Disabled by default.Can be either [\"1\" or \"0\"]"}, {"required": false, "type": "string", "name": "period_from", "in": "query", "description": "Optionally filter results from a date onwards.Must be used with the `period_to` parameter, otherwise it won't have any effect."}, {"required": false, "type": "string", "name": "period_to", "in": "query", "description": "Optionally filter results from a date backwards.Must be used with the `period_from` parameter, otherwise it won't have any effect."}], "operationId": "dashboard_summary_list"}}, "/native/invoices/": {"get": {"description": "Get the list of invoices.\n---\nObjects are paginated in a set of 100 records per page by default.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. To get all the results pass the value \"all\"."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `client__display_name`, `documenttype__title`, `series__name`, `number`, `notes`, `items__title`, `items__description`"}, {"required": false, "type": "string", "name": "documenttype", "in": "query", "description": "Optionally filter by document type"}, {"required": false, "type": "string", "name": "series", "in": "query", "description": "Optionally filter by the document's series"}, {"required": false, "type": "string", "name": "draft", "in": "query", "description": "Can be either [\"1\" or \"0\"]"}, {"required": false, "type": "string", "name": "fpaid", "in": "query", "description": "Optionally filter on whether the invoice is paid. Can be either [\"yes\" or \"no\"]"}, {"required": false, "type": "string", "name": "is_void", "in": "query", "description": "Can be either [\"1\" or \"0\"]"}, {"required": false, "type": "string", "name": "overdue", "in": "query", "description": "Optianally filter by whether the invoice is overdue. Can be either [\"yes\" or \"no\"]"}, {"required": false, "type": "string", "name": "client", "in": "query", "description": "Optionally filter by client ID"}, {"required": false, "type": "string", "name": "official", "in": "query", "description": "Optionally filter by whether the invoice's series is the official one or a custom one. Can be either [\"1\" or \"0\"]"}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `date`, `documenttype__title`, `client__display_name`, `total`, `initial`, `net`, `draft`, `paid`, `payable`, `number`, `series__name`, `due_date`. Prepend a `-` to denote reverse ordering (e.g `-date`)."}, {"required": false, "type": "string", "name": "period_from", "in": "query", "description": "Optionally filter results from a date onwards.Must be used with the `period_to` parameter, otherwise it won't have any effect."}, {"required": false, "type": "string", "name": "period_to", "in": "query", "description": "Optionally filter results from a date backwards.Must be used with the `period_from` parameter, otherwise it won't have any effect."}], "tags": ["invoices"], "summary": "/native/invoices/", "operationId": "invoices_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "representation": {"type": "string", "description": "Automatically generated representation string"}, "paid": {"type": "number", "description": "Automatically calculated amount"}, "payable": {"type": "number", "description": "Total payable amount. This amount may differ from the document's total amount in case withholding taxes have been applied."}, "due": {"type": "number", "description": "The unpaid amount of the invoice"}, "status": {"type": "string", "description": "Automatically generated status One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>"}, "date": {"type": "string", "description": "The issue date"}, "due_date": {"type": "string", "description": "Expected payment date"}, "client": {"type": "string", "description": "ID of the associated client"}, "client_display_name": {"type": "string", "description": "The client name as retrieved from the specified client contact or customized for this document"}, "total": {"type": "number", "description": "Automatically calculated amount"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "organization": {"type": "string", "description": "ID of the owning organization"}, "created": {"type": "string", "description": "ISO-formatted creation date & time\n\nTimezone information is included."}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time\n\nTimezone information is included."}, "last_email": {"type": "string", "description": "The date and time the invoice was last sent"}}, "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any."}, "previous": {"type": "string", "description": "URL to the previous page, if any."}, "count": {"type": "integer", "description": "Number of total results."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new invoice.\n---\nYou must specify the theme to use as basis for the invoice.\nYou may override most of the theme settings through the\n`template_settings` group of fields. Any missing setting will get its\ninitial value from the specified theme. The same goes for the `terms`\nand `public_notes` fields as well.\n\n*Tip:* In most cases you only need to provide the theme and\nlet Elorus do the rest.\n\nAs far as the client is concerned, you may choose to omit all fields\nexcept from the client id. In this case the fields will be initialized\nwith values originating from the client record. For example, if you do\nnot specify the `client_email` parameter it will be automatically\ninitialized from the specified contact record. If you provide blank\nvalues (e.g. you do send the `client_email` parameter with an empty\nstring value, Elorus will assume you want to leave this field blank\nand will not make any modifications).\n\nThe invoice initial, net and total values will be calculated\nautomatically and will depend on the calculator mode and the line\nitems. You may correlate each item to a product. In this case you can\nomit the `title`, `description`, `measurement unit` and `value` fields\nto have them match the product record. As with the client fields,\nspecifying any of the above item fields will result in overriding the\ndefault found on the product record.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["documenttype", "date", "client", "calculator_mode", "items", "withholding_taxes", "template_settings"], "type": "object", "properties": {"documenttype": {"type": "string", "description": "ID of the associated document type"}, "series": {"type": "string", "description": "ID of the associated sales series"}, "number": {"type": "string", "description": "Use 0 (zero) for automatic numbering"}, "draft": {"type": "boolean", "description": "If true the document is not considered to be issued"}, "date": {"type": "string", "description": "The issue date"}, "due_date": {"type": "string", "description": "Expected payment date"}, "client": {"type": "string", "description": "ID of the associated client"}, "client_display_name": {"type": "string", "description": "If not provided, the client name will be retrieved from the specified client contact"}, "client_address": {"type": "string", "description": ""}, "client_shipping_address": {"type": "string", "description": ""}, "client_profession": {"type": "string", "description": ""}, "client_vat_number": {"type": "string", "description": ""}, "client_contact_person": {"type": "string", "description": ""}, "client_phone_number": {"type": "string", "description": ""}, "client_email": {"type": "string", "description": ""}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Calculate totals based on initial values\n`total` | Calculate initial values based on total values\n</details>"}, "items": {"items": {"type": "object", "properties": {"unit_discount": {"type": "number", "description": "Absolute value, not percentage; up to 5 decimal places"}, "product": {"type": "string", "description": "ID of the associated product / service"}, "description": {"type": "string", "description": ""}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product"}, "unit_total": {"type": "number", "description": "Used in \"total\" calculation mode; up to 5 decimal places"}, "taxes": {"type": "array", "description": "A list of the applied tax IDs"}, "unit_value": {"type": "number", "description": "Used in \"initial\" calculation mode; up to 5 decimal places"}, "unit_measure": {"type": "string", "description": "Measurement unit One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>"}, "quantity": {"type": "number", "description": "Up to 2 decimal places"}}}, "required": true, "type": "array", "name": "items", "description": "The list of products / services"}, "withholding_taxes": {"items": {"type": "string", "description": ""}, "required": true, "type": "array", "name": "withholding_taxes", "description": "A list of withholding tax IDs to be applied"}, "exchange_rate": {"type": "number", "description": "Will always equal 1.00 for the base currency. Up to 6 decimal places"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form."}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form."}, "notes": {"type": "string", "description": "These notes are private."}, "template_settings": {"type": "object", "description": "The set of appearance settings"}, "trackingcategories": {"items": {"type": "object", "properties": {"option": {"type": "string", "description": "The selected option of the tracking category."}, "trackingcategory": {"type": "string", "description": "ID of the associated tracking category."}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["invoices"], "summary": "/native/invoices/", "operationId": "invoices_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "documenttype": {"type": "string", "description": "ID of the associated document type"}, "series": {"type": "string", "description": "ID of the associated sales series"}, "number": {"type": "string", "description": "Use 0 (zero) for automatic numbering"}, "representation": {"type": "string", "description": "Automatically generated representation string"}, "draft": {"type": "boolean", "description": "If true the document is not considered to be issued"}, "paid": {"type": "number", "description": "Automatically calculated amount"}, "payable": {"type": "number", "description": "Total payable amount. This amount may differ from the document's total amount in case withholding taxes have been applied."}, "status": {"type": "string", "description": "Automatically generated status One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>"}, "date": {"type": "string", "description": "The issue date"}, "due_date": {"type": "string", "description": "Expected payment date"}, "client": {"type": "string", "description": "ID of the associated client"}, "client_display_name": {"type": "string", "description": "If not provided, the client name will be retrieved from the specified client contact"}, "client_address": {"type": "string", "description": ""}, "client_shipping_address": {"type": "string", "description": ""}, "client_profession": {"type": "string", "description": ""}, "client_vat_number": {"type": "string", "description": ""}, "client_contact_person": {"type": "string", "description": ""}, "client_phone_number": {"type": "string", "description": ""}, "client_email": {"type": "string", "description": ""}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Calculate totals based on initial values\n`total` | Calculate initial values based on total values\n</details>"}, "items": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product"}, "product": {"type": "string", "description": "ID of the associated product / service"}, "description": {"type": "string", "description": ""}, "quantity": {"type": "number", "description": "Up to 2 decimal places"}, "unit_value": {"type": "number", "description": "Used in \"initial\" calculation mode; up to 5 decimal places"}, "unit_discount": {"type": "number", "description": "Absolute value, not percentage; up to 5 decimal places"}, "taxes": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "taxes", "description": "A list of the applied tax IDs"}, "unit_total": {"type": "number", "description": "Used in \"total\" calculation mode; up to 5 decimal places"}, "item_net": {"type": "number", "description": "Automatically calculated amount"}, "unit_measure": {"type": "string", "description": "Measurement unit One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>"}}, "description": "The list of products / services"}, "initial": {"type": "number", "description": "Automatically calculated amount"}, "net": {"type": "number", "description": "Automatically calculated amount"}, "total": {"type": "number", "description": "Automatically calculated amount"}, "withholding_taxes": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "withholding_taxes", "description": "A list of withholding tax IDs to be applied"}, "exchange_rate": {"type": "number", "description": "Will always equal 1.00 for the base currency. Up to 6 decimal places"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form."}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form."}, "notes": {"type": "string", "description": "These notes are private."}, "payment_gateways": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "payment_gateways", "description": "A list of payment gateway IDs that can be used to pay the invoice"}, "recurring": {"type": "string", "description": "ID of the recurring record that created this document (if any)"}, "permalink": {"type": "string", "description": "Public URL for clients"}, "organization": {"type": "string", "description": "ID of the owning organization"}, "trackingcategories": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category."}, "option": {"type": "string", "description": "The selected option of the tracking category."}}, "description": "An optional list of tracking categories to classify this record."}, "created": {"type": "string", "description": "ISO-formatted creation date & time\n\nTimezone information is included."}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time\n\nTimezone information is included."}, "template_settings": {"type": "object", "properties": {"hide_description": {"type": "boolean", "description": "Hide the item description column"}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document"}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column"}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column"}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)"}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "unit_measure_appearance": {"type": "string", "description": "Measurement unit column appearance.  One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}, "discount_appearance": {"type": "string", "description": "Discount column appearance.  One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "theme": {"type": "string", "description": "ID of the associated theme"}}, "description": "The set of appearance settings"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/invoices/{id}/": {"get": {"description": "Get a single invoice.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["invoices"], "summary": "/native/invoices/{id}/", "operationId": "invoices_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "documenttype": {"type": "string", "description": "ID of the associated document type"}, "series": {"type": "string", "description": "ID of the associated sales series"}, "number": {"type": "string", "description": "Use 0 (zero) for automatic numbering"}, "representation": {"type": "string", "description": "Automatically generated representation string"}, "draft": {"type": "boolean", "description": "If true the document is not considered to be issued"}, "paid": {"type": "number", "description": "Automatically calculated amount"}, "payable": {"type": "number", "description": "Total payable amount. This amount may differ from the document's total amount in case withholding taxes have been applied."}, "status": {"type": "string", "description": "Automatically generated status One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>"}, "date": {"type": "string", "description": "The issue date"}, "due_date": {"type": "string", "description": "Expected payment date"}, "client": {"type": "string", "description": "ID of the associated client"}, "client_display_name": {"type": "string", "description": "If you change the client and do not specify the field, the client name will be retrieved from the specified client contact"}, "client_address": {"type": "string", "description": ""}, "client_shipping_address": {"type": "string", "description": ""}, "client_profession": {"type": "string", "description": ""}, "client_vat_number": {"type": "string", "description": ""}, "client_contact_person": {"type": "string", "description": ""}, "client_phone_number": {"type": "string", "description": ""}, "client_email": {"type": "string", "description": ""}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Calculate totals based on initial values\n`total` | Calculate initial values based on total values\n</details>"}, "items": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product"}, "product": {"type": "string", "description": "ID of the associated product / service"}, "description": {"type": "string", "description": ""}, "quantity": {"type": "number", "description": "Up to 2 decimal places"}, "unit_value": {"type": "number", "description": "Used in \"initial\" calculation mode; up to 5 decimal places"}, "unit_discount": {"type": "number", "description": "Absolute value, not percentage; up to 5 decimal places"}, "taxes": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "taxes", "description": "A list of the applied tax IDs"}, "unit_total": {"type": "number", "description": "Used in \"total\" calculation mode; up to 5 decimal places"}, "item_net": {"type": "number", "description": "Automatically calculated amount"}, "unit_measure": {"type": "string", "description": "Measurement unit One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>"}}, "description": "The list of products / services"}, "initial": {"type": "number", "description": "Automatically calculated amount"}, "net": {"type": "number", "description": "Automatically calculated amount"}, "total": {"type": "number", "description": "Automatically calculated amount"}, "withholding_taxes": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "withholding_taxes", "description": "A list of withholding tax IDs to be applied"}, "exchange_rate": {"type": "number", "description": "Will always equal 1.00 for the base currency. Up to 6 decimal places"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form."}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form."}, "notes": {"type": "string", "description": "These notes are private."}, "payment_gateways": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "payment_gateways", "description": "A list of payment gateway IDs that can be used to pay the invoice"}, "recurring": {"type": "string", "description": "ID of the recurring record that created this document (if any)"}, "permalink": {"type": "string", "description": "Public URL for clients"}, "organization": {"type": "string", "description": "ID of the owning organization"}, "trackingcategories": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category."}, "option": {"type": "string", "description": "The selected option of the tracking category."}}, "description": "An optional list of tracking categories to classify this record."}, "created": {"type": "string", "description": "ISO-formatted creation date & time\n\nTimezone information is included."}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time\n\nTimezone information is included."}, "template_settings": {"type": "object", "properties": {"hide_description": {"type": "boolean", "description": "Hide the item description column"}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document"}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column"}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column"}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)"}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "unit_measure_appearance": {"type": "string", "description": "Measurement unit column appearance.  One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}, "discount_appearance": {"type": "string", "description": "Discount column appearance.  One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "theme": {"type": "string", "description": "ID of the associated theme"}}, "description": "The set of appearance settings"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update an invoice.\n---\nYou must provide at least the required fields for the record to be\nsuccessfully updated. You may only update draft invoices. To\nchange issued invoices you should first set them back to draft\nusing the partial update action.\n\nWhen changing the client all client fields will be updated based on the\nnew contact record, unless you explicitly specify their values.\n\nTo correctly update the invoice items you must specify them all,\nincluding their IDs and possible changes. Any missing items will be\ndeleted and possible new items will be created.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["documenttype", "client", "calculator_mode", "items", "withholding_taxes", "template_settings", "payment_gateways"], "type": "object", "properties": {"documenttype": {"type": "string", "description": "ID of the associated document type"}, "series": {"type": "string", "description": "ID of the associated sales series"}, "number": {"type": "string", "description": "Use 0 (zero) for automatic numbering"}, "draft": {"type": "boolean", "description": "If true the document is not considered to be issued"}, "date": {"type": "string", "description": "The issue date"}, "due_date": {"type": "string", "description": "Expected payment date"}, "client": {"type": "string", "description": "ID of the associated client"}, "client_display_name": {"type": "string", "description": "If you change the client and do not specify the field, the client name will be retrieved from the specified client contact"}, "client_address": {"type": "string", "description": ""}, "client_shipping_address": {"type": "string", "description": ""}, "client_profession": {"type": "string", "description": ""}, "client_vat_number": {"type": "string", "description": ""}, "client_contact_person": {"type": "string", "description": ""}, "client_phone_number": {"type": "string", "description": ""}, "client_email": {"type": "string", "description": ""}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Calculate totals based on initial values\n`total` | Calculate initial values based on total values\n</details>"}, "items": {"items": {"type": "object", "properties": {"unit_discount": {"type": "number", "description": "Absolute value, not percentage; up to 5 decimal places"}, "product": {"type": "string", "description": "ID of the associated product / service"}, "description": {"type": "string", "description": ""}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product"}, "unit_total": {"type": "number", "description": "Used in \"total\" calculation mode; up to 5 decimal places"}, "taxes": {"type": "array", "description": "A list of the applied tax IDs"}, "unit_value": {"type": "number", "description": "Used in \"initial\" calculation mode; up to 5 decimal places"}, "unit_measure": {"type": "string", "description": "Measurement unit One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>"}, "id": {"type": "string", "description": ""}, "quantity": {"type": "number", "description": "Up to 2 decimal places"}}}, "required": true, "type": "array", "name": "items", "description": "The list of products / services"}, "withholding_taxes": {"items": {"type": "string", "description": ""}, "required": true, "type": "array", "name": "withholding_taxes", "description": "A list of withholding tax IDs to be applied"}, "exchange_rate": {"type": "number", "description": "Will always equal 1.00 for the base currency. Up to 6 decimal places"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form."}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form."}, "notes": {"type": "string", "description": "These notes are private."}, "template_settings": {"type": "object", "description": "The set of appearance settings"}, "payment_gateways": {"items": {"type": "string", "description": ""}, "required": true, "type": "array", "name": "payment_gateways", "description": "A list of payment gateway IDs that can be used to pay the invoice"}, "trackingcategories": {"items": {"type": "object", "properties": {"option": {"type": "string", "description": "The selected option of the tracking category."}, "trackingcategory": {"type": "string", "description": "ID of the associated tracking category."}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["invoices"], "summary": "/native/invoices/{id}/", "operationId": "invoices_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "documenttype": {"type": "string", "description": "ID of the associated document type"}, "series": {"type": "string", "description": "ID of the associated sales series"}, "number": {"type": "string", "description": "Use 0 (zero) for automatic numbering"}, "representation": {"type": "string", "description": "Automatically generated representation string"}, "draft": {"type": "boolean", "description": "If true the document is not considered to be issued"}, "paid": {"type": "number", "description": "Automatically calculated amount"}, "payable": {"type": "number", "description": "Total payable amount. This amount may differ from the document's total amount in case withholding taxes have been applied."}, "status": {"type": "string", "description": "Automatically generated status One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>"}, "date": {"type": "string", "description": "The issue date"}, "due_date": {"type": "string", "description": "Expected payment date"}, "client": {"type": "string", "description": "ID of the associated client"}, "client_display_name": {"type": "string", "description": "If you change the client and do not specify the field, the client name will be retrieved from the specified client contact"}, "client_address": {"type": "string", "description": ""}, "client_shipping_address": {"type": "string", "description": ""}, "client_profession": {"type": "string", "description": ""}, "client_vat_number": {"type": "string", "description": ""}, "client_contact_person": {"type": "string", "description": ""}, "client_phone_number": {"type": "string", "description": ""}, "client_email": {"type": "string", "description": ""}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Calculate totals based on initial values\n`total` | Calculate initial values based on total values\n</details>"}, "items": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product"}, "product": {"type": "string", "description": "ID of the associated product / service"}, "description": {"type": "string", "description": ""}, "quantity": {"type": "number", "description": "Up to 2 decimal places"}, "unit_value": {"type": "number", "description": "Used in \"initial\" calculation mode; up to 5 decimal places"}, "unit_discount": {"type": "number", "description": "Absolute value, not percentage; up to 5 decimal places"}, "taxes": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "taxes", "description": "A list of the applied tax IDs"}, "unit_total": {"type": "number", "description": "Used in \"total\" calculation mode; up to 5 decimal places"}, "item_net": {"type": "number", "description": "Automatically calculated amount"}, "unit_measure": {"type": "string", "description": "Measurement unit One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>"}}, "description": "The list of products / services"}, "initial": {"type": "number", "description": "Automatically calculated amount"}, "net": {"type": "number", "description": "Automatically calculated amount"}, "total": {"type": "number", "description": "Automatically calculated amount"}, "withholding_taxes": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "withholding_taxes", "description": "A list of withholding tax IDs to be applied"}, "exchange_rate": {"type": "number", "description": "Will always equal 1.00 for the base currency. Up to 6 decimal places"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form."}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form."}, "notes": {"type": "string", "description": "These notes are private."}, "payment_gateways": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "payment_gateways", "description": "A list of payment gateway IDs that can be used to pay the invoice"}, "recurring": {"type": "string", "description": "ID of the recurring record that created this document (if any)"}, "permalink": {"type": "string", "description": "Public URL for clients"}, "organization": {"type": "string", "description": "ID of the owning organization"}, "trackingcategories": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category."}, "option": {"type": "string", "description": "The selected option of the tracking category."}}, "description": "An optional list of tracking categories to classify this record."}, "created": {"type": "string", "description": "ISO-formatted creation date & time\n\nTimezone information is included."}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time\n\nTimezone information is included."}, "template_settings": {"type": "object", "properties": {"hide_description": {"type": "boolean", "description": "Hide the item description column"}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document"}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column"}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column"}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)"}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "unit_measure_appearance": {"type": "string", "description": "Measurement unit column appearance.  One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}, "discount_appearance": {"type": "string", "description": "Discount column appearance.  One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "theme": {"type": "string", "description": "ID of the associated theme"}}, "description": "The set of appearance settings"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update an invoice.\n---\nUse this action to update the invoice appearance. You can also\nset the private notes or change the status. Because this method does\nnot affect the invoice items and values you can always use it;\non the other hand, the full update action is only available when the\ndocument is in draft mode. Only notes and template settings updates\nare available in case of a void invoice document.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"draft": {"type": "boolean", "description": "If true the document is not considered to be issued"}, "notes": {"type": "string", "description": "These notes are private."}, "template_settings": {"type": "object", "description": "The set of appearance settings"}, "payment_gateways": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "payment_gateways", "description": "A list of payment gateway IDs that can be used to pay the invoice"}, "trackingcategories": {"items": {"type": "object", "properties": {"option": {"type": "string", "description": "The selected option of the tracking category."}, "trackingcategory": {"type": "string", "description": "ID of the associated tracking category."}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["invoices"], "summary": "/native/invoices/{id}/", "operationId": "invoices_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "draft": {"type": "boolean", "description": "If true the document is not considered to be issued"}, "status": {"type": "string", "description": "Automatically generated status"}, "notes": {"type": "string", "description": "These notes are private."}, "payment_gateways": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "payment_gateways", "description": "A list of payment gateway IDs that can be used to pay the invoice"}, "representation": {"type": "string", "description": "Automatically generated representation string"}, "organization": {"type": "string", "description": "ID of the owning organization"}, "trackingcategories": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category."}, "option": {"type": "string", "description": "The selected option of the tracking category."}}, "description": "An optional list of tracking categories to classify this record."}, "created": {"type": "string", "description": "ISO-formatted creation date & time\n\nTimezone information is included."}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time\n\nTimezone information is included."}, "template_settings": {"type": "object", "properties": {"hide_description": {"type": "boolean", "description": "Hide the item description column"}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document"}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column"}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column"}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)"}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "unit_measure_appearance": {"type": "string", "description": "Measurement unit column appearance.  One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}, "discount_appearance": {"type": "string", "description": "Discount column appearance.  One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "theme": {"type": "string", "description": "ID of the associated theme"}}, "description": "The set of appearance settings"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete an invoice.\n---\nNote that you cannot delete invoices marked as issued\n(i.e. the `draft` field is set to `False`).", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["invoices"], "summary": "/native/invoices/{id}/", "operationId": "invoices_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/invoices/{id}/email/": {"get": {"description": "Email the document to a client.\n---\nYou may retrieve the default email subject, message etc. with a GET\nrequest. Use the POST request to queue the email for sending.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `client__display_name`, `documenttype__title`, `series__name`, `number`, `notes`, `items__title`, `items__description`"}, {"required": false, "type": "string", "name": "documenttype", "in": "query", "description": "Optionally filter by document type"}, {"required": false, "type": "string", "name": "series", "in": "query", "description": "Optionally filter by the document's series"}, {"required": false, "type": "string", "name": "draft", "in": "query", "description": "Can be either [\"1\" or \"0\"]"}, {"required": false, "type": "string", "name": "fpaid", "in": "query", "description": "Optionally filter on whether the invoice is paid. Can be either [\"yes\" or \"no\"]"}, {"required": false, "type": "string", "name": "is_void", "in": "query", "description": "Can be either [\"1\" or \"0\"]"}, {"required": false, "type": "string", "name": "overdue", "in": "query", "description": "Optianally filter by whether the invoice is overdue. Can be either [\"yes\" or \"no\"]"}, {"required": false, "type": "string", "name": "client", "in": "query", "description": "Optionally filter by client ID"}, {"required": false, "type": "string", "name": "official", "in": "query", "description": "Optionally filter by whether the invoice's series is the official one or a custom one. Can be either [\"1\" or \"0\"]"}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `date`, `documenttype__title`, `client__display_name`, `total`, `initial`, `net`, `draft`, `paid`, `payable`, `number`, `series__name`, `due_date`. Prepend a `-` to denote reverse ordering (e.g `-date`)."}, {"required": false, "type": "string", "name": "period_from", "in": "query", "description": "Optionally filter results from a date onwards.Must be used with the `period_to` parameter, otherwise it won't have any effect."}, {"required": false, "type": "string", "name": "period_to", "in": "query", "description": "Optionally filter results from a date backwards.Must be used with the `period_from` parameter, otherwise it won't have any effect."}], "tags": ["invoices"], "summary": "/native/invoices/{id}/email/", "operationId": "invoices_email_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"to": {"type": "string", "description": "The default recipient email address"}, "subject": {"type": "string", "description": "The default email subject"}, "message": {"type": "string", "description": "The default email message"}, "reply_to": {"type": "string", "description": "A possible response from the recipients will be sent to this email address"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Email the document to a client.\n---\nYou may retrieve the default email subject, message etc. with a GET\nrequest. Use the POST request to queue the email for sending.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["to", "cc", "bcc", "subject", "message", "attach_pdf", "attachments"], "type": "object", "properties": {"to": {"type": "string", "description": "The recipient email address"}, "store_to": {"type": "boolean", "description": "Store the recipient address on the client contact for future use"}, "cc": {"items": {"type": "string", "description": ""}, "required": true, "type": "array", "name": "cc", "description": "A list of email addresses to carbon-copy the email to"}, "bcc": {"items": {"type": "string", "description": ""}, "required": true, "type": "array", "name": "bcc", "description": "A list of email addresses to blind carbon-copy the email to"}, "subject": {"type": "string", "description": "The email subject"}, "message": {"type": "string", "description": "The email message"}, "attach_pdf": {"type": "boolean", "description": "Whether to include the PDF version of the document as attachment or not"}, "attachments": {"items": {"type": "string", "description": ""}, "required": true, "type": "array", "name": "attachments", "description": "A list of invoice attachment IDs to attach in the email"}}}, "name": "data", "in": "body"}], "tags": ["invoices"], "summary": "/native/invoices/{id}/email/", "operationId": "invoices_email_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"to": {"type": "string", "description": "The recipient email address"}, "store_to": {"type": "boolean", "description": "Store the recipient address on the client contact for future use"}, "cc": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "cc", "description": "A list of email addresses to carbon-copy the email to"}, "bcc": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "bcc", "description": "A list of email addresses to blind carbon-copy the email to"}, "reply_to": {"type": "string", "description": "A possible response from the recipients will be sent to this email address"}, "subject": {"type": "string", "description": "The email subject"}, "message": {"type": "string", "description": "The email message"}, "attach_pdf": {"type": "boolean", "description": "Whether to include the PDF version of the document as attachment or not"}, "attachments": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "attachments", "description": "A list of invoice attachment IDs to attach in the email"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/invoices/{id}/html/": {"get": {"description": "Get the document as html\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `client__display_name`, `documenttype__title`, `series__name`, `number`, `notes`, `items__title`, `items__description`"}, {"required": false, "type": "string", "name": "documenttype", "in": "query", "description": "Optionally filter by document type"}, {"required": false, "type": "string", "name": "series", "in": "query", "description": "Optionally filter by the document's series"}, {"required": false, "type": "string", "name": "draft", "in": "query", "description": "Can be either [\"1\" or \"0\"]"}, {"required": false, "type": "string", "name": "fpaid", "in": "query", "description": "Optionally filter on whether the invoice is paid. Can be either [\"yes\" or \"no\"]"}, {"required": false, "type": "string", "name": "is_void", "in": "query", "description": "Can be either [\"1\" or \"0\"]"}, {"required": false, "type": "string", "name": "overdue", "in": "query", "description": "Optianally filter by whether the invoice is overdue. Can be either [\"yes\" or \"no\"]"}, {"required": false, "type": "string", "name": "client", "in": "query", "description": "Optionally filter by client ID"}, {"required": false, "type": "string", "name": "official", "in": "query", "description": "Optionally filter by whether the invoice's series is the official one or a custom one. Can be either [\"1\" or \"0\"]"}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `date`, `documenttype__title`, `client__display_name`, `total`, `initial`, `net`, `draft`, `paid`, `payable`, `number`, `series__name`, `due_date`. Prepend a `-` to denote reverse ordering (e.g `-date`)."}, {"required": false, "type": "string", "name": "period_from", "in": "query", "description": "Optionally filter results from a date onwards.Must be used with the `period_to` parameter, otherwise it won't have any effect."}, {"required": false, "type": "string", "name": "period_to", "in": "query", "description": "Optionally filter results from a date backwards.Must be used with the `period_from` parameter, otherwise it won't have any effect."}], "tags": ["invoices"], "summary": "/native/invoices/{id}/html/", "operationId": "invoices_html", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"html": {"type": "string", "description": "The resource in html representation"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/native/invoices/{id}/pdf/": {"get": {"description": "Get the document as PDF\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `client__display_name`, `documenttype__title`, `series__name`, `number`, `notes`, `items__title`, `items__description`"}, {"required": false, "type": "string", "name": "documenttype", "in": "query", "description": "Optionally filter by document type"}, {"required": false, "type": "string", "name": "series", "in": "query", "description": "Optionally filter by the document's series"}, {"required": false, "type": "string", "name": "draft", "in": "query", "description": "Can be either [\"1\" or \"0\"]"}, {"required": false, "type": "string", "name": "fpaid", "in": "query", "description": "Optionally filter on whether the invoice is paid. Can be either [\"yes\" or \"no\"]"}, {"required": false, "type": "string", "name": "is_void", "in": "query", "description": "Can be either [\"1\" or \"0\"]"}, {"required": false, "type": "string", "name": "overdue", "in": "query", "description": "Optianally filter by whether the invoice is overdue. Can be either [\"yes\" or \"no\"]"}, {"required": false, "type": "string", "name": "client", "in": "query", "description": "Optionally filter by client ID"}, {"required": false, "type": "string", "name": "official", "in": "query", "description": "Optionally filter by whether the invoice's series is the official one or a custom one. Can be either [\"1\" or \"0\"]"}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `date`, `documenttype__title`, `client__display_name`, `total`, `initial`, `net`, `draft`, `paid`, `payable`, `number`, `series__name`, `due_date`. Prepend a `-` to denote reverse ordering (e.g `-date`)."}, {"required": false, "type": "string", "name": "period_from", "in": "query", "description": "Optionally filter results from a date onwards.Must be used with the `period_to` parameter, otherwise it won't have any effect."}, {"required": false, "type": "string", "name": "period_to", "in": "query", "description": "Optionally filter results from a date backwards.Must be used with the `period_from` parameter, otherwise it won't have any effect."}], "tags": ["invoices"], "summary": "/native/invoices/{id}/pdf/", "operationId": "invoices_pdf", "responses": {"200": {"description": "Success"}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/native/invoices/{id}/void/": {"put": {"description": "Mark as void / Un-Void\n---\nMark the document as void or convert it from void back to issued.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["client", "client_display_name"], "type": "object", "properties": {"date": {"type": "string", "description": "The issue date"}, "due_date": {"type": "string", "description": "Expected payment date"}, "client": {"type": "string", "description": "ID of the associated client"}, "client_display_name": {"type": "string", "description": "The client name as retrieved from the specified client contact or customized for this document"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}}}, "name": "data", "in": "body"}], "tags": ["invoices"], "summary": "/native/invoices/{id}/void/", "operationId": "invoices_mark_void", "consumes": ["application/json"], "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/notifications/": {"get": {"description": "Get the list of user notifications across all organizations.\n---\nObjects are paginated in a set of 100 records per page by default.", "parameters": [{"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. To get all the results pass the value \"all\"."}, {"required": false, "type": "string", "name": "organization", "in": "query", "description": "Optionally filter by organization ID"}], "tags": ["notifications"], "summary": "/native/notifications/", "operationId": "notifications_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "title": {"type": "string", "description": "Title of the notification"}, "native_message": {"type": "string", "description": "Formatted message of the notification"}, "tag": {"type": "string", "description": "Further distinguish one notification from another"}, "created": {"type": "string", "description": "ISO-formatted creation date & time\n\nTimezone information is included."}, "read": {"type": "string", "description": "Was this notification read and when?\n\nTimezone information is included."}}, "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any."}, "previous": {"type": "string", "description": "URL to the previous page, if any."}, "count": {"type": "integer", "description": "Number of total results."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/native/notifications/mark-read/": {"put": {"description": "Mark all notifications as read.\n---\nA 204 response is returned to indicate the operation\nwas successful.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"read": {"type": "string", "description": "Was this notification read and when?\n\nTimezone information is included."}}}, "name": "data", "in": "body"}], "tags": ["notifications"], "summary": "/native/notifications/mark-read/", "operationId": "notifications_bulk_mark_read", "consumes": ["application/json"], "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/notifications/pushdevices/": {"post": {"description": "Register a new device that receives notifications\n---", "parameters": [{"schema": {"required": ["registration_id"], "type": "object", "properties": {"registration_id": {"type": "string", "description": "The FCM registration id associated with the device"}}}, "name": "data", "in": "body"}], "tags": ["notifications"], "summary": "/native/notifications/pushdevices/", "operationId": "notifications_pushdevices_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "integer", "description": ""}, "registration_id": {"type": "string", "description": "The FCM registration id associated with the device"}, "user": {"type": "string", "description": ""}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/notifications/pushdevices/{id}/": {"delete": {"description": "Un-register a device to make it stop receiving notifications\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}], "tags": ["notifications"], "summary": "/native/notifications/pushdevices/{id}/", "operationId": "notifications_pushdevices_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/notifications/{id}/": {"get": {"description": "Get a single notification.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["notifications"], "summary": "/native/notifications/{id}/", "operationId": "notifications_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "title": {"type": "string", "description": "Title of the notification"}, "native_message": {"type": "string", "description": "Formatted message of the notification"}, "tag": {"type": "string", "description": "Further distinguish one notification from another"}, "created": {"type": "string", "description": "ISO-formatted creation date & time\n\nTimezone information is included."}, "read": {"type": "string", "description": "Was this notification read and when?\n\nTimezone information is included."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "delete": {"description": "Delete a single notification.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["notifications"], "summary": "/native/notifications/{id}/", "operationId": "notifications_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/notifications/{id}/mark-read/": {"put": {"description": "Mark a notification as read.\n---\nA 400 response status will be returned if the notification\nis already marked.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"read": {"type": "string", "description": "Was this notification read and when?\n\nTimezone information is included."}}}, "name": "data", "in": "body"}], "tags": ["notifications"], "summary": "/native/notifications/{id}/mark-read/", "operationId": "notifications_mark_read", "consumes": ["application/json"], "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/organization/": {"post": {"description": "Create organization.", "parameters": [{"schema": {"required": ["subdomain", "company", "country"], "type": "object", "properties": {"subdomain": {"type": "string", "description": "A unique URL for the organization. You will be able to login and use the application through that URL."}, "company": {"type": "string", "description": ""}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`MK` | Republic of Macedonia\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>"}, "company_size": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`sole` | Sole\n`2-10` | 2-10\n`11-50` | 11-50\n`51+` | 51+\n</details>"}, "industry": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`agriculture` | Farming / Agriculture\n`fishery` | Fishery\n`actor` | Actor / Performer\n`art-design` | Art & Graphical Design services\n`photography` | Photography services\n`music` | Musician / Voice artist / Music services\n`automotive` | Automotive store\n`auto-parts` | Auto parts & accessories store\n`auto-mechanic` | Auto mechanic / Auto repair\n`civil-engineer` | Civil engineer / Architect\n`construction` | Construction firm\n`maintainance-technician` | Maintenance technician (Carpenter, Plumber etc)\n`electronics-repair` | Electronic equipment repair\n`electronics` | Electronics & Consumer electronics store\n`entertainment-recreation` | Entertainment & Recreation facilities\n`entertainment-services` | Entertainment services\n`fashion-beauty` | Fashion & Beauty store\n`fashion-design-services` | Fashion design services\n`hair-beauty-services` | Hair & Beauty services\n`accounting` | Accounting services\n`financial-banking` | Financial & Banking\n`catering-services` | Catering services\n`food-beverage` | Food & Beverage retail store\n`food-beverage-service` | Cafe / Bar / Restaurant etc.\n`doctor` | Doctor\n`healthcare` | Healthcare services\n`medical-equipment` | Pharmaceutical & Medical equipment\n`marketing` | Marketing services\n`media-communications` | Media & Communication services\n`sports` | Sports & fitness facilities\n`sports-services` | Sports agency / Sports club etc.\n`sports-equipment` | Sports equipment store\n`information-technology` | IT & Software engineering services\n`technology` | Other technology services\n`telecommunications` | Telecommunication services\n`web-services` | Web & Cloud services\n`manufacturing` | Manufacturing / Small industry / Lab\n`non-profit` | Non profit\n`retail` | Retail\n`wholesale` | Wholesale trades\n`writer` | Author / Writer / Journalist etc.\n`publishing` | Publishing\n`consulting` | Consulting services\n`education` | Education services\n`employment` | Employment & Recruitment services\n`energy` | Energy\n`insurance` | Insurance\n`legal` | Legal services\n`real-estate` | Real Estate\n`services` | Other services\n`hospitality` | Accommodation & Hospitality services\n`tourism` | Tourism & travel services\n`transportation` | Transportation services\n</details>"}}}, "name": "data", "in": "body"}], "tags": ["organization"], "summary": "/native/organization/", "operationId": "organization_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "company": {"type": "string", "description": "The company name"}, "subdomain": {"type": "string", "description": "The unique URL of the organization"}, "currency_code": {"type": "string", "description": "You cannot change the currency once you have added financial transactions (e.g. issued invoices, cash payments etc) One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "currency_before_value": {"type": "boolean", "description": "If checked, currency will be displayed before the amount (e.g. $30 instead of 30$)"}, "is_active": {"type": "boolean", "description": "Whether the organization is active or not"}, "demo": {"type": "boolean", "description": "Designates whether this is a demo organization. Demo organizations can be used by third party developers to test the API or by elorus users to have a trial on the application."}, "created": {"type": "string", "description": "ISO-formatted creation date & time\n\nTimezone information is included."}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time\n\nTimezone information is included."}, "tt_enabled": {"type": "string", "description": "Whether time tracking is enabled for this organization"}, "user_role": {"type": "object", "properties": {"core_role": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`manager` | Manager\n`staff` | Staff\n`partner` | Partner\n</details>"}, "custom_role": {"type": "string", "description": "The organizationrole id or blank(empty string)"}, "active": {"type": "boolean", "description": "Whether the role is active or not"}, "invitation_email": {"type": "string", "description": "The email address used to invite the user to join the organization"}, "invitation_status": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`ini` | Initialized\n`pen` | Pending\n`acc` | Accepted\n</details>"}, "contacts": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "contacts", "description": "A list of the contact IDs that the user can access. The `restrict_contact_access` property must also be true for this list to be in effect."}, "restrict_contact_access": {"type": "boolean", "description": "Whether the role has access only to the contacts in the `contacts` field"}, "permissions": {"type": "object", "properties": {"invoicing_invoice": {"type": "object", "properties": {"add": {"type": "boolean", "description": ""}, "view": {"type": "boolean", "description": ""}, "change": {"type": "boolean", "description": ""}, "delete": {"type": "boolean", "description": ""}, "email": {"type": "boolean", "description": ""}}, "description": "Permissions of the user for invoicing_invoice"}, "contacts_contact": {"type": "object", "properties": {"add": {"type": "boolean", "description": ""}, "view": {"type": "boolean", "description": ""}, "change": {"type": "boolean", "description": ""}, "delete": {"type": "boolean", "description": ""}}, "description": "Permissions of the user for contacts_contact"}, "user_organization": {"type": "object", "properties": {"add": {"type": "boolean", "description": ""}, "view": {"type": "boolean", "description": ""}, "change": {"type": "boolean", "description": ""}}, "description": "Permissions of the user for user_organization"}, "tracking_project": {"type": "object", "properties": {"add": {"type": "boolean", "description": ""}, "view": {"type": "boolean", "description": ""}, "change": {"type": "boolean", "description": ""}, "delete": {"type": "boolean", "description": ""}}, "description": "Permissions of the user for tracking_project"}, "tracking_task": {"type": "object", "properties": {"add": {"type": "boolean", "description": ""}, "view": {"type": "boolean", "description": ""}, "change": {"type": "boolean", "description": ""}, "delete": {"type": "boolean", "description": ""}}, "description": "Permissions of the user for tracking_task"}, "tracking_timeentry": {"type": "object", "properties": {"add": {"type": "boolean", "description": ""}, "view": {"type": "boolean", "description": ""}, "change": {"type": "boolean", "description": ""}, "delete": {"type": "boolean", "description": ""}}, "description": "Permissions of the user for tracking_timeentry"}, "tracking_time": {"type": "object", "properties": {"manage": {"type": "boolean", "description": ""}}, "description": "Permissions of the user for tracking_time"}}, "description": "The permissions the user has based on his/her role"}}, "description": "The role of the user in the organization"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/organization/settings/": {"get": {"description": "Get organization settings.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page."}], "tags": ["organization"], "summary": "/native/organization/settings/", "operationId": "organization_settings_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"contact_display_format": {"type": "string", "description": "How you want your contacts to appear in the contacts page and in all contact / client / supplier selection boxes across the application. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`f l - c` | FName LName - Company\n`l, f - c` | Lname, FName - Company\n`l f - c` | Lname FName - Company\n`c - f l` | Company - FName LName\n`c - l, f` | Company - LName, FName\n`c - l f` | Company - LName FName\n</details>"}, "address_format": {"type": "string", "description": "The format in which your company's and your contacts' addresses will be displayed. Predefined placeholders, space characters and ',', '.', '-', '|' are allowed."}, "calculator_mode": {"type": "string", "description": "Set how Elorus calculates values in your Estimates, Invoices, Purchases & Recurring documents. This is a default value that you can override for each document. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Calculate totals based on initial values\n`total` | Calculate initial values based on total values\n</details>"}, "draft_auto_numbering": {"type": "boolean", "description": "If enabled, Elorus will always allocate a number when creating a new document. Disable this setting if you want your new documents to receive a number only after they're issued."}, "strict_sequential_numbering": {"type": "boolean", "description": "If enabled, invoices & credit notes will only be issued if they follow a valid sequential numbering."}, "invoice_estimate": {"type": "boolean", "description": "A new draft invoice will be automatically created every time an estimate gets accepted."}, "numbering_padding": {"type": "string", "description": "The total number of numerals in the document's number (e.g. \"005\" or \"00005\"). One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`3` | 3 digits\n`4` | 4 digits\n`5` | 5 digits\n`6` | 6 digits\n`7` | 7 digits\n`8` | 8 digits\n`9` | 9 digits\n`10` | 10 digits\n</details>"}, "negative_stock": {"type": "boolean", "description": "If you disable this option, Elorus will prevent you from invoicing products that are out of stock. The setting applies only to products / services whose stock is managed."}, "slack_notifications": {"type": "boolean", "description": "Send a slack message whenever a new notification is created."}, "is_slack_enabled": {"type": "string", "description": ""}, "hourly_rate": {"type": "number", "description": "Default rate of billable hour. This value will be pre selected when creating a new project or task."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update organization settings.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["draft_auto_numbering", "negative_stock"], "type": "object", "properties": {"contact_display_format": {"type": "string", "description": "How you want your contacts to appear in the contacts page and in all contact / client / supplier selection boxes across the application. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`f l - c` | FName LName - Company\n`l, f - c` | Lname, FName - Company\n`l f - c` | Lname FName - Company\n`c - f l` | Company - FName LName\n`c - l, f` | Company - LName, FName\n`c - l f` | Company - LName FName\n</details>"}, "address_format": {"type": "string", "description": "The format in which your company's and your contacts' addresses will be displayed. Predefined placeholders, space characters and ',', '.', '-', '|' are allowed."}, "calculator_mode": {"type": "string", "description": "Set how Elorus calculates values in your Estimates, Invoices, Purchases & Recurring documents. This is a default value that you can override for each document. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Calculate totals based on initial values\n`total` | Calculate initial values based on total values\n</details>"}, "draft_auto_numbering": {"type": "boolean", "description": "If enabled, Elorus will always allocate a number when creating a new document. Disable this setting if you want your new documents to receive a number only after they're issued."}, "strict_sequential_numbering": {"type": "boolean", "description": "If enabled, invoices & credit notes will only be issued if they follow a valid sequential numbering."}, "invoice_estimate": {"type": "boolean", "description": "A new draft invoice will be automatically created every time an estimate gets accepted."}, "numbering_padding": {"type": "string", "description": "The total number of numerals in the document's number (e.g. \"005\" or \"00005\"). One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`3` | 3 digits\n`4` | 4 digits\n`5` | 5 digits\n`6` | 6 digits\n`7` | 7 digits\n`8` | 8 digits\n`9` | 9 digits\n`10` | 10 digits\n</details>"}, "negative_stock": {"type": "boolean", "description": "If you disable this option, Elorus will prevent you from invoicing products that are out of stock. The setting applies only to products / services whose stock is managed."}, "slack_notifications": {"type": "boolean", "description": "Send a slack message whenever a new notification is created."}, "hourly_rate": {"type": "number", "description": "Default rate of billable hour. This value will be pre selected when creating a new project or task."}}}, "name": "data", "in": "body"}], "tags": ["organization"], "summary": "/native/organization/settings/", "operationId": "organization_settings_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"contact_display_format": {"type": "string", "description": "How you want your contacts to appear in the contacts page and in all contact / client / supplier selection boxes across the application. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`f l - c` | FName LName - Company\n`l, f - c` | Lname, FName - Company\n`l f - c` | Lname FName - Company\n`c - f l` | Company - FName LName\n`c - l, f` | Company - LName, FName\n`c - l f` | Company - LName FName\n</details>"}, "address_format": {"type": "string", "description": "The format in which your company's and your contacts' addresses will be displayed. Predefined placeholders, space characters and ',', '.', '-', '|' are allowed."}, "calculator_mode": {"type": "string", "description": "Set how Elorus calculates values in your Estimates, Invoices, Purchases & Recurring documents. This is a default value that you can override for each document. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Calculate totals based on initial values\n`total` | Calculate initial values based on total values\n</details>"}, "draft_auto_numbering": {"type": "boolean", "description": "If enabled, Elorus will always allocate a number when creating a new document. Disable this setting if you want your new documents to receive a number only after they're issued."}, "strict_sequential_numbering": {"type": "boolean", "description": "If enabled, invoices & credit notes will only be issued if they follow a valid sequential numbering."}, "invoice_estimate": {"type": "boolean", "description": "A new draft invoice will be automatically created every time an estimate gets accepted."}, "numbering_padding": {"type": "string", "description": "The total number of numerals in the document's number (e.g. \"005\" or \"00005\"). One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`3` | 3 digits\n`4` | 4 digits\n`5` | 5 digits\n`6` | 6 digits\n`7` | 7 digits\n`8` | 8 digits\n`9` | 9 digits\n`10` | 10 digits\n</details>"}, "negative_stock": {"type": "boolean", "description": "If you disable this option, Elorus will prevent you from invoicing products that are out of stock. The setting applies only to products / services whose stock is managed."}, "slack_notifications": {"type": "boolean", "description": "Send a slack message whenever a new notification is created."}, "is_slack_enabled": {"type": "string", "description": ""}, "hourly_rate": {"type": "number", "description": "Default rate of billable hour. This value will be pre selected when creating a new project or task."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update organization settings.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"contact_display_format": {"type": "string", "description": "How you want your contacts to appear in the contacts page and in all contact / client / supplier selection boxes across the application. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`f l - c` | FName LName - Company\n`l, f - c` | Lname, FName - Company\n`l f - c` | Lname FName - Company\n`c - f l` | Company - FName LName\n`c - l, f` | Company - LName, FName\n`c - l f` | Company - LName FName\n</details>"}, "address_format": {"type": "string", "description": "The format in which your company's and your contacts' addresses will be displayed. Predefined placeholders, space characters and ',', '.', '-', '|' are allowed."}, "calculator_mode": {"type": "string", "description": "Set how Elorus calculates values in your Estimates, Invoices, Purchases & Recurring documents. This is a default value that you can override for each document. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Calculate totals based on initial values\n`total` | Calculate initial values based on total values\n</details>"}, "draft_auto_numbering": {"type": "boolean", "description": "If enabled, Elorus will always allocate a number when creating a new document. Disable this setting if you want your new documents to receive a number only after they're issued."}, "strict_sequential_numbering": {"type": "boolean", "description": "If enabled, invoices & credit notes will only be issued if they follow a valid sequential numbering."}, "invoice_estimate": {"type": "boolean", "description": "A new draft invoice will be automatically created every time an estimate gets accepted."}, "numbering_padding": {"type": "string", "description": "The total number of numerals in the document's number (e.g. \"005\" or \"00005\"). One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`3` | 3 digits\n`4` | 4 digits\n`5` | 5 digits\n`6` | 6 digits\n`7` | 7 digits\n`8` | 8 digits\n`9` | 9 digits\n`10` | 10 digits\n</details>"}, "negative_stock": {"type": "boolean", "description": "If you disable this option, Elorus will prevent you from invoicing products that are out of stock. The setting applies only to products / services whose stock is managed."}, "slack_notifications": {"type": "boolean", "description": "Send a slack message whenever a new notification is created."}, "hourly_rate": {"type": "number", "description": "Default rate of billable hour. This value will be pre selected when creating a new project or task."}}}, "name": "data", "in": "body"}], "tags": ["organization"], "summary": "/native/organization/settings/", "operationId": "organization_settings_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"contact_display_format": {"type": "string", "description": "How you want your contacts to appear in the contacts page and in all contact / client / supplier selection boxes across the application. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`f l - c` | FName LName - Company\n`l, f - c` | Lname, FName - Company\n`l f - c` | Lname FName - Company\n`c - f l` | Company - FName LName\n`c - l, f` | Company - LName, FName\n`c - l f` | Company - LName FName\n</details>"}, "address_format": {"type": "string", "description": "The format in which your company's and your contacts' addresses will be displayed. Predefined placeholders, space characters and ',', '.', '-', '|' are allowed."}, "calculator_mode": {"type": "string", "description": "Set how Elorus calculates values in your Estimates, Invoices, Purchases & Recurring documents. This is a default value that you can override for each document. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Calculate totals based on initial values\n`total` | Calculate initial values based on total values\n</details>"}, "draft_auto_numbering": {"type": "boolean", "description": "If enabled, Elorus will always allocate a number when creating a new document. Disable this setting if you want your new documents to receive a number only after they're issued."}, "strict_sequential_numbering": {"type": "boolean", "description": "If enabled, invoices & credit notes will only be issued if they follow a valid sequential numbering."}, "invoice_estimate": {"type": "boolean", "description": "A new draft invoice will be automatically created every time an estimate gets accepted."}, "numbering_padding": {"type": "string", "description": "The total number of numerals in the document's number (e.g. \"005\" or \"00005\"). One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`3` | 3 digits\n`4` | 4 digits\n`5` | 5 digits\n`6` | 6 digits\n`7` | 7 digits\n`8` | 8 digits\n`9` | 9 digits\n`10` | 10 digits\n</details>"}, "negative_stock": {"type": "boolean", "description": "If you disable this option, Elorus will prevent you from invoicing products that are out of stock. The setting applies only to products / services whose stock is managed."}, "slack_notifications": {"type": "boolean", "description": "Send a slack message whenever a new notification is created."}, "is_slack_enabled": {"type": "string", "description": ""}, "hourly_rate": {"type": "number", "description": "Default rate of billable hour. This value will be pre selected when creating a new project or task."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/user/": {"get": {"description": "Get user profile.\n---", "parameters": [{"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page."}], "tags": ["user"], "summary": "/native/user/", "operationId": "user_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "email": {"type": "string", "description": "When changing your email address, a new verification code will be sent to the new email address. You should verify the address within 10 days, otherwise your account will be suspended without any further notice."}, "first_name": {"type": "string", "description": ""}, "last_name": {"type": "string", "description": ""}, "phone_number": {"type": "string", "description": ""}, "date_joined": {"type": "string", "description": "\n\nTimezone information is included."}, "timezone": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`Africa/Abidjan` | Africa/Abidjan\n`Africa/Accra` | Africa/Accra\n`Africa/Addis_Ababa` | Africa/Addis_Ababa\n`Africa/Algiers` | Africa/Algiers\n`Africa/Asmara` | Africa/Asmara\n`Africa/Bamako` | Africa/Bamako\n`Africa/Bangui` | Africa/Bangui\n`Africa/Banjul` | Africa/Banjul\n`Africa/Bissau` | Africa/Bissau\n`Africa/Blantyre` | Africa/Blantyre\n`Africa/Brazzaville` | Africa/Brazzaville\n`Africa/Bujumbura` | Africa/Bujumbura\n`Africa/Cairo` | Africa/Cairo\n`Africa/Casablanca` | Africa/Casablanca\n`Africa/Ceuta` | Africa/Ceuta\n`Africa/Conakry` | Africa/Conakry\n`Africa/Dakar` | Africa/Dakar\n`Africa/Dar_es_Salaam` | Africa/Dar_es_Salaam\n`Africa/Djibouti` | Africa/Djibouti\n`Africa/Douala` | Africa/Douala\n`Africa/El_Aaiun` | Africa/El_Aaiun\n`Africa/Freetown` | Africa/Freetown\n`Africa/Gaborone` | Africa/Gaborone\n`Africa/Harare` | Africa/Harare\n`Africa/Johannesburg` | Africa/Johannesburg\n`Africa/Juba` | Africa/Juba\n`Africa/Kampala` | Africa/Kampala\n`Africa/Khartoum` | Africa/Khartoum\n`Africa/Kigali` | Africa/Kigali\n`Africa/Kinshasa` | Africa/Kinshasa\n`Africa/Lagos` | Africa/Lagos\n`Africa/Libreville` | Africa/Libreville\n`Africa/Lome` | Africa/Lome\n`Africa/Luanda` | Africa/Luanda\n`Africa/Lubumbashi` | Africa/Lubumbashi\n`Africa/Lusaka` | Africa/Lusaka\n`Africa/Malabo` | Africa/Malabo\n`Africa/Maputo` | Africa/Maputo\n`Africa/Maseru` | Africa/Maseru\n`Africa/Mbabane` | Africa/Mbabane\n`Africa/Mogadishu` | Africa/Mogadishu\n`Africa/Monrovia` | Africa/Monrovia\n`Africa/Nairobi` | Africa/Nairobi\n`Africa/Ndjamena` | Africa/Ndjamena\n`Africa/Niamey` | Africa/Niamey\n`Africa/Nouakchott` | Africa/Nouakchott\n`Africa/Ouagadougou` | Africa/Ouagadougou\n`Africa/Porto-Novo` | Africa/Porto-Novo\n`Africa/Sao_Tome` | Africa/Sao_Tome\n`Africa/Tripoli` | Africa/Tripoli\n`Africa/Tunis` | Africa/Tunis\n`Africa/Windhoek` | Africa/Windhoek\n`America/Adak` | America/Adak\n`America/Anchorage` | America/Anchorage\n`America/Anguilla` | America/Anguilla\n`America/Antigua` | America/Antigua\n`America/Araguaina` | America/Araguaina\n`America/Argentina/Buenos_Aires` | America/Argentina/Buenos_Aires\n`America/Argentina/Catamarca` | America/Argentina/Catamarca\n`America/Argentina/Cordoba` | America/Argentina/Cordoba\n`America/Argentina/Jujuy` | America/Argentina/Jujuy\n`America/Argentina/La_Rioja` | America/Argentina/La_Rioja\n`America/Argentina/Mendoza` | America/Argentina/Mendoza\n`America/Argentina/Rio_Gallegos` | America/Argentina/Rio_Gallegos\n`America/Argentina/Salta` | America/Argentina/Salta\n`America/Argentina/San_Juan` | America/Argentina/San_Juan\n`America/Argentina/San_Luis` | America/Argentina/San_Luis\n`America/Argentina/Tucuman` | America/Argentina/Tucuman\n`America/Argentina/Ushuaia` | America/Argentina/Ushuaia\n`America/Aruba` | America/Aruba\n`America/Asuncion` | America/Asuncion\n`America/Atikokan` | America/Atikokan\n`America/Bahia` | America/Bahia\n`America/Bahia_Banderas` | America/Bahia_Banderas\n`America/Barbados` | America/Barbados\n`America/Belem` | America/Belem\n`America/Belize` | America/Belize\n`America/Blanc-Sablon` | America/Blanc-Sablon\n`America/Boa_Vista` | America/Boa_Vista\n`America/Bogota` | America/Bogota\n`America/Boise` | America/Boise\n`America/Cambridge_Bay` | America/Cambridge_Bay\n`America/Campo_Grande` | America/Campo_Grande\n`America/Cancun` | America/Cancun\n`America/Caracas` | America/Caracas\n`America/Cayenne` | America/Cayenne\n`America/Cayman` | America/Cayman\n`America/Chicago` | America/Chicago\n`America/Chihuahua` | America/Chihuahua\n`America/Costa_Rica` | America/Costa_Rica\n`America/Creston` | America/Creston\n`America/Cuiaba` | America/Cuiaba\n`America/Curacao` | America/Curacao\n`America/Danmarkshavn` | America/Danmarkshavn\n`America/Dawson` | America/Dawson\n`America/Dawson_Creek` | America/Dawson_Creek\n`America/Denver` | America/Denver\n`America/Detroit` | America/Detroit\n`America/Dominica` | America/Dominica\n`America/Edmonton` | America/Edmonton\n`America/Eirunepe` | America/Eirunepe\n`America/El_Salvador` | America/El_Salvador\n`America/Fortaleza` | America/Fortaleza\n`America/Glace_Bay` | America/Glace_Bay\n`America/Godthab` | America/Godthab\n`America/Goose_Bay` | America/Goose_Bay\n`America/Grand_Turk` | America/Grand_Turk\n`America/Grenada` | America/Grenada\n`America/Guadeloupe` | America/Guadeloupe\n`America/Guatemala` | America/Guatemala\n`America/Guayaquil` | America/Guayaquil\n`America/Guyana` | America/Guyana\n`America/Halifax` | America/Halifax\n`America/Havana` | America/Havana\n`America/Hermosillo` | America/Hermosillo\n`America/Indiana/Indianapolis` | America/Indiana/Indianapolis\n`America/Indiana/Knox` | America/Indiana/Knox\n`America/Indiana/Marengo` | America/Indiana/Marengo\n`America/Indiana/Petersburg` | America/Indiana/Petersburg\n`America/Indiana/Tell_City` | America/Indiana/Tell_City\n`America/Indiana/Vevay` | America/Indiana/Vevay\n`America/Indiana/Vincennes` | America/Indiana/Vincennes\n`America/Indiana/Winamac` | America/Indiana/Winamac\n`America/Inuvik` | America/Inuvik\n`America/Iqaluit` | America/Iqaluit\n`America/Jamaica` | America/Jamaica\n`America/Juneau` | America/Juneau\n`America/Kentucky/Louisville` | America/Kentucky/Louisville\n`America/Kentucky/Monticello` | America/Kentucky/Monticello\n`America/Kralendijk` | America/Kralendijk\n`America/La_Paz` | America/La_Paz\n`America/Lima` | America/Lima\n`America/Los_Angeles` | America/Los_Angeles\n`America/Lower_Princes` | America/Lower_Princes\n`America/Maceio` | America/Maceio\n`America/Managua` | America/Managua\n`America/Manaus` | America/Manaus\n`America/Marigot` | America/Marigot\n`America/Martinique` | America/Martinique\n`America/Matamoros` | America/Matamoros\n`America/Mazatlan` | America/Mazatlan\n`America/Menominee` | America/Menominee\n`America/Merida` | America/Merida\n`America/Metlakatla` | America/Metlakatla\n`America/Mexico_City` | America/Mexico_City\n`America/Miquelon` | America/Miquelon\n`America/Moncton` | America/Moncton\n`America/Monterrey` | America/Monterrey\n`America/Montevideo` | America/Montevideo\n`America/Montreal` | America/Montreal\n`America/Montserrat` | America/Montserrat\n`America/Nassau` | America/Nassau\n`America/New_York` | America/New_York\n`America/Nipigon` | America/Nipigon\n`America/Nome` | America/Nome\n`America/Noronha` | America/Noronha\n`America/North_Dakota/Beulah` | America/North_Dakota/Beulah\n`America/North_Dakota/Center` | America/North_Dakota/Center\n`America/North_Dakota/New_Salem` | America/North_Dakota/New_Salem\n`America/Ojinaga` | America/Ojinaga\n`America/Panama` | America/Panama\n`America/Pangnirtung` | America/Pangnirtung\n`America/Paramaribo` | America/Paramaribo\n`America/Phoenix` | America/Phoenix\n`America/Port-au-Prince` | America/Port-au-Prince\n`America/Port_of_Spain` | America/Port_of_Spain\n`America/Porto_Velho` | America/Porto_Velho\n`America/Puerto_Rico` | America/Puerto_Rico\n`America/Rainy_River` | America/Rainy_River\n`America/Rankin_Inlet` | America/Rankin_Inlet\n`America/Recife` | America/Recife\n`America/Regina` | America/Regina\n`America/Resolute` | America/Resolute\n`America/Rio_Branco` | America/Rio_Branco\n`America/Santa_Isabel` | America/Santa_Isabel\n`America/Santarem` | America/Santarem\n`America/Santiago` | America/Santiago\n`America/Santo_Domingo` | America/Santo_Domingo\n`America/Sao_Paulo` | America/Sao_Paulo\n`America/Scoresbysund` | America/Scoresbysund\n`America/Sitka` | America/Sitka\n`America/St_Barthelemy` | America/St_Barthelemy\n`America/St_Johns` | America/St_Johns\n`America/St_Kitts` | America/St_Kitts\n`America/St_Lucia` | America/St_Lucia\n`America/St_Thomas` | America/St_Thomas\n`America/St_Vincent` | America/St_Vincent\n`America/Swift_Current` | America/Swift_Current\n`America/Tegucigalpa` | America/Tegucigalpa\n`America/Thule` | America/Thule\n`America/Thunder_Bay` | America/Thunder_Bay\n`America/Tijuana` | America/Tijuana\n`America/Toronto` | America/Toronto\n`America/Tortola` | America/Tortola\n`America/Vancouver` | America/Vancouver\n`America/Whitehorse` | America/Whitehorse\n`America/Winnipeg` | America/Winnipeg\n`America/Yakutat` | America/Yakutat\n`America/Yellowknife` | America/Yellowknife\n`Antarctica/Casey` | Antarctica/Casey\n`Antarctica/Davis` | Antarctica/Davis\n`Antarctica/DumontDUrville` | Antarctica/DumontDUrville\n`Antarctica/Macquarie` | Antarctica/Macquarie\n`Antarctica/Mawson` | Antarctica/Mawson\n`Antarctica/McMurdo` | Antarctica/McMurdo\n`Antarctica/Palmer` | Antarctica/Palmer\n`Antarctica/Rothera` | Antarctica/Rothera\n`Antarctica/Syowa` | Antarctica/Syowa\n`Antarctica/Troll` | Antarctica/Troll\n`Antarctica/Vostok` | Antarctica/Vostok\n`Arctic/Longyearbyen` | Arctic/Longyearbyen\n`Asia/Aden` | Asia/Aden\n`Asia/Almaty` | Asia/Almaty\n`Asia/Amman` | Asia/Amman\n`Asia/Anadyr` | Asia/Anadyr\n`Asia/Aqtau` | Asia/Aqtau\n`Asia/Aqtobe` | Asia/Aqtobe\n`Asia/Ashgabat` | Asia/Ashgabat\n`Asia/Baghdad` | Asia/Baghdad\n`Asia/Bahrain` | Asia/Bahrain\n`Asia/Baku` | Asia/Baku\n`Asia/Bangkok` | Asia/Bangkok\n`Asia/Beirut` | Asia/Beirut\n`Asia/Bishkek` | Asia/Bishkek\n`Asia/Brunei` | Asia/Brunei\n`Asia/Chita` | Asia/Chita\n`Asia/Choibalsan` | Asia/Choibalsan\n`Asia/Colombo` | Asia/Colombo\n`Asia/Damascus` | Asia/Damascus\n`Asia/Dhaka` | Asia/Dhaka\n`Asia/Dili` | Asia/Dili\n`Asia/Dubai` | Asia/Dubai\n`Asia/Dushanbe` | Asia/Dushanbe\n`Asia/Gaza` | Asia/Gaza\n`Asia/Hebron` | Asia/Hebron\n`Asia/Ho_Chi_Minh` | Asia/Ho_Chi_Minh\n`Asia/Hong_Kong` | Asia/Hong_Kong\n`Asia/Hovd` | Asia/Hovd\n`Asia/Irkutsk` | Asia/Irkutsk\n`Asia/Jakarta` | Asia/Jakarta\n`Asia/Jayapura` | Asia/Jayapura\n`Asia/Jerusalem` | Asia/Jerusalem\n`Asia/Kabul` | Asia/Kabul\n`Asia/Kamchatka` | Asia/Kamchatka\n`Asia/Karachi` | Asia/Karachi\n`Asia/Kathmandu` | Asia/Kathmandu\n`Asia/Khandyga` | Asia/Khandyga\n`Asia/Kolkata` | Asia/Kolkata\n`Asia/Krasnoyarsk` | Asia/Krasnoyarsk\n`Asia/Kuala_Lumpur` | Asia/Kuala_Lumpur\n`Asia/Kuching` | Asia/Kuching\n`Asia/Kuwait` | Asia/Kuwait\n`Asia/Macau` | Asia/Macau\n`Asia/Magadan` | Asia/Magadan\n`Asia/Makassar` | Asia/Makassar\n`Asia/Manila` | Asia/Manila\n`Asia/Muscat` | Asia/Muscat\n`Asia/Nicosia` | Asia/Nicosia\n`Asia/Novokuznetsk` | Asia/Novokuznetsk\n`Asia/Novosibirsk` | Asia/Novosibirsk\n`Asia/Omsk` | Asia/Omsk\n`Asia/Oral` | Asia/Oral\n`Asia/Phnom_Penh` | Asia/Phnom_Penh\n`Asia/Pontianak` | Asia/Pontianak\n`Asia/Pyongyang` | Asia/Pyongyang\n`Asia/Qatar` | Asia/Qatar\n`Asia/Qyzylorda` | Asia/Qyzylorda\n`Asia/Rangoon` | Asia/Rangoon\n`Asia/Riyadh` | Asia/Riyadh\n`Asia/Sakhalin` | Asia/Sakhalin\n`Asia/Samarkand` | Asia/Samarkand\n`Asia/Seoul` | Asia/Seoul\n`Asia/Shanghai` | Asia/Shanghai\n`Asia/Singapore` | Asia/Singapore\n`Asia/Srednekolymsk` | Asia/Srednekolymsk\n`Asia/Taipei` | Asia/Taipei\n`Asia/Tashkent` | Asia/Tashkent\n`Asia/Tbilisi` | Asia/Tbilisi\n`Asia/Tehran` | Asia/Tehran\n`Asia/Thimphu` | Asia/Thimphu\n`Asia/Tokyo` | Asia/Tokyo\n`Asia/Ulaanbaatar` | Asia/Ulaanbaatar\n`Asia/Urumqi` | Asia/Urumqi\n`Asia/Ust-Nera` | Asia/Ust-Nera\n`Asia/Vientiane` | Asia/Vientiane\n`Asia/Vladivostok` | Asia/Vladivostok\n`Asia/Yakutsk` | Asia/Yakutsk\n`Asia/Yekaterinburg` | Asia/Yekaterinburg\n`Asia/Yerevan` | Asia/Yerevan\n`Atlantic/Azores` | Atlantic/Azores\n`Atlantic/Bermuda` | Atlantic/Bermuda\n`Atlantic/Canary` | Atlantic/Canary\n`Atlantic/Cape_Verde` | Atlantic/Cape_Verde\n`Atlantic/Faroe` | Atlantic/Faroe\n`Atlantic/Madeira` | Atlantic/Madeira\n`Atlantic/Reykjavik` | Atlantic/Reykjavik\n`Atlantic/South_Georgia` | Atlantic/South_Georgia\n`Atlantic/St_Helena` | Atlantic/St_Helena\n`Atlantic/Stanley` | Atlantic/Stanley\n`Australia/Adelaide` | Australia/Adelaide\n`Australia/Brisbane` | Australia/Brisbane\n`Australia/Broken_Hill` | Australia/Broken_Hill\n`Australia/Currie` | Australia/Currie\n`Australia/Darwin` | Australia/Darwin\n`Australia/Eucla` | Australia/Eucla\n`Australia/Hobart` | Australia/Hobart\n`Australia/Lindeman` | Australia/Lindeman\n`Australia/Lord_Howe` | Australia/Lord_Howe\n`Australia/Melbourne` | Australia/Melbourne\n`Australia/Perth` | Australia/Perth\n`Australia/Sydney` | Australia/Sydney\n`Canada/Atlantic` | Canada/Atlantic\n`Canada/Central` | Canada/Central\n`Canada/Eastern` | Canada/Eastern\n`Canada/Mountain` | Canada/Mountain\n`Canada/Newfoundland` | Canada/Newfoundland\n`Canada/Pacific` | Canada/Pacific\n`Europe/Amsterdam` | Europe/Amsterdam\n`Europe/Andorra` | Europe/Andorra\n`Europe/Athens` | Europe/Athens\n`Europe/Belgrade` | Europe/Belgrade\n`Europe/Berlin` | Europe/Berlin\n`Europe/Bratislava` | Europe/Bratislava\n`Europe/Brussels` | Europe/Brussels\n`Europe/Bucharest` | Europe/Bucharest\n`Europe/Budapest` | Europe/Budapest\n`Europe/Busingen` | Europe/Busingen\n`Europe/Chisinau` | Europe/Chisinau\n`Europe/Copenhagen` | Europe/Copenhagen\n`Europe/Dublin` | Europe/Dublin\n`Europe/Gibraltar` | Europe/Gibraltar\n`Europe/Guernsey` | Europe/Guernsey\n`Europe/Helsinki` | Europe/Helsinki\n`Europe/Isle_of_Man` | Europe/Isle_of_Man\n`Europe/Istanbul` | Europe/Istanbul\n`Europe/Jersey` | Europe/Jersey\n`Europe/Kaliningrad` | Europe/Kaliningrad\n`Europe/Kiev` | Europe/Kiev\n`Europe/Lisbon` | Europe/Lisbon\n`Europe/Ljubljana` | Europe/Ljubljana\n`Europe/London` | Europe/London\n`Europe/Luxembourg` | Europe/Luxembourg\n`Europe/Madrid` | Europe/Madrid\n`Europe/Malta` | Europe/Malta\n`Europe/Mariehamn` | Europe/Mariehamn\n`Europe/Minsk` | Europe/Minsk\n`Europe/Monaco` | Europe/Monaco\n`Europe/Moscow` | Europe/Moscow\n`Europe/Oslo` | Europe/Oslo\n`Europe/Paris` | Europe/Paris\n`Europe/Podgorica` | Europe/Podgorica\n`Europe/Prague` | Europe/Prague\n`Europe/Riga` | Europe/Riga\n`Europe/Rome` | Europe/Rome\n`Europe/Samara` | Europe/Samara\n`Europe/San_Marino` | Europe/San_Marino\n`Europe/Sarajevo` | Europe/Sarajevo\n`Europe/Simferopol` | Europe/Simferopol\n`Europe/Skopje` | Europe/Skopje\n`Europe/Sofia` | Europe/Sofia\n`Europe/Stockholm` | Europe/Stockholm\n`Europe/Tallinn` | Europe/Tallinn\n`Europe/Tirane` | Europe/Tirane\n`Europe/Uzhgorod` | Europe/Uzhgorod\n`Europe/Vaduz` | Europe/Vaduz\n`Europe/Vatican` | Europe/Vatican\n`Europe/Vienna` | Europe/Vienna\n`Europe/Vilnius` | Europe/Vilnius\n`Europe/Volgograd` | Europe/Volgograd\n`Europe/Warsaw` | Europe/Warsaw\n`Europe/Zagreb` | Europe/Zagreb\n`Europe/Zaporozhye` | Europe/Zaporozhye\n`Europe/Zurich` | Europe/Zurich\n`GMT` | GMT\n`Indian/Antananarivo` | Indian/Antananarivo\n`Indian/Chagos` | Indian/Chagos\n`Indian/Christmas` | Indian/Christmas\n`Indian/Cocos` | Indian/Cocos\n`Indian/Comoro` | Indian/Comoro\n`Indian/Kerguelen` | Indian/Kerguelen\n`Indian/Mahe` | Indian/Mahe\n`Indian/Maldives` | Indian/Maldives\n`Indian/Mauritius` | Indian/Mauritius\n`Indian/Mayotte` | Indian/Mayotte\n`Indian/Reunion` | Indian/Reunion\n`Pacific/Apia` | Pacific/Apia\n`Pacific/Auckland` | Pacific/Auckland\n`Pacific/Bougainville` | Pacific/Bougainville\n`Pacific/Chatham` | Pacific/Chatham\n`Pacific/Chuuk` | Pacific/Chuuk\n`Pacific/Easter` | Pacific/Easter\n`Pacific/Efate` | Pacific/Efate\n`Pacific/Enderbury` | Pacific/Enderbury\n`Pacific/Fakaofo` | Pacific/Fakaofo\n`Pacific/Fiji` | Pacific/Fiji\n`Pacific/Funafuti` | Pacific/Funafuti\n`Pacific/Galapagos` | Pacific/Galapagos\n`Pacific/Gambier` | Pacific/Gambier\n`Pacific/Guadalcanal` | Pacific/Guadalcanal\n`Pacific/Guam` | Pacific/Guam\n`Pacific/Honolulu` | Pacific/Honolulu\n`Pacific/Johnston` | Pacific/Johnston\n`Pacific/Kiritimati` | Pacific/Kiritimati\n`Pacific/Kosrae` | Pacific/Kosrae\n`Pacific/Kwajalein` | Pacific/Kwajalein\n`Pacific/Majuro` | Pacific/Majuro\n`Pacific/Marquesas` | Pacific/Marquesas\n`Pacific/Midway` | Pacific/Midway\n`Pacific/Nauru` | Pacific/Nauru\n`Pacific/Niue` | Pacific/Niue\n`Pacific/Norfolk` | Pacific/Norfolk\n`Pacific/Noumea` | Pacific/Noumea\n`Pacific/Pago_Pago` | Pacific/Pago_Pago\n`Pacific/Palau` | Pacific/Palau\n`Pacific/Pitcairn` | Pacific/Pitcairn\n`Pacific/Pohnpei` | Pacific/Pohnpei\n`Pacific/Port_Moresby` | Pacific/Port_Moresby\n`Pacific/Rarotonga` | Pacific/Rarotonga\n`Pacific/Saipan` | Pacific/Saipan\n`Pacific/Tahiti` | Pacific/Tahiti\n`Pacific/Tarawa` | Pacific/Tarawa\n`Pacific/Tongatapu` | Pacific/Tongatapu\n`Pacific/Wake` | Pacific/Wake\n`Pacific/Wallis` | Pacific/Wallis\n`US/Alaska` | US/Alaska\n`US/Arizona` | US/Arizona\n`US/Central` | US/Central\n`US/Eastern` | US/Eastern\n`US/Hawaii` | US/Hawaii\n`US/Mountain` | US/Mountain\n`US/Pacific` | US/Pacific\n`UTC` | UTC\n</details>"}, "language": {"type": "string", "description": "Choose the language you want Elorus to speak. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n</details>"}, "email_notifications": {"type": "boolean", "description": "Send me an email whenever a new notification is created."}, "first_name_translations": {"type": "string", "description": ""}, "last_name_translations": {"type": "string", "description": ""}, "last_login": {"type": "string", "description": "\n\nTimezone information is included."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "post": {"description": "Create a user.\n---\nReturns an authentication token.", "parameters": [{"schema": {"required": ["email", "password", "first_name", "last_name", "timezone", "language"], "type": "object", "properties": {"email": {"type": "string", "description": ""}, "password": {"type": "string", "description": ""}, "first_name": {"type": "string", "description": ""}, "last_name": {"type": "string", "description": ""}, "timezone": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`Africa/Abidjan` | Africa/Abidjan\n`Africa/Accra` | Africa/Accra\n`Africa/Addis_Ababa` | Africa/Addis_Ababa\n`Africa/Algiers` | Africa/Algiers\n`Africa/Asmara` | Africa/Asmara\n`Africa/Bamako` | Africa/Bamako\n`Africa/Bangui` | Africa/Bangui\n`Africa/Banjul` | Africa/Banjul\n`Africa/Bissau` | Africa/Bissau\n`Africa/Blantyre` | Africa/Blantyre\n`Africa/Brazzaville` | Africa/Brazzaville\n`Africa/Bujumbura` | Africa/Bujumbura\n`Africa/Cairo` | Africa/Cairo\n`Africa/Casablanca` | Africa/Casablanca\n`Africa/Ceuta` | Africa/Ceuta\n`Africa/Conakry` | Africa/Conakry\n`Africa/Dakar` | Africa/Dakar\n`Africa/Dar_es_Salaam` | Africa/Dar_es_Salaam\n`Africa/Djibouti` | Africa/Djibouti\n`Africa/Douala` | Africa/Douala\n`Africa/El_Aaiun` | Africa/El_Aaiun\n`Africa/Freetown` | Africa/Freetown\n`Africa/Gaborone` | Africa/Gaborone\n`Africa/Harare` | Africa/Harare\n`Africa/Johannesburg` | Africa/Johannesburg\n`Africa/Juba` | Africa/Juba\n`Africa/Kampala` | Africa/Kampala\n`Africa/Khartoum` | Africa/Khartoum\n`Africa/Kigali` | Africa/Kigali\n`Africa/Kinshasa` | Africa/Kinshasa\n`Africa/Lagos` | Africa/Lagos\n`Africa/Libreville` | Africa/Libreville\n`Africa/Lome` | Africa/Lome\n`Africa/Luanda` | Africa/Luanda\n`Africa/Lubumbashi` | Africa/Lubumbashi\n`Africa/Lusaka` | Africa/Lusaka\n`Africa/Malabo` | Africa/Malabo\n`Africa/Maputo` | Africa/Maputo\n`Africa/Maseru` | Africa/Maseru\n`Africa/Mbabane` | Africa/Mbabane\n`Africa/Mogadishu` | Africa/Mogadishu\n`Africa/Monrovia` | Africa/Monrovia\n`Africa/Nairobi` | Africa/Nairobi\n`Africa/Ndjamena` | Africa/Ndjamena\n`Africa/Niamey` | Africa/Niamey\n`Africa/Nouakchott` | Africa/Nouakchott\n`Africa/Ouagadougou` | Africa/Ouagadougou\n`Africa/Porto-Novo` | Africa/Porto-Novo\n`Africa/Sao_Tome` | Africa/Sao_Tome\n`Africa/Tripoli` | Africa/Tripoli\n`Africa/Tunis` | Africa/Tunis\n`Africa/Windhoek` | Africa/Windhoek\n`America/Adak` | America/Adak\n`America/Anchorage` | America/Anchorage\n`America/Anguilla` | America/Anguilla\n`America/Antigua` | America/Antigua\n`America/Araguaina` | America/Araguaina\n`America/Argentina/Buenos_Aires` | America/Argentina/Buenos_Aires\n`America/Argentina/Catamarca` | America/Argentina/Catamarca\n`America/Argentina/Cordoba` | America/Argentina/Cordoba\n`America/Argentina/Jujuy` | America/Argentina/Jujuy\n`America/Argentina/La_Rioja` | America/Argentina/La_Rioja\n`America/Argentina/Mendoza` | America/Argentina/Mendoza\n`America/Argentina/Rio_Gallegos` | America/Argentina/Rio_Gallegos\n`America/Argentina/Salta` | America/Argentina/Salta\n`America/Argentina/San_Juan` | America/Argentina/San_Juan\n`America/Argentina/San_Luis` | America/Argentina/San_Luis\n`America/Argentina/Tucuman` | America/Argentina/Tucuman\n`America/Argentina/Ushuaia` | America/Argentina/Ushuaia\n`America/Aruba` | America/Aruba\n`America/Asuncion` | America/Asuncion\n`America/Atikokan` | America/Atikokan\n`America/Bahia` | America/Bahia\n`America/Bahia_Banderas` | America/Bahia_Banderas\n`America/Barbados` | America/Barbados\n`America/Belem` | America/Belem\n`America/Belize` | America/Belize\n`America/Blanc-Sablon` | America/Blanc-Sablon\n`America/Boa_Vista` | America/Boa_Vista\n`America/Bogota` | America/Bogota\n`America/Boise` | America/Boise\n`America/Cambridge_Bay` | America/Cambridge_Bay\n`America/Campo_Grande` | America/Campo_Grande\n`America/Cancun` | America/Cancun\n`America/Caracas` | America/Caracas\n`America/Cayenne` | America/Cayenne\n`America/Cayman` | America/Cayman\n`America/Chicago` | America/Chicago\n`America/Chihuahua` | America/Chihuahua\n`America/Costa_Rica` | America/Costa_Rica\n`America/Creston` | America/Creston\n`America/Cuiaba` | America/Cuiaba\n`America/Curacao` | America/Curacao\n`America/Danmarkshavn` | America/Danmarkshavn\n`America/Dawson` | America/Dawson\n`America/Dawson_Creek` | America/Dawson_Creek\n`America/Denver` | America/Denver\n`America/Detroit` | America/Detroit\n`America/Dominica` | America/Dominica\n`America/Edmonton` | America/Edmonton\n`America/Eirunepe` | America/Eirunepe\n`America/El_Salvador` | America/El_Salvador\n`America/Fortaleza` | America/Fortaleza\n`America/Glace_Bay` | America/Glace_Bay\n`America/Godthab` | America/Godthab\n`America/Goose_Bay` | America/Goose_Bay\n`America/Grand_Turk` | America/Grand_Turk\n`America/Grenada` | America/Grenada\n`America/Guadeloupe` | America/Guadeloupe\n`America/Guatemala` | America/Guatemala\n`America/Guayaquil` | America/Guayaquil\n`America/Guyana` | America/Guyana\n`America/Halifax` | America/Halifax\n`America/Havana` | America/Havana\n`America/Hermosillo` | America/Hermosillo\n`America/Indiana/Indianapolis` | America/Indiana/Indianapolis\n`America/Indiana/Knox` | America/Indiana/Knox\n`America/Indiana/Marengo` | America/Indiana/Marengo\n`America/Indiana/Petersburg` | America/Indiana/Petersburg\n`America/Indiana/Tell_City` | America/Indiana/Tell_City\n`America/Indiana/Vevay` | America/Indiana/Vevay\n`America/Indiana/Vincennes` | America/Indiana/Vincennes\n`America/Indiana/Winamac` | America/Indiana/Winamac\n`America/Inuvik` | America/Inuvik\n`America/Iqaluit` | America/Iqaluit\n`America/Jamaica` | America/Jamaica\n`America/Juneau` | America/Juneau\n`America/Kentucky/Louisville` | America/Kentucky/Louisville\n`America/Kentucky/Monticello` | America/Kentucky/Monticello\n`America/Kralendijk` | America/Kralendijk\n`America/La_Paz` | America/La_Paz\n`America/Lima` | America/Lima\n`America/Los_Angeles` | America/Los_Angeles\n`America/Lower_Princes` | America/Lower_Princes\n`America/Maceio` | America/Maceio\n`America/Managua` | America/Managua\n`America/Manaus` | America/Manaus\n`America/Marigot` | America/Marigot\n`America/Martinique` | America/Martinique\n`America/Matamoros` | America/Matamoros\n`America/Mazatlan` | America/Mazatlan\n`America/Menominee` | America/Menominee\n`America/Merida` | America/Merida\n`America/Metlakatla` | America/Metlakatla\n`America/Mexico_City` | America/Mexico_City\n`America/Miquelon` | America/Miquelon\n`America/Moncton` | America/Moncton\n`America/Monterrey` | America/Monterrey\n`America/Montevideo` | America/Montevideo\n`America/Montreal` | America/Montreal\n`America/Montserrat` | America/Montserrat\n`America/Nassau` | America/Nassau\n`America/New_York` | America/New_York\n`America/Nipigon` | America/Nipigon\n`America/Nome` | America/Nome\n`America/Noronha` | America/Noronha\n`America/North_Dakota/Beulah` | America/North_Dakota/Beulah\n`America/North_Dakota/Center` | America/North_Dakota/Center\n`America/North_Dakota/New_Salem` | America/North_Dakota/New_Salem\n`America/Ojinaga` | America/Ojinaga\n`America/Panama` | America/Panama\n`America/Pangnirtung` | America/Pangnirtung\n`America/Paramaribo` | America/Paramaribo\n`America/Phoenix` | America/Phoenix\n`America/Port-au-Prince` | America/Port-au-Prince\n`America/Port_of_Spain` | America/Port_of_Spain\n`America/Porto_Velho` | America/Porto_Velho\n`America/Puerto_Rico` | America/Puerto_Rico\n`America/Rainy_River` | America/Rainy_River\n`America/Rankin_Inlet` | America/Rankin_Inlet\n`America/Recife` | America/Recife\n`America/Regina` | America/Regina\n`America/Resolute` | America/Resolute\n`America/Rio_Branco` | America/Rio_Branco\n`America/Santa_Isabel` | America/Santa_Isabel\n`America/Santarem` | America/Santarem\n`America/Santiago` | America/Santiago\n`America/Santo_Domingo` | America/Santo_Domingo\n`America/Sao_Paulo` | America/Sao_Paulo\n`America/Scoresbysund` | America/Scoresbysund\n`America/Sitka` | America/Sitka\n`America/St_Barthelemy` | America/St_Barthelemy\n`America/St_Johns` | America/St_Johns\n`America/St_Kitts` | America/St_Kitts\n`America/St_Lucia` | America/St_Lucia\n`America/St_Thomas` | America/St_Thomas\n`America/St_Vincent` | America/St_Vincent\n`America/Swift_Current` | America/Swift_Current\n`America/Tegucigalpa` | America/Tegucigalpa\n`America/Thule` | America/Thule\n`America/Thunder_Bay` | America/Thunder_Bay\n`America/Tijuana` | America/Tijuana\n`America/Toronto` | America/Toronto\n`America/Tortola` | America/Tortola\n`America/Vancouver` | America/Vancouver\n`America/Whitehorse` | America/Whitehorse\n`America/Winnipeg` | America/Winnipeg\n`America/Yakutat` | America/Yakutat\n`America/Yellowknife` | America/Yellowknife\n`Antarctica/Casey` | Antarctica/Casey\n`Antarctica/Davis` | Antarctica/Davis\n`Antarctica/DumontDUrville` | Antarctica/DumontDUrville\n`Antarctica/Macquarie` | Antarctica/Macquarie\n`Antarctica/Mawson` | Antarctica/Mawson\n`Antarctica/McMurdo` | Antarctica/McMurdo\n`Antarctica/Palmer` | Antarctica/Palmer\n`Antarctica/Rothera` | Antarctica/Rothera\n`Antarctica/Syowa` | Antarctica/Syowa\n`Antarctica/Troll` | Antarctica/Troll\n`Antarctica/Vostok` | Antarctica/Vostok\n`Arctic/Longyearbyen` | Arctic/Longyearbyen\n`Asia/Aden` | Asia/Aden\n`Asia/Almaty` | Asia/Almaty\n`Asia/Amman` | Asia/Amman\n`Asia/Anadyr` | Asia/Anadyr\n`Asia/Aqtau` | Asia/Aqtau\n`Asia/Aqtobe` | Asia/Aqtobe\n`Asia/Ashgabat` | Asia/Ashgabat\n`Asia/Baghdad` | Asia/Baghdad\n`Asia/Bahrain` | Asia/Bahrain\n`Asia/Baku` | Asia/Baku\n`Asia/Bangkok` | Asia/Bangkok\n`Asia/Beirut` | Asia/Beirut\n`Asia/Bishkek` | Asia/Bishkek\n`Asia/Brunei` | Asia/Brunei\n`Asia/Chita` | Asia/Chita\n`Asia/Choibalsan` | Asia/Choibalsan\n`Asia/Colombo` | Asia/Colombo\n`Asia/Damascus` | Asia/Damascus\n`Asia/Dhaka` | Asia/Dhaka\n`Asia/Dili` | Asia/Dili\n`Asia/Dubai` | Asia/Dubai\n`Asia/Dushanbe` | Asia/Dushanbe\n`Asia/Gaza` | Asia/Gaza\n`Asia/Hebron` | Asia/Hebron\n`Asia/Ho_Chi_Minh` | Asia/Ho_Chi_Minh\n`Asia/Hong_Kong` | Asia/Hong_Kong\n`Asia/Hovd` | Asia/Hovd\n`Asia/Irkutsk` | Asia/Irkutsk\n`Asia/Jakarta` | Asia/Jakarta\n`Asia/Jayapura` | Asia/Jayapura\n`Asia/Jerusalem` | Asia/Jerusalem\n`Asia/Kabul` | Asia/Kabul\n`Asia/Kamchatka` | Asia/Kamchatka\n`Asia/Karachi` | Asia/Karachi\n`Asia/Kathmandu` | Asia/Kathmandu\n`Asia/Khandyga` | Asia/Khandyga\n`Asia/Kolkata` | Asia/Kolkata\n`Asia/Krasnoyarsk` | Asia/Krasnoyarsk\n`Asia/Kuala_Lumpur` | Asia/Kuala_Lumpur\n`Asia/Kuching` | Asia/Kuching\n`Asia/Kuwait` | Asia/Kuwait\n`Asia/Macau` | Asia/Macau\n`Asia/Magadan` | Asia/Magadan\n`Asia/Makassar` | Asia/Makassar\n`Asia/Manila` | Asia/Manila\n`Asia/Muscat` | Asia/Muscat\n`Asia/Nicosia` | Asia/Nicosia\n`Asia/Novokuznetsk` | Asia/Novokuznetsk\n`Asia/Novosibirsk` | Asia/Novosibirsk\n`Asia/Omsk` | Asia/Omsk\n`Asia/Oral` | Asia/Oral\n`Asia/Phnom_Penh` | Asia/Phnom_Penh\n`Asia/Pontianak` | Asia/Pontianak\n`Asia/Pyongyang` | Asia/Pyongyang\n`Asia/Qatar` | Asia/Qatar\n`Asia/Qyzylorda` | Asia/Qyzylorda\n`Asia/Rangoon` | Asia/Rangoon\n`Asia/Riyadh` | Asia/Riyadh\n`Asia/Sakhalin` | Asia/Sakhalin\n`Asia/Samarkand` | Asia/Samarkand\n`Asia/Seoul` | Asia/Seoul\n`Asia/Shanghai` | Asia/Shanghai\n`Asia/Singapore` | Asia/Singapore\n`Asia/Srednekolymsk` | Asia/Srednekolymsk\n`Asia/Taipei` | Asia/Taipei\n`Asia/Tashkent` | Asia/Tashkent\n`Asia/Tbilisi` | Asia/Tbilisi\n`Asia/Tehran` | Asia/Tehran\n`Asia/Thimphu` | Asia/Thimphu\n`Asia/Tokyo` | Asia/Tokyo\n`Asia/Ulaanbaatar` | Asia/Ulaanbaatar\n`Asia/Urumqi` | Asia/Urumqi\n`Asia/Ust-Nera` | Asia/Ust-Nera\n`Asia/Vientiane` | Asia/Vientiane\n`Asia/Vladivostok` | Asia/Vladivostok\n`Asia/Yakutsk` | Asia/Yakutsk\n`Asia/Yekaterinburg` | Asia/Yekaterinburg\n`Asia/Yerevan` | Asia/Yerevan\n`Atlantic/Azores` | Atlantic/Azores\n`Atlantic/Bermuda` | Atlantic/Bermuda\n`Atlantic/Canary` | Atlantic/Canary\n`Atlantic/Cape_Verde` | Atlantic/Cape_Verde\n`Atlantic/Faroe` | Atlantic/Faroe\n`Atlantic/Madeira` | Atlantic/Madeira\n`Atlantic/Reykjavik` | Atlantic/Reykjavik\n`Atlantic/South_Georgia` | Atlantic/South_Georgia\n`Atlantic/St_Helena` | Atlantic/St_Helena\n`Atlantic/Stanley` | Atlantic/Stanley\n`Australia/Adelaide` | Australia/Adelaide\n`Australia/Brisbane` | Australia/Brisbane\n`Australia/Broken_Hill` | Australia/Broken_Hill\n`Australia/Currie` | Australia/Currie\n`Australia/Darwin` | Australia/Darwin\n`Australia/Eucla` | Australia/Eucla\n`Australia/Hobart` | Australia/Hobart\n`Australia/Lindeman` | Australia/Lindeman\n`Australia/Lord_Howe` | Australia/Lord_Howe\n`Australia/Melbourne` | Australia/Melbourne\n`Australia/Perth` | Australia/Perth\n`Australia/Sydney` | Australia/Sydney\n`Canada/Atlantic` | Canada/Atlantic\n`Canada/Central` | Canada/Central\n`Canada/Eastern` | Canada/Eastern\n`Canada/Mountain` | Canada/Mountain\n`Canada/Newfoundland` | Canada/Newfoundland\n`Canada/Pacific` | Canada/Pacific\n`Europe/Amsterdam` | Europe/Amsterdam\n`Europe/Andorra` | Europe/Andorra\n`Europe/Athens` | Europe/Athens\n`Europe/Belgrade` | Europe/Belgrade\n`Europe/Berlin` | Europe/Berlin\n`Europe/Bratislava` | Europe/Bratislava\n`Europe/Brussels` | Europe/Brussels\n`Europe/Bucharest` | Europe/Bucharest\n`Europe/Budapest` | Europe/Budapest\n`Europe/Busingen` | Europe/Busingen\n`Europe/Chisinau` | Europe/Chisinau\n`Europe/Copenhagen` | Europe/Copenhagen\n`Europe/Dublin` | Europe/Dublin\n`Europe/Gibraltar` | Europe/Gibraltar\n`Europe/Guernsey` | Europe/Guernsey\n`Europe/Helsinki` | Europe/Helsinki\n`Europe/Isle_of_Man` | Europe/Isle_of_Man\n`Europe/Istanbul` | Europe/Istanbul\n`Europe/Jersey` | Europe/Jersey\n`Europe/Kaliningrad` | Europe/Kaliningrad\n`Europe/Kiev` | Europe/Kiev\n`Europe/Lisbon` | Europe/Lisbon\n`Europe/Ljubljana` | Europe/Ljubljana\n`Europe/London` | Europe/London\n`Europe/Luxembourg` | Europe/Luxembourg\n`Europe/Madrid` | Europe/Madrid\n`Europe/Malta` | Europe/Malta\n`Europe/Mariehamn` | Europe/Mariehamn\n`Europe/Minsk` | Europe/Minsk\n`Europe/Monaco` | Europe/Monaco\n`Europe/Moscow` | Europe/Moscow\n`Europe/Oslo` | Europe/Oslo\n`Europe/Paris` | Europe/Paris\n`Europe/Podgorica` | Europe/Podgorica\n`Europe/Prague` | Europe/Prague\n`Europe/Riga` | Europe/Riga\n`Europe/Rome` | Europe/Rome\n`Europe/Samara` | Europe/Samara\n`Europe/San_Marino` | Europe/San_Marino\n`Europe/Sarajevo` | Europe/Sarajevo\n`Europe/Simferopol` | Europe/Simferopol\n`Europe/Skopje` | Europe/Skopje\n`Europe/Sofia` | Europe/Sofia\n`Europe/Stockholm` | Europe/Stockholm\n`Europe/Tallinn` | Europe/Tallinn\n`Europe/Tirane` | Europe/Tirane\n`Europe/Uzhgorod` | Europe/Uzhgorod\n`Europe/Vaduz` | Europe/Vaduz\n`Europe/Vatican` | Europe/Vatican\n`Europe/Vienna` | Europe/Vienna\n`Europe/Vilnius` | Europe/Vilnius\n`Europe/Volgograd` | Europe/Volgograd\n`Europe/Warsaw` | Europe/Warsaw\n`Europe/Zagreb` | Europe/Zagreb\n`Europe/Zaporozhye` | Europe/Zaporozhye\n`Europe/Zurich` | Europe/Zurich\n`GMT` | GMT\n`Indian/Antananarivo` | Indian/Antananarivo\n`Indian/Chagos` | Indian/Chagos\n`Indian/Christmas` | Indian/Christmas\n`Indian/Cocos` | Indian/Cocos\n`Indian/Comoro` | Indian/Comoro\n`Indian/Kerguelen` | Indian/Kerguelen\n`Indian/Mahe` | Indian/Mahe\n`Indian/Maldives` | Indian/Maldives\n`Indian/Mauritius` | Indian/Mauritius\n`Indian/Mayotte` | Indian/Mayotte\n`Indian/Reunion` | Indian/Reunion\n`Pacific/Apia` | Pacific/Apia\n`Pacific/Auckland` | Pacific/Auckland\n`Pacific/Bougainville` | Pacific/Bougainville\n`Pacific/Chatham` | Pacific/Chatham\n`Pacific/Chuuk` | Pacific/Chuuk\n`Pacific/Easter` | Pacific/Easter\n`Pacific/Efate` | Pacific/Efate\n`Pacific/Enderbury` | Pacific/Enderbury\n`Pacific/Fakaofo` | Pacific/Fakaofo\n`Pacific/Fiji` | Pacific/Fiji\n`Pacific/Funafuti` | Pacific/Funafuti\n`Pacific/Galapagos` | Pacific/Galapagos\n`Pacific/Gambier` | Pacific/Gambier\n`Pacific/Guadalcanal` | Pacific/Guadalcanal\n`Pacific/Guam` | Pacific/Guam\n`Pacific/Honolulu` | Pacific/Honolulu\n`Pacific/Johnston` | Pacific/Johnston\n`Pacific/Kiritimati` | Pacific/Kiritimati\n`Pacific/Kosrae` | Pacific/Kosrae\n`Pacific/Kwajalein` | Pacific/Kwajalein\n`Pacific/Majuro` | Pacific/Majuro\n`Pacific/Marquesas` | Pacific/Marquesas\n`Pacific/Midway` | Pacific/Midway\n`Pacific/Nauru` | Pacific/Nauru\n`Pacific/Niue` | Pacific/Niue\n`Pacific/Norfolk` | Pacific/Norfolk\n`Pacific/Noumea` | Pacific/Noumea\n`Pacific/Pago_Pago` | Pacific/Pago_Pago\n`Pacific/Palau` | Pacific/Palau\n`Pacific/Pitcairn` | Pacific/Pitcairn\n`Pacific/Pohnpei` | Pacific/Pohnpei\n`Pacific/Port_Moresby` | Pacific/Port_Moresby\n`Pacific/Rarotonga` | Pacific/Rarotonga\n`Pacific/Saipan` | Pacific/Saipan\n`Pacific/Tahiti` | Pacific/Tahiti\n`Pacific/Tarawa` | Pacific/Tarawa\n`Pacific/Tongatapu` | Pacific/Tongatapu\n`Pacific/Wake` | Pacific/Wake\n`Pacific/Wallis` | Pacific/Wallis\n`US/Alaska` | US/Alaska\n`US/Arizona` | US/Arizona\n`US/Central` | US/Central\n`US/Eastern` | US/Eastern\n`US/Hawaii` | US/Hawaii\n`US/Mountain` | US/Mountain\n`US/Pacific` | US/Pacific\n`UTC` | UTC\n</details>"}, "language": {"type": "string", "description": "Choose the language you want Elorus to speak. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n</details>"}}}, "name": "data", "in": "body"}], "tags": ["user"], "summary": "/native/user/", "operationId": "user_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "access_token": {"type": "string", "description": ""}, "refresh_token": {"type": "string", "description": ""}, "expires_in": {"type": "integer", "description": ""}, "scope": {"type": "string", "description": ""}, "token_type": {"type": "string", "description": ""}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "put": {"description": "Update user profile.\n---", "parameters": [{"schema": {"required": ["email", "first_name", "last_name"], "type": "object", "properties": {"email": {"type": "string", "description": "When changing your email address, a new verification code will be sent to the new email address. You should verify the address within 10 days, otherwise your account will be suspended without any further notice."}, "first_name": {"type": "string", "description": ""}, "last_name": {"type": "string", "description": ""}, "phone_number": {"type": "string", "description": ""}, "timezone": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`Africa/Abidjan` | Africa/Abidjan\n`Africa/Accra` | Africa/Accra\n`Africa/Addis_Ababa` | Africa/Addis_Ababa\n`Africa/Algiers` | Africa/Algiers\n`Africa/Asmara` | Africa/Asmara\n`Africa/Bamako` | Africa/Bamako\n`Africa/Bangui` | Africa/Bangui\n`Africa/Banjul` | Africa/Banjul\n`Africa/Bissau` | Africa/Bissau\n`Africa/Blantyre` | Africa/Blantyre\n`Africa/Brazzaville` | Africa/Brazzaville\n`Africa/Bujumbura` | Africa/Bujumbura\n`Africa/Cairo` | Africa/Cairo\n`Africa/Casablanca` | Africa/Casablanca\n`Africa/Ceuta` | Africa/Ceuta\n`Africa/Conakry` | Africa/Conakry\n`Africa/Dakar` | Africa/Dakar\n`Africa/Dar_es_Salaam` | Africa/Dar_es_Salaam\n`Africa/Djibouti` | Africa/Djibouti\n`Africa/Douala` | Africa/Douala\n`Africa/El_Aaiun` | Africa/El_Aaiun\n`Africa/Freetown` | Africa/Freetown\n`Africa/Gaborone` | Africa/Gaborone\n`Africa/Harare` | Africa/Harare\n`Africa/Johannesburg` | Africa/Johannesburg\n`Africa/Juba` | Africa/Juba\n`Africa/Kampala` | Africa/Kampala\n`Africa/Khartoum` | Africa/Khartoum\n`Africa/Kigali` | Africa/Kigali\n`Africa/Kinshasa` | Africa/Kinshasa\n`Africa/Lagos` | Africa/Lagos\n`Africa/Libreville` | Africa/Libreville\n`Africa/Lome` | Africa/Lome\n`Africa/Luanda` | Africa/Luanda\n`Africa/Lubumbashi` | Africa/Lubumbashi\n`Africa/Lusaka` | Africa/Lusaka\n`Africa/Malabo` | Africa/Malabo\n`Africa/Maputo` | Africa/Maputo\n`Africa/Maseru` | Africa/Maseru\n`Africa/Mbabane` | Africa/Mbabane\n`Africa/Mogadishu` | Africa/Mogadishu\n`Africa/Monrovia` | Africa/Monrovia\n`Africa/Nairobi` | Africa/Nairobi\n`Africa/Ndjamena` | Africa/Ndjamena\n`Africa/Niamey` | Africa/Niamey\n`Africa/Nouakchott` | Africa/Nouakchott\n`Africa/Ouagadougou` | Africa/Ouagadougou\n`Africa/Porto-Novo` | Africa/Porto-Novo\n`Africa/Sao_Tome` | Africa/Sao_Tome\n`Africa/Tripoli` | Africa/Tripoli\n`Africa/Tunis` | Africa/Tunis\n`Africa/Windhoek` | Africa/Windhoek\n`America/Adak` | America/Adak\n`America/Anchorage` | America/Anchorage\n`America/Anguilla` | America/Anguilla\n`America/Antigua` | America/Antigua\n`America/Araguaina` | America/Araguaina\n`America/Argentina/Buenos_Aires` | America/Argentina/Buenos_Aires\n`America/Argentina/Catamarca` | America/Argentina/Catamarca\n`America/Argentina/Cordoba` | America/Argentina/Cordoba\n`America/Argentina/Jujuy` | America/Argentina/Jujuy\n`America/Argentina/La_Rioja` | America/Argentina/La_Rioja\n`America/Argentina/Mendoza` | America/Argentina/Mendoza\n`America/Argentina/Rio_Gallegos` | America/Argentina/Rio_Gallegos\n`America/Argentina/Salta` | America/Argentina/Salta\n`America/Argentina/San_Juan` | America/Argentina/San_Juan\n`America/Argentina/San_Luis` | America/Argentina/San_Luis\n`America/Argentina/Tucuman` | America/Argentina/Tucuman\n`America/Argentina/Ushuaia` | America/Argentina/Ushuaia\n`America/Aruba` | America/Aruba\n`America/Asuncion` | America/Asuncion\n`America/Atikokan` | America/Atikokan\n`America/Bahia` | America/Bahia\n`America/Bahia_Banderas` | America/Bahia_Banderas\n`America/Barbados` | America/Barbados\n`America/Belem` | America/Belem\n`America/Belize` | America/Belize\n`America/Blanc-Sablon` | America/Blanc-Sablon\n`America/Boa_Vista` | America/Boa_Vista\n`America/Bogota` | America/Bogota\n`America/Boise` | America/Boise\n`America/Cambridge_Bay` | America/Cambridge_Bay\n`America/Campo_Grande` | America/Campo_Grande\n`America/Cancun` | America/Cancun\n`America/Caracas` | America/Caracas\n`America/Cayenne` | America/Cayenne\n`America/Cayman` | America/Cayman\n`America/Chicago` | America/Chicago\n`America/Chihuahua` | America/Chihuahua\n`America/Costa_Rica` | America/Costa_Rica\n`America/Creston` | America/Creston\n`America/Cuiaba` | America/Cuiaba\n`America/Curacao` | America/Curacao\n`America/Danmarkshavn` | America/Danmarkshavn\n`America/Dawson` | America/Dawson\n`America/Dawson_Creek` | America/Dawson_Creek\n`America/Denver` | America/Denver\n`America/Detroit` | America/Detroit\n`America/Dominica` | America/Dominica\n`America/Edmonton` | America/Edmonton\n`America/Eirunepe` | America/Eirunepe\n`America/El_Salvador` | America/El_Salvador\n`America/Fortaleza` | America/Fortaleza\n`America/Glace_Bay` | America/Glace_Bay\n`America/Godthab` | America/Godthab\n`America/Goose_Bay` | America/Goose_Bay\n`America/Grand_Turk` | America/Grand_Turk\n`America/Grenada` | America/Grenada\n`America/Guadeloupe` | America/Guadeloupe\n`America/Guatemala` | America/Guatemala\n`America/Guayaquil` | America/Guayaquil\n`America/Guyana` | America/Guyana\n`America/Halifax` | America/Halifax\n`America/Havana` | America/Havana\n`America/Hermosillo` | America/Hermosillo\n`America/Indiana/Indianapolis` | America/Indiana/Indianapolis\n`America/Indiana/Knox` | America/Indiana/Knox\n`America/Indiana/Marengo` | America/Indiana/Marengo\n`America/Indiana/Petersburg` | America/Indiana/Petersburg\n`America/Indiana/Tell_City` | America/Indiana/Tell_City\n`America/Indiana/Vevay` | America/Indiana/Vevay\n`America/Indiana/Vincennes` | America/Indiana/Vincennes\n`America/Indiana/Winamac` | America/Indiana/Winamac\n`America/Inuvik` | America/Inuvik\n`America/Iqaluit` | America/Iqaluit\n`America/Jamaica` | America/Jamaica\n`America/Juneau` | America/Juneau\n`America/Kentucky/Louisville` | America/Kentucky/Louisville\n`America/Kentucky/Monticello` | America/Kentucky/Monticello\n`America/Kralendijk` | America/Kralendijk\n`America/La_Paz` | America/La_Paz\n`America/Lima` | America/Lima\n`America/Los_Angeles` | America/Los_Angeles\n`America/Lower_Princes` | America/Lower_Princes\n`America/Maceio` | America/Maceio\n`America/Managua` | America/Managua\n`America/Manaus` | America/Manaus\n`America/Marigot` | America/Marigot\n`America/Martinique` | America/Martinique\n`America/Matamoros` | America/Matamoros\n`America/Mazatlan` | America/Mazatlan\n`America/Menominee` | America/Menominee\n`America/Merida` | America/Merida\n`America/Metlakatla` | America/Metlakatla\n`America/Mexico_City` | America/Mexico_City\n`America/Miquelon` | America/Miquelon\n`America/Moncton` | America/Moncton\n`America/Monterrey` | America/Monterrey\n`America/Montevideo` | America/Montevideo\n`America/Montreal` | America/Montreal\n`America/Montserrat` | America/Montserrat\n`America/Nassau` | America/Nassau\n`America/New_York` | America/New_York\n`America/Nipigon` | America/Nipigon\n`America/Nome` | America/Nome\n`America/Noronha` | America/Noronha\n`America/North_Dakota/Beulah` | America/North_Dakota/Beulah\n`America/North_Dakota/Center` | America/North_Dakota/Center\n`America/North_Dakota/New_Salem` | America/North_Dakota/New_Salem\n`America/Ojinaga` | America/Ojinaga\n`America/Panama` | America/Panama\n`America/Pangnirtung` | America/Pangnirtung\n`America/Paramaribo` | America/Paramaribo\n`America/Phoenix` | America/Phoenix\n`America/Port-au-Prince` | America/Port-au-Prince\n`America/Port_of_Spain` | America/Port_of_Spain\n`America/Porto_Velho` | America/Porto_Velho\n`America/Puerto_Rico` | America/Puerto_Rico\n`America/Rainy_River` | America/Rainy_River\n`America/Rankin_Inlet` | America/Rankin_Inlet\n`America/Recife` | America/Recife\n`America/Regina` | America/Regina\n`America/Resolute` | America/Resolute\n`America/Rio_Branco` | America/Rio_Branco\n`America/Santa_Isabel` | America/Santa_Isabel\n`America/Santarem` | America/Santarem\n`America/Santiago` | America/Santiago\n`America/Santo_Domingo` | America/Santo_Domingo\n`America/Sao_Paulo` | America/Sao_Paulo\n`America/Scoresbysund` | America/Scoresbysund\n`America/Sitka` | America/Sitka\n`America/St_Barthelemy` | America/St_Barthelemy\n`America/St_Johns` | America/St_Johns\n`America/St_Kitts` | America/St_Kitts\n`America/St_Lucia` | America/St_Lucia\n`America/St_Thomas` | America/St_Thomas\n`America/St_Vincent` | America/St_Vincent\n`America/Swift_Current` | America/Swift_Current\n`America/Tegucigalpa` | America/Tegucigalpa\n`America/Thule` | America/Thule\n`America/Thunder_Bay` | America/Thunder_Bay\n`America/Tijuana` | America/Tijuana\n`America/Toronto` | America/Toronto\n`America/Tortola` | America/Tortola\n`America/Vancouver` | America/Vancouver\n`America/Whitehorse` | America/Whitehorse\n`America/Winnipeg` | America/Winnipeg\n`America/Yakutat` | America/Yakutat\n`America/Yellowknife` | America/Yellowknife\n`Antarctica/Casey` | Antarctica/Casey\n`Antarctica/Davis` | Antarctica/Davis\n`Antarctica/DumontDUrville` | Antarctica/DumontDUrville\n`Antarctica/Macquarie` | Antarctica/Macquarie\n`Antarctica/Mawson` | Antarctica/Mawson\n`Antarctica/McMurdo` | Antarctica/McMurdo\n`Antarctica/Palmer` | Antarctica/Palmer\n`Antarctica/Rothera` | Antarctica/Rothera\n`Antarctica/Syowa` | Antarctica/Syowa\n`Antarctica/Troll` | Antarctica/Troll\n`Antarctica/Vostok` | Antarctica/Vostok\n`Arctic/Longyearbyen` | Arctic/Longyearbyen\n`Asia/Aden` | Asia/Aden\n`Asia/Almaty` | Asia/Almaty\n`Asia/Amman` | Asia/Amman\n`Asia/Anadyr` | Asia/Anadyr\n`Asia/Aqtau` | Asia/Aqtau\n`Asia/Aqtobe` | Asia/Aqtobe\n`Asia/Ashgabat` | Asia/Ashgabat\n`Asia/Baghdad` | Asia/Baghdad\n`Asia/Bahrain` | Asia/Bahrain\n`Asia/Baku` | Asia/Baku\n`Asia/Bangkok` | Asia/Bangkok\n`Asia/Beirut` | Asia/Beirut\n`Asia/Bishkek` | Asia/Bishkek\n`Asia/Brunei` | Asia/Brunei\n`Asia/Chita` | Asia/Chita\n`Asia/Choibalsan` | Asia/Choibalsan\n`Asia/Colombo` | Asia/Colombo\n`Asia/Damascus` | Asia/Damascus\n`Asia/Dhaka` | Asia/Dhaka\n`Asia/Dili` | Asia/Dili\n`Asia/Dubai` | Asia/Dubai\n`Asia/Dushanbe` | Asia/Dushanbe\n`Asia/Gaza` | Asia/Gaza\n`Asia/Hebron` | Asia/Hebron\n`Asia/Ho_Chi_Minh` | Asia/Ho_Chi_Minh\n`Asia/Hong_Kong` | Asia/Hong_Kong\n`Asia/Hovd` | Asia/Hovd\n`Asia/Irkutsk` | Asia/Irkutsk\n`Asia/Jakarta` | Asia/Jakarta\n`Asia/Jayapura` | Asia/Jayapura\n`Asia/Jerusalem` | Asia/Jerusalem\n`Asia/Kabul` | Asia/Kabul\n`Asia/Kamchatka` | Asia/Kamchatka\n`Asia/Karachi` | Asia/Karachi\n`Asia/Kathmandu` | Asia/Kathmandu\n`Asia/Khandyga` | Asia/Khandyga\n`Asia/Kolkata` | Asia/Kolkata\n`Asia/Krasnoyarsk` | Asia/Krasnoyarsk\n`Asia/Kuala_Lumpur` | Asia/Kuala_Lumpur\n`Asia/Kuching` | Asia/Kuching\n`Asia/Kuwait` | Asia/Kuwait\n`Asia/Macau` | Asia/Macau\n`Asia/Magadan` | Asia/Magadan\n`Asia/Makassar` | Asia/Makassar\n`Asia/Manila` | Asia/Manila\n`Asia/Muscat` | Asia/Muscat\n`Asia/Nicosia` | Asia/Nicosia\n`Asia/Novokuznetsk` | Asia/Novokuznetsk\n`Asia/Novosibirsk` | Asia/Novosibirsk\n`Asia/Omsk` | Asia/Omsk\n`Asia/Oral` | Asia/Oral\n`Asia/Phnom_Penh` | Asia/Phnom_Penh\n`Asia/Pontianak` | Asia/Pontianak\n`Asia/Pyongyang` | Asia/Pyongyang\n`Asia/Qatar` | Asia/Qatar\n`Asia/Qyzylorda` | Asia/Qyzylorda\n`Asia/Rangoon` | Asia/Rangoon\n`Asia/Riyadh` | Asia/Riyadh\n`Asia/Sakhalin` | Asia/Sakhalin\n`Asia/Samarkand` | Asia/Samarkand\n`Asia/Seoul` | Asia/Seoul\n`Asia/Shanghai` | Asia/Shanghai\n`Asia/Singapore` | Asia/Singapore\n`Asia/Srednekolymsk` | Asia/Srednekolymsk\n`Asia/Taipei` | Asia/Taipei\n`Asia/Tashkent` | Asia/Tashkent\n`Asia/Tbilisi` | Asia/Tbilisi\n`Asia/Tehran` | Asia/Tehran\n`Asia/Thimphu` | Asia/Thimphu\n`Asia/Tokyo` | Asia/Tokyo\n`Asia/Ulaanbaatar` | Asia/Ulaanbaatar\n`Asia/Urumqi` | Asia/Urumqi\n`Asia/Ust-Nera` | Asia/Ust-Nera\n`Asia/Vientiane` | Asia/Vientiane\n`Asia/Vladivostok` | Asia/Vladivostok\n`Asia/Yakutsk` | Asia/Yakutsk\n`Asia/Yekaterinburg` | Asia/Yekaterinburg\n`Asia/Yerevan` | Asia/Yerevan\n`Atlantic/Azores` | Atlantic/Azores\n`Atlantic/Bermuda` | Atlantic/Bermuda\n`Atlantic/Canary` | Atlantic/Canary\n`Atlantic/Cape_Verde` | Atlantic/Cape_Verde\n`Atlantic/Faroe` | Atlantic/Faroe\n`Atlantic/Madeira` | Atlantic/Madeira\n`Atlantic/Reykjavik` | Atlantic/Reykjavik\n`Atlantic/South_Georgia` | Atlantic/South_Georgia\n`Atlantic/St_Helena` | Atlantic/St_Helena\n`Atlantic/Stanley` | Atlantic/Stanley\n`Australia/Adelaide` | Australia/Adelaide\n`Australia/Brisbane` | Australia/Brisbane\n`Australia/Broken_Hill` | Australia/Broken_Hill\n`Australia/Currie` | Australia/Currie\n`Australia/Darwin` | Australia/Darwin\n`Australia/Eucla` | Australia/Eucla\n`Australia/Hobart` | Australia/Hobart\n`Australia/Lindeman` | Australia/Lindeman\n`Australia/Lord_Howe` | Australia/Lord_Howe\n`Australia/Melbourne` | Australia/Melbourne\n`Australia/Perth` | Australia/Perth\n`Australia/Sydney` | Australia/Sydney\n`Canada/Atlantic` | Canada/Atlantic\n`Canada/Central` | Canada/Central\n`Canada/Eastern` | Canada/Eastern\n`Canada/Mountain` | Canada/Mountain\n`Canada/Newfoundland` | Canada/Newfoundland\n`Canada/Pacific` | Canada/Pacific\n`Europe/Amsterdam` | Europe/Amsterdam\n`Europe/Andorra` | Europe/Andorra\n`Europe/Athens` | Europe/Athens\n`Europe/Belgrade` | Europe/Belgrade\n`Europe/Berlin` | Europe/Berlin\n`Europe/Bratislava` | Europe/Bratislava\n`Europe/Brussels` | Europe/Brussels\n`Europe/Bucharest` | Europe/Bucharest\n`Europe/Budapest` | Europe/Budapest\n`Europe/Busingen` | Europe/Busingen\n`Europe/Chisinau` | Europe/Chisinau\n`Europe/Copenhagen` | Europe/Copenhagen\n`Europe/Dublin` | Europe/Dublin\n`Europe/Gibraltar` | Europe/Gibraltar\n`Europe/Guernsey` | Europe/Guernsey\n`Europe/Helsinki` | Europe/Helsinki\n`Europe/Isle_of_Man` | Europe/Isle_of_Man\n`Europe/Istanbul` | Europe/Istanbul\n`Europe/Jersey` | Europe/Jersey\n`Europe/Kaliningrad` | Europe/Kaliningrad\n`Europe/Kiev` | Europe/Kiev\n`Europe/Lisbon` | Europe/Lisbon\n`Europe/Ljubljana` | Europe/Ljubljana\n`Europe/London` | Europe/London\n`Europe/Luxembourg` | Europe/Luxembourg\n`Europe/Madrid` | Europe/Madrid\n`Europe/Malta` | Europe/Malta\n`Europe/Mariehamn` | Europe/Mariehamn\n`Europe/Minsk` | Europe/Minsk\n`Europe/Monaco` | Europe/Monaco\n`Europe/Moscow` | Europe/Moscow\n`Europe/Oslo` | Europe/Oslo\n`Europe/Paris` | Europe/Paris\n`Europe/Podgorica` | Europe/Podgorica\n`Europe/Prague` | Europe/Prague\n`Europe/Riga` | Europe/Riga\n`Europe/Rome` | Europe/Rome\n`Europe/Samara` | Europe/Samara\n`Europe/San_Marino` | Europe/San_Marino\n`Europe/Sarajevo` | Europe/Sarajevo\n`Europe/Simferopol` | Europe/Simferopol\n`Europe/Skopje` | Europe/Skopje\n`Europe/Sofia` | Europe/Sofia\n`Europe/Stockholm` | Europe/Stockholm\n`Europe/Tallinn` | Europe/Tallinn\n`Europe/Tirane` | Europe/Tirane\n`Europe/Uzhgorod` | Europe/Uzhgorod\n`Europe/Vaduz` | Europe/Vaduz\n`Europe/Vatican` | Europe/Vatican\n`Europe/Vienna` | Europe/Vienna\n`Europe/Vilnius` | Europe/Vilnius\n`Europe/Volgograd` | Europe/Volgograd\n`Europe/Warsaw` | Europe/Warsaw\n`Europe/Zagreb` | Europe/Zagreb\n`Europe/Zaporozhye` | Europe/Zaporozhye\n`Europe/Zurich` | Europe/Zurich\n`GMT` | GMT\n`Indian/Antananarivo` | Indian/Antananarivo\n`Indian/Chagos` | Indian/Chagos\n`Indian/Christmas` | Indian/Christmas\n`Indian/Cocos` | Indian/Cocos\n`Indian/Comoro` | Indian/Comoro\n`Indian/Kerguelen` | Indian/Kerguelen\n`Indian/Mahe` | Indian/Mahe\n`Indian/Maldives` | Indian/Maldives\n`Indian/Mauritius` | Indian/Mauritius\n`Indian/Mayotte` | Indian/Mayotte\n`Indian/Reunion` | Indian/Reunion\n`Pacific/Apia` | Pacific/Apia\n`Pacific/Auckland` | Pacific/Auckland\n`Pacific/Bougainville` | Pacific/Bougainville\n`Pacific/Chatham` | Pacific/Chatham\n`Pacific/Chuuk` | Pacific/Chuuk\n`Pacific/Easter` | Pacific/Easter\n`Pacific/Efate` | Pacific/Efate\n`Pacific/Enderbury` | Pacific/Enderbury\n`Pacific/Fakaofo` | Pacific/Fakaofo\n`Pacific/Fiji` | Pacific/Fiji\n`Pacific/Funafuti` | Pacific/Funafuti\n`Pacific/Galapagos` | Pacific/Galapagos\n`Pacific/Gambier` | Pacific/Gambier\n`Pacific/Guadalcanal` | Pacific/Guadalcanal\n`Pacific/Guam` | Pacific/Guam\n`Pacific/Honolulu` | Pacific/Honolulu\n`Pacific/Johnston` | Pacific/Johnston\n`Pacific/Kiritimati` | Pacific/Kiritimati\n`Pacific/Kosrae` | Pacific/Kosrae\n`Pacific/Kwajalein` | Pacific/Kwajalein\n`Pacific/Majuro` | Pacific/Majuro\n`Pacific/Marquesas` | Pacific/Marquesas\n`Pacific/Midway` | Pacific/Midway\n`Pacific/Nauru` | Pacific/Nauru\n`Pacific/Niue` | Pacific/Niue\n`Pacific/Norfolk` | Pacific/Norfolk\n`Pacific/Noumea` | Pacific/Noumea\n`Pacific/Pago_Pago` | Pacific/Pago_Pago\n`Pacific/Palau` | Pacific/Palau\n`Pacific/Pitcairn` | Pacific/Pitcairn\n`Pacific/Pohnpei` | Pacific/Pohnpei\n`Pacific/Port_Moresby` | Pacific/Port_Moresby\n`Pacific/Rarotonga` | Pacific/Rarotonga\n`Pacific/Saipan` | Pacific/Saipan\n`Pacific/Tahiti` | Pacific/Tahiti\n`Pacific/Tarawa` | Pacific/Tarawa\n`Pacific/Tongatapu` | Pacific/Tongatapu\n`Pacific/Wake` | Pacific/Wake\n`Pacific/Wallis` | Pacific/Wallis\n`US/Alaska` | US/Alaska\n`US/Arizona` | US/Arizona\n`US/Central` | US/Central\n`US/Eastern` | US/Eastern\n`US/Hawaii` | US/Hawaii\n`US/Mountain` | US/Mountain\n`US/Pacific` | US/Pacific\n`UTC` | UTC\n</details>"}, "language": {"type": "string", "description": "Choose the language you want Elorus to speak. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n</details>"}, "email_notifications": {"type": "boolean", "description": "Send me an email whenever a new notification is created."}, "first_name_translations": {"type": "string", "description": ""}, "last_name_translations": {"type": "string", "description": ""}}}, "name": "data", "in": "body"}], "tags": ["user"], "summary": "/native/user/", "operationId": "user_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "email": {"type": "string", "description": "When changing your email address, a new verification code will be sent to the new email address. You should verify the address within 10 days, otherwise your account will be suspended without any further notice."}, "first_name": {"type": "string", "description": ""}, "last_name": {"type": "string", "description": ""}, "phone_number": {"type": "string", "description": ""}, "date_joined": {"type": "string", "description": "\n\nTimezone information is included."}, "timezone": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`Africa/Abidjan` | Africa/Abidjan\n`Africa/Accra` | Africa/Accra\n`Africa/Addis_Ababa` | Africa/Addis_Ababa\n`Africa/Algiers` | Africa/Algiers\n`Africa/Asmara` | Africa/Asmara\n`Africa/Bamako` | Africa/Bamako\n`Africa/Bangui` | Africa/Bangui\n`Africa/Banjul` | Africa/Banjul\n`Africa/Bissau` | Africa/Bissau\n`Africa/Blantyre` | Africa/Blantyre\n`Africa/Brazzaville` | Africa/Brazzaville\n`Africa/Bujumbura` | Africa/Bujumbura\n`Africa/Cairo` | Africa/Cairo\n`Africa/Casablanca` | Africa/Casablanca\n`Africa/Ceuta` | Africa/Ceuta\n`Africa/Conakry` | Africa/Conakry\n`Africa/Dakar` | Africa/Dakar\n`Africa/Dar_es_Salaam` | Africa/Dar_es_Salaam\n`Africa/Djibouti` | Africa/Djibouti\n`Africa/Douala` | Africa/Douala\n`Africa/El_Aaiun` | Africa/El_Aaiun\n`Africa/Freetown` | Africa/Freetown\n`Africa/Gaborone` | Africa/Gaborone\n`Africa/Harare` | Africa/Harare\n`Africa/Johannesburg` | Africa/Johannesburg\n`Africa/Juba` | Africa/Juba\n`Africa/Kampala` | Africa/Kampala\n`Africa/Khartoum` | Africa/Khartoum\n`Africa/Kigali` | Africa/Kigali\n`Africa/Kinshasa` | Africa/Kinshasa\n`Africa/Lagos` | Africa/Lagos\n`Africa/Libreville` | Africa/Libreville\n`Africa/Lome` | Africa/Lome\n`Africa/Luanda` | Africa/Luanda\n`Africa/Lubumbashi` | Africa/Lubumbashi\n`Africa/Lusaka` | Africa/Lusaka\n`Africa/Malabo` | Africa/Malabo\n`Africa/Maputo` | Africa/Maputo\n`Africa/Maseru` | Africa/Maseru\n`Africa/Mbabane` | Africa/Mbabane\n`Africa/Mogadishu` | Africa/Mogadishu\n`Africa/Monrovia` | Africa/Monrovia\n`Africa/Nairobi` | Africa/Nairobi\n`Africa/Ndjamena` | Africa/Ndjamena\n`Africa/Niamey` | Africa/Niamey\n`Africa/Nouakchott` | Africa/Nouakchott\n`Africa/Ouagadougou` | Africa/Ouagadougou\n`Africa/Porto-Novo` | Africa/Porto-Novo\n`Africa/Sao_Tome` | Africa/Sao_Tome\n`Africa/Tripoli` | Africa/Tripoli\n`Africa/Tunis` | Africa/Tunis\n`Africa/Windhoek` | Africa/Windhoek\n`America/Adak` | America/Adak\n`America/Anchorage` | America/Anchorage\n`America/Anguilla` | America/Anguilla\n`America/Antigua` | America/Antigua\n`America/Araguaina` | America/Araguaina\n`America/Argentina/Buenos_Aires` | America/Argentina/Buenos_Aires\n`America/Argentina/Catamarca` | America/Argentina/Catamarca\n`America/Argentina/Cordoba` | America/Argentina/Cordoba\n`America/Argentina/Jujuy` | America/Argentina/Jujuy\n`America/Argentina/La_Rioja` | America/Argentina/La_Rioja\n`America/Argentina/Mendoza` | America/Argentina/Mendoza\n`America/Argentina/Rio_Gallegos` | America/Argentina/Rio_Gallegos\n`America/Argentina/Salta` | America/Argentina/Salta\n`America/Argentina/San_Juan` | America/Argentina/San_Juan\n`America/Argentina/San_Luis` | America/Argentina/San_Luis\n`America/Argentina/Tucuman` | America/Argentina/Tucuman\n`America/Argentina/Ushuaia` | America/Argentina/Ushuaia\n`America/Aruba` | America/Aruba\n`America/Asuncion` | America/Asuncion\n`America/Atikokan` | America/Atikokan\n`America/Bahia` | America/Bahia\n`America/Bahia_Banderas` | America/Bahia_Banderas\n`America/Barbados` | America/Barbados\n`America/Belem` | America/Belem\n`America/Belize` | America/Belize\n`America/Blanc-Sablon` | America/Blanc-Sablon\n`America/Boa_Vista` | America/Boa_Vista\n`America/Bogota` | America/Bogota\n`America/Boise` | America/Boise\n`America/Cambridge_Bay` | America/Cambridge_Bay\n`America/Campo_Grande` | America/Campo_Grande\n`America/Cancun` | America/Cancun\n`America/Caracas` | America/Caracas\n`America/Cayenne` | America/Cayenne\n`America/Cayman` | America/Cayman\n`America/Chicago` | America/Chicago\n`America/Chihuahua` | America/Chihuahua\n`America/Costa_Rica` | America/Costa_Rica\n`America/Creston` | America/Creston\n`America/Cuiaba` | America/Cuiaba\n`America/Curacao` | America/Curacao\n`America/Danmarkshavn` | America/Danmarkshavn\n`America/Dawson` | America/Dawson\n`America/Dawson_Creek` | America/Dawson_Creek\n`America/Denver` | America/Denver\n`America/Detroit` | America/Detroit\n`America/Dominica` | America/Dominica\n`America/Edmonton` | America/Edmonton\n`America/Eirunepe` | America/Eirunepe\n`America/El_Salvador` | America/El_Salvador\n`America/Fortaleza` | America/Fortaleza\n`America/Glace_Bay` | America/Glace_Bay\n`America/Godthab` | America/Godthab\n`America/Goose_Bay` | America/Goose_Bay\n`America/Grand_Turk` | America/Grand_Turk\n`America/Grenada` | America/Grenada\n`America/Guadeloupe` | America/Guadeloupe\n`America/Guatemala` | America/Guatemala\n`America/Guayaquil` | America/Guayaquil\n`America/Guyana` | America/Guyana\n`America/Halifax` | America/Halifax\n`America/Havana` | America/Havana\n`America/Hermosillo` | America/Hermosillo\n`America/Indiana/Indianapolis` | America/Indiana/Indianapolis\n`America/Indiana/Knox` | America/Indiana/Knox\n`America/Indiana/Marengo` | America/Indiana/Marengo\n`America/Indiana/Petersburg` | America/Indiana/Petersburg\n`America/Indiana/Tell_City` | America/Indiana/Tell_City\n`America/Indiana/Vevay` | America/Indiana/Vevay\n`America/Indiana/Vincennes` | America/Indiana/Vincennes\n`America/Indiana/Winamac` | America/Indiana/Winamac\n`America/Inuvik` | America/Inuvik\n`America/Iqaluit` | America/Iqaluit\n`America/Jamaica` | America/Jamaica\n`America/Juneau` | America/Juneau\n`America/Kentucky/Louisville` | America/Kentucky/Louisville\n`America/Kentucky/Monticello` | America/Kentucky/Monticello\n`America/Kralendijk` | America/Kralendijk\n`America/La_Paz` | America/La_Paz\n`America/Lima` | America/Lima\n`America/Los_Angeles` | America/Los_Angeles\n`America/Lower_Princes` | America/Lower_Princes\n`America/Maceio` | America/Maceio\n`America/Managua` | America/Managua\n`America/Manaus` | America/Manaus\n`America/Marigot` | America/Marigot\n`America/Martinique` | America/Martinique\n`America/Matamoros` | America/Matamoros\n`America/Mazatlan` | America/Mazatlan\n`America/Menominee` | America/Menominee\n`America/Merida` | America/Merida\n`America/Metlakatla` | America/Metlakatla\n`America/Mexico_City` | America/Mexico_City\n`America/Miquelon` | America/Miquelon\n`America/Moncton` | America/Moncton\n`America/Monterrey` | America/Monterrey\n`America/Montevideo` | America/Montevideo\n`America/Montreal` | America/Montreal\n`America/Montserrat` | America/Montserrat\n`America/Nassau` | America/Nassau\n`America/New_York` | America/New_York\n`America/Nipigon` | America/Nipigon\n`America/Nome` | America/Nome\n`America/Noronha` | America/Noronha\n`America/North_Dakota/Beulah` | America/North_Dakota/Beulah\n`America/North_Dakota/Center` | America/North_Dakota/Center\n`America/North_Dakota/New_Salem` | America/North_Dakota/New_Salem\n`America/Ojinaga` | America/Ojinaga\n`America/Panama` | America/Panama\n`America/Pangnirtung` | America/Pangnirtung\n`America/Paramaribo` | America/Paramaribo\n`America/Phoenix` | America/Phoenix\n`America/Port-au-Prince` | America/Port-au-Prince\n`America/Port_of_Spain` | America/Port_of_Spain\n`America/Porto_Velho` | America/Porto_Velho\n`America/Puerto_Rico` | America/Puerto_Rico\n`America/Rainy_River` | America/Rainy_River\n`America/Rankin_Inlet` | America/Rankin_Inlet\n`America/Recife` | America/Recife\n`America/Regina` | America/Regina\n`America/Resolute` | America/Resolute\n`America/Rio_Branco` | America/Rio_Branco\n`America/Santa_Isabel` | America/Santa_Isabel\n`America/Santarem` | America/Santarem\n`America/Santiago` | America/Santiago\n`America/Santo_Domingo` | America/Santo_Domingo\n`America/Sao_Paulo` | America/Sao_Paulo\n`America/Scoresbysund` | America/Scoresbysund\n`America/Sitka` | America/Sitka\n`America/St_Barthelemy` | America/St_Barthelemy\n`America/St_Johns` | America/St_Johns\n`America/St_Kitts` | America/St_Kitts\n`America/St_Lucia` | America/St_Lucia\n`America/St_Thomas` | America/St_Thomas\n`America/St_Vincent` | America/St_Vincent\n`America/Swift_Current` | America/Swift_Current\n`America/Tegucigalpa` | America/Tegucigalpa\n`America/Thule` | America/Thule\n`America/Thunder_Bay` | America/Thunder_Bay\n`America/Tijuana` | America/Tijuana\n`America/Toronto` | America/Toronto\n`America/Tortola` | America/Tortola\n`America/Vancouver` | America/Vancouver\n`America/Whitehorse` | America/Whitehorse\n`America/Winnipeg` | America/Winnipeg\n`America/Yakutat` | America/Yakutat\n`America/Yellowknife` | America/Yellowknife\n`Antarctica/Casey` | Antarctica/Casey\n`Antarctica/Davis` | Antarctica/Davis\n`Antarctica/DumontDUrville` | Antarctica/DumontDUrville\n`Antarctica/Macquarie` | Antarctica/Macquarie\n`Antarctica/Mawson` | Antarctica/Mawson\n`Antarctica/McMurdo` | Antarctica/McMurdo\n`Antarctica/Palmer` | Antarctica/Palmer\n`Antarctica/Rothera` | Antarctica/Rothera\n`Antarctica/Syowa` | Antarctica/Syowa\n`Antarctica/Troll` | Antarctica/Troll\n`Antarctica/Vostok` | Antarctica/Vostok\n`Arctic/Longyearbyen` | Arctic/Longyearbyen\n`Asia/Aden` | Asia/Aden\n`Asia/Almaty` | Asia/Almaty\n`Asia/Amman` | Asia/Amman\n`Asia/Anadyr` | Asia/Anadyr\n`Asia/Aqtau` | Asia/Aqtau\n`Asia/Aqtobe` | Asia/Aqtobe\n`Asia/Ashgabat` | Asia/Ashgabat\n`Asia/Baghdad` | Asia/Baghdad\n`Asia/Bahrain` | Asia/Bahrain\n`Asia/Baku` | Asia/Baku\n`Asia/Bangkok` | Asia/Bangkok\n`Asia/Beirut` | Asia/Beirut\n`Asia/Bishkek` | Asia/Bishkek\n`Asia/Brunei` | Asia/Brunei\n`Asia/Chita` | Asia/Chita\n`Asia/Choibalsan` | Asia/Choibalsan\n`Asia/Colombo` | Asia/Colombo\n`Asia/Damascus` | Asia/Damascus\n`Asia/Dhaka` | Asia/Dhaka\n`Asia/Dili` | Asia/Dili\n`Asia/Dubai` | Asia/Dubai\n`Asia/Dushanbe` | Asia/Dushanbe\n`Asia/Gaza` | Asia/Gaza\n`Asia/Hebron` | Asia/Hebron\n`Asia/Ho_Chi_Minh` | Asia/Ho_Chi_Minh\n`Asia/Hong_Kong` | Asia/Hong_Kong\n`Asia/Hovd` | Asia/Hovd\n`Asia/Irkutsk` | Asia/Irkutsk\n`Asia/Jakarta` | Asia/Jakarta\n`Asia/Jayapura` | Asia/Jayapura\n`Asia/Jerusalem` | Asia/Jerusalem\n`Asia/Kabul` | Asia/Kabul\n`Asia/Kamchatka` | Asia/Kamchatka\n`Asia/Karachi` | Asia/Karachi\n`Asia/Kathmandu` | Asia/Kathmandu\n`Asia/Khandyga` | Asia/Khandyga\n`Asia/Kolkata` | Asia/Kolkata\n`Asia/Krasnoyarsk` | Asia/Krasnoyarsk\n`Asia/Kuala_Lumpur` | Asia/Kuala_Lumpur\n`Asia/Kuching` | Asia/Kuching\n`Asia/Kuwait` | Asia/Kuwait\n`Asia/Macau` | Asia/Macau\n`Asia/Magadan` | Asia/Magadan\n`Asia/Makassar` | Asia/Makassar\n`Asia/Manila` | Asia/Manila\n`Asia/Muscat` | Asia/Muscat\n`Asia/Nicosia` | Asia/Nicosia\n`Asia/Novokuznetsk` | Asia/Novokuznetsk\n`Asia/Novosibirsk` | Asia/Novosibirsk\n`Asia/Omsk` | Asia/Omsk\n`Asia/Oral` | Asia/Oral\n`Asia/Phnom_Penh` | Asia/Phnom_Penh\n`Asia/Pontianak` | Asia/Pontianak\n`Asia/Pyongyang` | Asia/Pyongyang\n`Asia/Qatar` | Asia/Qatar\n`Asia/Qyzylorda` | Asia/Qyzylorda\n`Asia/Rangoon` | Asia/Rangoon\n`Asia/Riyadh` | Asia/Riyadh\n`Asia/Sakhalin` | Asia/Sakhalin\n`Asia/Samarkand` | Asia/Samarkand\n`Asia/Seoul` | Asia/Seoul\n`Asia/Shanghai` | Asia/Shanghai\n`Asia/Singapore` | Asia/Singapore\n`Asia/Srednekolymsk` | Asia/Srednekolymsk\n`Asia/Taipei` | Asia/Taipei\n`Asia/Tashkent` | Asia/Tashkent\n`Asia/Tbilisi` | Asia/Tbilisi\n`Asia/Tehran` | Asia/Tehran\n`Asia/Thimphu` | Asia/Thimphu\n`Asia/Tokyo` | Asia/Tokyo\n`Asia/Ulaanbaatar` | Asia/Ulaanbaatar\n`Asia/Urumqi` | Asia/Urumqi\n`Asia/Ust-Nera` | Asia/Ust-Nera\n`Asia/Vientiane` | Asia/Vientiane\n`Asia/Vladivostok` | Asia/Vladivostok\n`Asia/Yakutsk` | Asia/Yakutsk\n`Asia/Yekaterinburg` | Asia/Yekaterinburg\n`Asia/Yerevan` | Asia/Yerevan\n`Atlantic/Azores` | Atlantic/Azores\n`Atlantic/Bermuda` | Atlantic/Bermuda\n`Atlantic/Canary` | Atlantic/Canary\n`Atlantic/Cape_Verde` | Atlantic/Cape_Verde\n`Atlantic/Faroe` | Atlantic/Faroe\n`Atlantic/Madeira` | Atlantic/Madeira\n`Atlantic/Reykjavik` | Atlantic/Reykjavik\n`Atlantic/South_Georgia` | Atlantic/South_Georgia\n`Atlantic/St_Helena` | Atlantic/St_Helena\n`Atlantic/Stanley` | Atlantic/Stanley\n`Australia/Adelaide` | Australia/Adelaide\n`Australia/Brisbane` | Australia/Brisbane\n`Australia/Broken_Hill` | Australia/Broken_Hill\n`Australia/Currie` | Australia/Currie\n`Australia/Darwin` | Australia/Darwin\n`Australia/Eucla` | Australia/Eucla\n`Australia/Hobart` | Australia/Hobart\n`Australia/Lindeman` | Australia/Lindeman\n`Australia/Lord_Howe` | Australia/Lord_Howe\n`Australia/Melbourne` | Australia/Melbourne\n`Australia/Perth` | Australia/Perth\n`Australia/Sydney` | Australia/Sydney\n`Canada/Atlantic` | Canada/Atlantic\n`Canada/Central` | Canada/Central\n`Canada/Eastern` | Canada/Eastern\n`Canada/Mountain` | Canada/Mountain\n`Canada/Newfoundland` | Canada/Newfoundland\n`Canada/Pacific` | Canada/Pacific\n`Europe/Amsterdam` | Europe/Amsterdam\n`Europe/Andorra` | Europe/Andorra\n`Europe/Athens` | Europe/Athens\n`Europe/Belgrade` | Europe/Belgrade\n`Europe/Berlin` | Europe/Berlin\n`Europe/Bratislava` | Europe/Bratislava\n`Europe/Brussels` | Europe/Brussels\n`Europe/Bucharest` | Europe/Bucharest\n`Europe/Budapest` | Europe/Budapest\n`Europe/Busingen` | Europe/Busingen\n`Europe/Chisinau` | Europe/Chisinau\n`Europe/Copenhagen` | Europe/Copenhagen\n`Europe/Dublin` | Europe/Dublin\n`Europe/Gibraltar` | Europe/Gibraltar\n`Europe/Guernsey` | Europe/Guernsey\n`Europe/Helsinki` | Europe/Helsinki\n`Europe/Isle_of_Man` | Europe/Isle_of_Man\n`Europe/Istanbul` | Europe/Istanbul\n`Europe/Jersey` | Europe/Jersey\n`Europe/Kaliningrad` | Europe/Kaliningrad\n`Europe/Kiev` | Europe/Kiev\n`Europe/Lisbon` | Europe/Lisbon\n`Europe/Ljubljana` | Europe/Ljubljana\n`Europe/London` | Europe/London\n`Europe/Luxembourg` | Europe/Luxembourg\n`Europe/Madrid` | Europe/Madrid\n`Europe/Malta` | Europe/Malta\n`Europe/Mariehamn` | Europe/Mariehamn\n`Europe/Minsk` | Europe/Minsk\n`Europe/Monaco` | Europe/Monaco\n`Europe/Moscow` | Europe/Moscow\n`Europe/Oslo` | Europe/Oslo\n`Europe/Paris` | Europe/Paris\n`Europe/Podgorica` | Europe/Podgorica\n`Europe/Prague` | Europe/Prague\n`Europe/Riga` | Europe/Riga\n`Europe/Rome` | Europe/Rome\n`Europe/Samara` | Europe/Samara\n`Europe/San_Marino` | Europe/San_Marino\n`Europe/Sarajevo` | Europe/Sarajevo\n`Europe/Simferopol` | Europe/Simferopol\n`Europe/Skopje` | Europe/Skopje\n`Europe/Sofia` | Europe/Sofia\n`Europe/Stockholm` | Europe/Stockholm\n`Europe/Tallinn` | Europe/Tallinn\n`Europe/Tirane` | Europe/Tirane\n`Europe/Uzhgorod` | Europe/Uzhgorod\n`Europe/Vaduz` | Europe/Vaduz\n`Europe/Vatican` | Europe/Vatican\n`Europe/Vienna` | Europe/Vienna\n`Europe/Vilnius` | Europe/Vilnius\n`Europe/Volgograd` | Europe/Volgograd\n`Europe/Warsaw` | Europe/Warsaw\n`Europe/Zagreb` | Europe/Zagreb\n`Europe/Zaporozhye` | Europe/Zaporozhye\n`Europe/Zurich` | Europe/Zurich\n`GMT` | GMT\n`Indian/Antananarivo` | Indian/Antananarivo\n`Indian/Chagos` | Indian/Chagos\n`Indian/Christmas` | Indian/Christmas\n`Indian/Cocos` | Indian/Cocos\n`Indian/Comoro` | Indian/Comoro\n`Indian/Kerguelen` | Indian/Kerguelen\n`Indian/Mahe` | Indian/Mahe\n`Indian/Maldives` | Indian/Maldives\n`Indian/Mauritius` | Indian/Mauritius\n`Indian/Mayotte` | Indian/Mayotte\n`Indian/Reunion` | Indian/Reunion\n`Pacific/Apia` | Pacific/Apia\n`Pacific/Auckland` | Pacific/Auckland\n`Pacific/Bougainville` | Pacific/Bougainville\n`Pacific/Chatham` | Pacific/Chatham\n`Pacific/Chuuk` | Pacific/Chuuk\n`Pacific/Easter` | Pacific/Easter\n`Pacific/Efate` | Pacific/Efate\n`Pacific/Enderbury` | Pacific/Enderbury\n`Pacific/Fakaofo` | Pacific/Fakaofo\n`Pacific/Fiji` | Pacific/Fiji\n`Pacific/Funafuti` | Pacific/Funafuti\n`Pacific/Galapagos` | Pacific/Galapagos\n`Pacific/Gambier` | Pacific/Gambier\n`Pacific/Guadalcanal` | Pacific/Guadalcanal\n`Pacific/Guam` | Pacific/Guam\n`Pacific/Honolulu` | Pacific/Honolulu\n`Pacific/Johnston` | Pacific/Johnston\n`Pacific/Kiritimati` | Pacific/Kiritimati\n`Pacific/Kosrae` | Pacific/Kosrae\n`Pacific/Kwajalein` | Pacific/Kwajalein\n`Pacific/Majuro` | Pacific/Majuro\n`Pacific/Marquesas` | Pacific/Marquesas\n`Pacific/Midway` | Pacific/Midway\n`Pacific/Nauru` | Pacific/Nauru\n`Pacific/Niue` | Pacific/Niue\n`Pacific/Norfolk` | Pacific/Norfolk\n`Pacific/Noumea` | Pacific/Noumea\n`Pacific/Pago_Pago` | Pacific/Pago_Pago\n`Pacific/Palau` | Pacific/Palau\n`Pacific/Pitcairn` | Pacific/Pitcairn\n`Pacific/Pohnpei` | Pacific/Pohnpei\n`Pacific/Port_Moresby` | Pacific/Port_Moresby\n`Pacific/Rarotonga` | Pacific/Rarotonga\n`Pacific/Saipan` | Pacific/Saipan\n`Pacific/Tahiti` | Pacific/Tahiti\n`Pacific/Tarawa` | Pacific/Tarawa\n`Pacific/Tongatapu` | Pacific/Tongatapu\n`Pacific/Wake` | Pacific/Wake\n`Pacific/Wallis` | Pacific/Wallis\n`US/Alaska` | US/Alaska\n`US/Arizona` | US/Arizona\n`US/Central` | US/Central\n`US/Eastern` | US/Eastern\n`US/Hawaii` | US/Hawaii\n`US/Mountain` | US/Mountain\n`US/Pacific` | US/Pacific\n`UTC` | UTC\n</details>"}, "language": {"type": "string", "description": "Choose the language you want Elorus to speak. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n</details>"}, "email_notifications": {"type": "boolean", "description": "Send me an email whenever a new notification is created."}, "first_name_translations": {"type": "string", "description": ""}, "last_name_translations": {"type": "string", "description": ""}, "last_login": {"type": "string", "description": "\n\nTimezone information is included."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update user profile.\n---", "parameters": [{"schema": {"type": "object", "properties": {"email": {"type": "string", "description": "When changing your email address, a new verification code will be sent to the new email address. You should verify the address within 10 days, otherwise your account will be suspended without any further notice."}, "first_name": {"type": "string", "description": ""}, "last_name": {"type": "string", "description": ""}, "phone_number": {"type": "string", "description": ""}, "timezone": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`Africa/Abidjan` | Africa/Abidjan\n`Africa/Accra` | Africa/Accra\n`Africa/Addis_Ababa` | Africa/Addis_Ababa\n`Africa/Algiers` | Africa/Algiers\n`Africa/Asmara` | Africa/Asmara\n`Africa/Bamako` | Africa/Bamako\n`Africa/Bangui` | Africa/Bangui\n`Africa/Banjul` | Africa/Banjul\n`Africa/Bissau` | Africa/Bissau\n`Africa/Blantyre` | Africa/Blantyre\n`Africa/Brazzaville` | Africa/Brazzaville\n`Africa/Bujumbura` | Africa/Bujumbura\n`Africa/Cairo` | Africa/Cairo\n`Africa/Casablanca` | Africa/Casablanca\n`Africa/Ceuta` | Africa/Ceuta\n`Africa/Conakry` | Africa/Conakry\n`Africa/Dakar` | Africa/Dakar\n`Africa/Dar_es_Salaam` | Africa/Dar_es_Salaam\n`Africa/Djibouti` | Africa/Djibouti\n`Africa/Douala` | Africa/Douala\n`Africa/El_Aaiun` | Africa/El_Aaiun\n`Africa/Freetown` | Africa/Freetown\n`Africa/Gaborone` | Africa/Gaborone\n`Africa/Harare` | Africa/Harare\n`Africa/Johannesburg` | Africa/Johannesburg\n`Africa/Juba` | Africa/Juba\n`Africa/Kampala` | Africa/Kampala\n`Africa/Khartoum` | Africa/Khartoum\n`Africa/Kigali` | Africa/Kigali\n`Africa/Kinshasa` | Africa/Kinshasa\n`Africa/Lagos` | Africa/Lagos\n`Africa/Libreville` | Africa/Libreville\n`Africa/Lome` | Africa/Lome\n`Africa/Luanda` | Africa/Luanda\n`Africa/Lubumbashi` | Africa/Lubumbashi\n`Africa/Lusaka` | Africa/Lusaka\n`Africa/Malabo` | Africa/Malabo\n`Africa/Maputo` | Africa/Maputo\n`Africa/Maseru` | Africa/Maseru\n`Africa/Mbabane` | Africa/Mbabane\n`Africa/Mogadishu` | Africa/Mogadishu\n`Africa/Monrovia` | Africa/Monrovia\n`Africa/Nairobi` | Africa/Nairobi\n`Africa/Ndjamena` | Africa/Ndjamena\n`Africa/Niamey` | Africa/Niamey\n`Africa/Nouakchott` | Africa/Nouakchott\n`Africa/Ouagadougou` | Africa/Ouagadougou\n`Africa/Porto-Novo` | Africa/Porto-Novo\n`Africa/Sao_Tome` | Africa/Sao_Tome\n`Africa/Tripoli` | Africa/Tripoli\n`Africa/Tunis` | Africa/Tunis\n`Africa/Windhoek` | Africa/Windhoek\n`America/Adak` | America/Adak\n`America/Anchorage` | America/Anchorage\n`America/Anguilla` | America/Anguilla\n`America/Antigua` | America/Antigua\n`America/Araguaina` | America/Araguaina\n`America/Argentina/Buenos_Aires` | America/Argentina/Buenos_Aires\n`America/Argentina/Catamarca` | America/Argentina/Catamarca\n`America/Argentina/Cordoba` | America/Argentina/Cordoba\n`America/Argentina/Jujuy` | America/Argentina/Jujuy\n`America/Argentina/La_Rioja` | America/Argentina/La_Rioja\n`America/Argentina/Mendoza` | America/Argentina/Mendoza\n`America/Argentina/Rio_Gallegos` | America/Argentina/Rio_Gallegos\n`America/Argentina/Salta` | America/Argentina/Salta\n`America/Argentina/San_Juan` | America/Argentina/San_Juan\n`America/Argentina/San_Luis` | America/Argentina/San_Luis\n`America/Argentina/Tucuman` | America/Argentina/Tucuman\n`America/Argentina/Ushuaia` | America/Argentina/Ushuaia\n`America/Aruba` | America/Aruba\n`America/Asuncion` | America/Asuncion\n`America/Atikokan` | America/Atikokan\n`America/Bahia` | America/Bahia\n`America/Bahia_Banderas` | America/Bahia_Banderas\n`America/Barbados` | America/Barbados\n`America/Belem` | America/Belem\n`America/Belize` | America/Belize\n`America/Blanc-Sablon` | America/Blanc-Sablon\n`America/Boa_Vista` | America/Boa_Vista\n`America/Bogota` | America/Bogota\n`America/Boise` | America/Boise\n`America/Cambridge_Bay` | America/Cambridge_Bay\n`America/Campo_Grande` | America/Campo_Grande\n`America/Cancun` | America/Cancun\n`America/Caracas` | America/Caracas\n`America/Cayenne` | America/Cayenne\n`America/Cayman` | America/Cayman\n`America/Chicago` | America/Chicago\n`America/Chihuahua` | America/Chihuahua\n`America/Costa_Rica` | America/Costa_Rica\n`America/Creston` | America/Creston\n`America/Cuiaba` | America/Cuiaba\n`America/Curacao` | America/Curacao\n`America/Danmarkshavn` | America/Danmarkshavn\n`America/Dawson` | America/Dawson\n`America/Dawson_Creek` | America/Dawson_Creek\n`America/Denver` | America/Denver\n`America/Detroit` | America/Detroit\n`America/Dominica` | America/Dominica\n`America/Edmonton` | America/Edmonton\n`America/Eirunepe` | America/Eirunepe\n`America/El_Salvador` | America/El_Salvador\n`America/Fortaleza` | America/Fortaleza\n`America/Glace_Bay` | America/Glace_Bay\n`America/Godthab` | America/Godthab\n`America/Goose_Bay` | America/Goose_Bay\n`America/Grand_Turk` | America/Grand_Turk\n`America/Grenada` | America/Grenada\n`America/Guadeloupe` | America/Guadeloupe\n`America/Guatemala` | America/Guatemala\n`America/Guayaquil` | America/Guayaquil\n`America/Guyana` | America/Guyana\n`America/Halifax` | America/Halifax\n`America/Havana` | America/Havana\n`America/Hermosillo` | America/Hermosillo\n`America/Indiana/Indianapolis` | America/Indiana/Indianapolis\n`America/Indiana/Knox` | America/Indiana/Knox\n`America/Indiana/Marengo` | America/Indiana/Marengo\n`America/Indiana/Petersburg` | America/Indiana/Petersburg\n`America/Indiana/Tell_City` | America/Indiana/Tell_City\n`America/Indiana/Vevay` | America/Indiana/Vevay\n`America/Indiana/Vincennes` | America/Indiana/Vincennes\n`America/Indiana/Winamac` | America/Indiana/Winamac\n`America/Inuvik` | America/Inuvik\n`America/Iqaluit` | America/Iqaluit\n`America/Jamaica` | America/Jamaica\n`America/Juneau` | America/Juneau\n`America/Kentucky/Louisville` | America/Kentucky/Louisville\n`America/Kentucky/Monticello` | America/Kentucky/Monticello\n`America/Kralendijk` | America/Kralendijk\n`America/La_Paz` | America/La_Paz\n`America/Lima` | America/Lima\n`America/Los_Angeles` | America/Los_Angeles\n`America/Lower_Princes` | America/Lower_Princes\n`America/Maceio` | America/Maceio\n`America/Managua` | America/Managua\n`America/Manaus` | America/Manaus\n`America/Marigot` | America/Marigot\n`America/Martinique` | America/Martinique\n`America/Matamoros` | America/Matamoros\n`America/Mazatlan` | America/Mazatlan\n`America/Menominee` | America/Menominee\n`America/Merida` | America/Merida\n`America/Metlakatla` | America/Metlakatla\n`America/Mexico_City` | America/Mexico_City\n`America/Miquelon` | America/Miquelon\n`America/Moncton` | America/Moncton\n`America/Monterrey` | America/Monterrey\n`America/Montevideo` | America/Montevideo\n`America/Montreal` | America/Montreal\n`America/Montserrat` | America/Montserrat\n`America/Nassau` | America/Nassau\n`America/New_York` | America/New_York\n`America/Nipigon` | America/Nipigon\n`America/Nome` | America/Nome\n`America/Noronha` | America/Noronha\n`America/North_Dakota/Beulah` | America/North_Dakota/Beulah\n`America/North_Dakota/Center` | America/North_Dakota/Center\n`America/North_Dakota/New_Salem` | America/North_Dakota/New_Salem\n`America/Ojinaga` | America/Ojinaga\n`America/Panama` | America/Panama\n`America/Pangnirtung` | America/Pangnirtung\n`America/Paramaribo` | America/Paramaribo\n`America/Phoenix` | America/Phoenix\n`America/Port-au-Prince` | America/Port-au-Prince\n`America/Port_of_Spain` | America/Port_of_Spain\n`America/Porto_Velho` | America/Porto_Velho\n`America/Puerto_Rico` | America/Puerto_Rico\n`America/Rainy_River` | America/Rainy_River\n`America/Rankin_Inlet` | America/Rankin_Inlet\n`America/Recife` | America/Recife\n`America/Regina` | America/Regina\n`America/Resolute` | America/Resolute\n`America/Rio_Branco` | America/Rio_Branco\n`America/Santa_Isabel` | America/Santa_Isabel\n`America/Santarem` | America/Santarem\n`America/Santiago` | America/Santiago\n`America/Santo_Domingo` | America/Santo_Domingo\n`America/Sao_Paulo` | America/Sao_Paulo\n`America/Scoresbysund` | America/Scoresbysund\n`America/Sitka` | America/Sitka\n`America/St_Barthelemy` | America/St_Barthelemy\n`America/St_Johns` | America/St_Johns\n`America/St_Kitts` | America/St_Kitts\n`America/St_Lucia` | America/St_Lucia\n`America/St_Thomas` | America/St_Thomas\n`America/St_Vincent` | America/St_Vincent\n`America/Swift_Current` | America/Swift_Current\n`America/Tegucigalpa` | America/Tegucigalpa\n`America/Thule` | America/Thule\n`America/Thunder_Bay` | America/Thunder_Bay\n`America/Tijuana` | America/Tijuana\n`America/Toronto` | America/Toronto\n`America/Tortola` | America/Tortola\n`America/Vancouver` | America/Vancouver\n`America/Whitehorse` | America/Whitehorse\n`America/Winnipeg` | America/Winnipeg\n`America/Yakutat` | America/Yakutat\n`America/Yellowknife` | America/Yellowknife\n`Antarctica/Casey` | Antarctica/Casey\n`Antarctica/Davis` | Antarctica/Davis\n`Antarctica/DumontDUrville` | Antarctica/DumontDUrville\n`Antarctica/Macquarie` | Antarctica/Macquarie\n`Antarctica/Mawson` | Antarctica/Mawson\n`Antarctica/McMurdo` | Antarctica/McMurdo\n`Antarctica/Palmer` | Antarctica/Palmer\n`Antarctica/Rothera` | Antarctica/Rothera\n`Antarctica/Syowa` | Antarctica/Syowa\n`Antarctica/Troll` | Antarctica/Troll\n`Antarctica/Vostok` | Antarctica/Vostok\n`Arctic/Longyearbyen` | Arctic/Longyearbyen\n`Asia/Aden` | Asia/Aden\n`Asia/Almaty` | Asia/Almaty\n`Asia/Amman` | Asia/Amman\n`Asia/Anadyr` | Asia/Anadyr\n`Asia/Aqtau` | Asia/Aqtau\n`Asia/Aqtobe` | Asia/Aqtobe\n`Asia/Ashgabat` | Asia/Ashgabat\n`Asia/Baghdad` | Asia/Baghdad\n`Asia/Bahrain` | Asia/Bahrain\n`Asia/Baku` | Asia/Baku\n`Asia/Bangkok` | Asia/Bangkok\n`Asia/Beirut` | Asia/Beirut\n`Asia/Bishkek` | Asia/Bishkek\n`Asia/Brunei` | Asia/Brunei\n`Asia/Chita` | Asia/Chita\n`Asia/Choibalsan` | Asia/Choibalsan\n`Asia/Colombo` | Asia/Colombo\n`Asia/Damascus` | Asia/Damascus\n`Asia/Dhaka` | Asia/Dhaka\n`Asia/Dili` | Asia/Dili\n`Asia/Dubai` | Asia/Dubai\n`Asia/Dushanbe` | Asia/Dushanbe\n`Asia/Gaza` | Asia/Gaza\n`Asia/Hebron` | Asia/Hebron\n`Asia/Ho_Chi_Minh` | Asia/Ho_Chi_Minh\n`Asia/Hong_Kong` | Asia/Hong_Kong\n`Asia/Hovd` | Asia/Hovd\n`Asia/Irkutsk` | Asia/Irkutsk\n`Asia/Jakarta` | Asia/Jakarta\n`Asia/Jayapura` | Asia/Jayapura\n`Asia/Jerusalem` | Asia/Jerusalem\n`Asia/Kabul` | Asia/Kabul\n`Asia/Kamchatka` | Asia/Kamchatka\n`Asia/Karachi` | Asia/Karachi\n`Asia/Kathmandu` | Asia/Kathmandu\n`Asia/Khandyga` | Asia/Khandyga\n`Asia/Kolkata` | Asia/Kolkata\n`Asia/Krasnoyarsk` | Asia/Krasnoyarsk\n`Asia/Kuala_Lumpur` | Asia/Kuala_Lumpur\n`Asia/Kuching` | Asia/Kuching\n`Asia/Kuwait` | Asia/Kuwait\n`Asia/Macau` | Asia/Macau\n`Asia/Magadan` | Asia/Magadan\n`Asia/Makassar` | Asia/Makassar\n`Asia/Manila` | Asia/Manila\n`Asia/Muscat` | Asia/Muscat\n`Asia/Nicosia` | Asia/Nicosia\n`Asia/Novokuznetsk` | Asia/Novokuznetsk\n`Asia/Novosibirsk` | Asia/Novosibirsk\n`Asia/Omsk` | Asia/Omsk\n`Asia/Oral` | Asia/Oral\n`Asia/Phnom_Penh` | Asia/Phnom_Penh\n`Asia/Pontianak` | Asia/Pontianak\n`Asia/Pyongyang` | Asia/Pyongyang\n`Asia/Qatar` | Asia/Qatar\n`Asia/Qyzylorda` | Asia/Qyzylorda\n`Asia/Rangoon` | Asia/Rangoon\n`Asia/Riyadh` | Asia/Riyadh\n`Asia/Sakhalin` | Asia/Sakhalin\n`Asia/Samarkand` | Asia/Samarkand\n`Asia/Seoul` | Asia/Seoul\n`Asia/Shanghai` | Asia/Shanghai\n`Asia/Singapore` | Asia/Singapore\n`Asia/Srednekolymsk` | Asia/Srednekolymsk\n`Asia/Taipei` | Asia/Taipei\n`Asia/Tashkent` | Asia/Tashkent\n`Asia/Tbilisi` | Asia/Tbilisi\n`Asia/Tehran` | Asia/Tehran\n`Asia/Thimphu` | Asia/Thimphu\n`Asia/Tokyo` | Asia/Tokyo\n`Asia/Ulaanbaatar` | Asia/Ulaanbaatar\n`Asia/Urumqi` | Asia/Urumqi\n`Asia/Ust-Nera` | Asia/Ust-Nera\n`Asia/Vientiane` | Asia/Vientiane\n`Asia/Vladivostok` | Asia/Vladivostok\n`Asia/Yakutsk` | Asia/Yakutsk\n`Asia/Yekaterinburg` | Asia/Yekaterinburg\n`Asia/Yerevan` | Asia/Yerevan\n`Atlantic/Azores` | Atlantic/Azores\n`Atlantic/Bermuda` | Atlantic/Bermuda\n`Atlantic/Canary` | Atlantic/Canary\n`Atlantic/Cape_Verde` | Atlantic/Cape_Verde\n`Atlantic/Faroe` | Atlantic/Faroe\n`Atlantic/Madeira` | Atlantic/Madeira\n`Atlantic/Reykjavik` | Atlantic/Reykjavik\n`Atlantic/South_Georgia` | Atlantic/South_Georgia\n`Atlantic/St_Helena` | Atlantic/St_Helena\n`Atlantic/Stanley` | Atlantic/Stanley\n`Australia/Adelaide` | Australia/Adelaide\n`Australia/Brisbane` | Australia/Brisbane\n`Australia/Broken_Hill` | Australia/Broken_Hill\n`Australia/Currie` | Australia/Currie\n`Australia/Darwin` | Australia/Darwin\n`Australia/Eucla` | Australia/Eucla\n`Australia/Hobart` | Australia/Hobart\n`Australia/Lindeman` | Australia/Lindeman\n`Australia/Lord_Howe` | Australia/Lord_Howe\n`Australia/Melbourne` | Australia/Melbourne\n`Australia/Perth` | Australia/Perth\n`Australia/Sydney` | Australia/Sydney\n`Canada/Atlantic` | Canada/Atlantic\n`Canada/Central` | Canada/Central\n`Canada/Eastern` | Canada/Eastern\n`Canada/Mountain` | Canada/Mountain\n`Canada/Newfoundland` | Canada/Newfoundland\n`Canada/Pacific` | Canada/Pacific\n`Europe/Amsterdam` | Europe/Amsterdam\n`Europe/Andorra` | Europe/Andorra\n`Europe/Athens` | Europe/Athens\n`Europe/Belgrade` | Europe/Belgrade\n`Europe/Berlin` | Europe/Berlin\n`Europe/Bratislava` | Europe/Bratislava\n`Europe/Brussels` | Europe/Brussels\n`Europe/Bucharest` | Europe/Bucharest\n`Europe/Budapest` | Europe/Budapest\n`Europe/Busingen` | Europe/Busingen\n`Europe/Chisinau` | Europe/Chisinau\n`Europe/Copenhagen` | Europe/Copenhagen\n`Europe/Dublin` | Europe/Dublin\n`Europe/Gibraltar` | Europe/Gibraltar\n`Europe/Guernsey` | Europe/Guernsey\n`Europe/Helsinki` | Europe/Helsinki\n`Europe/Isle_of_Man` | Europe/Isle_of_Man\n`Europe/Istanbul` | Europe/Istanbul\n`Europe/Jersey` | Europe/Jersey\n`Europe/Kaliningrad` | Europe/Kaliningrad\n`Europe/Kiev` | Europe/Kiev\n`Europe/Lisbon` | Europe/Lisbon\n`Europe/Ljubljana` | Europe/Ljubljana\n`Europe/London` | Europe/London\n`Europe/Luxembourg` | Europe/Luxembourg\n`Europe/Madrid` | Europe/Madrid\n`Europe/Malta` | Europe/Malta\n`Europe/Mariehamn` | Europe/Mariehamn\n`Europe/Minsk` | Europe/Minsk\n`Europe/Monaco` | Europe/Monaco\n`Europe/Moscow` | Europe/Moscow\n`Europe/Oslo` | Europe/Oslo\n`Europe/Paris` | Europe/Paris\n`Europe/Podgorica` | Europe/Podgorica\n`Europe/Prague` | Europe/Prague\n`Europe/Riga` | Europe/Riga\n`Europe/Rome` | Europe/Rome\n`Europe/Samara` | Europe/Samara\n`Europe/San_Marino` | Europe/San_Marino\n`Europe/Sarajevo` | Europe/Sarajevo\n`Europe/Simferopol` | Europe/Simferopol\n`Europe/Skopje` | Europe/Skopje\n`Europe/Sofia` | Europe/Sofia\n`Europe/Stockholm` | Europe/Stockholm\n`Europe/Tallinn` | Europe/Tallinn\n`Europe/Tirane` | Europe/Tirane\n`Europe/Uzhgorod` | Europe/Uzhgorod\n`Europe/Vaduz` | Europe/Vaduz\n`Europe/Vatican` | Europe/Vatican\n`Europe/Vienna` | Europe/Vienna\n`Europe/Vilnius` | Europe/Vilnius\n`Europe/Volgograd` | Europe/Volgograd\n`Europe/Warsaw` | Europe/Warsaw\n`Europe/Zagreb` | Europe/Zagreb\n`Europe/Zaporozhye` | Europe/Zaporozhye\n`Europe/Zurich` | Europe/Zurich\n`GMT` | GMT\n`Indian/Antananarivo` | Indian/Antananarivo\n`Indian/Chagos` | Indian/Chagos\n`Indian/Christmas` | Indian/Christmas\n`Indian/Cocos` | Indian/Cocos\n`Indian/Comoro` | Indian/Comoro\n`Indian/Kerguelen` | Indian/Kerguelen\n`Indian/Mahe` | Indian/Mahe\n`Indian/Maldives` | Indian/Maldives\n`Indian/Mauritius` | Indian/Mauritius\n`Indian/Mayotte` | Indian/Mayotte\n`Indian/Reunion` | Indian/Reunion\n`Pacific/Apia` | Pacific/Apia\n`Pacific/Auckland` | Pacific/Auckland\n`Pacific/Bougainville` | Pacific/Bougainville\n`Pacific/Chatham` | Pacific/Chatham\n`Pacific/Chuuk` | Pacific/Chuuk\n`Pacific/Easter` | Pacific/Easter\n`Pacific/Efate` | Pacific/Efate\n`Pacific/Enderbury` | Pacific/Enderbury\n`Pacific/Fakaofo` | Pacific/Fakaofo\n`Pacific/Fiji` | Pacific/Fiji\n`Pacific/Funafuti` | Pacific/Funafuti\n`Pacific/Galapagos` | Pacific/Galapagos\n`Pacific/Gambier` | Pacific/Gambier\n`Pacific/Guadalcanal` | Pacific/Guadalcanal\n`Pacific/Guam` | Pacific/Guam\n`Pacific/Honolulu` | Pacific/Honolulu\n`Pacific/Johnston` | Pacific/Johnston\n`Pacific/Kiritimati` | Pacific/Kiritimati\n`Pacific/Kosrae` | Pacific/Kosrae\n`Pacific/Kwajalein` | Pacific/Kwajalein\n`Pacific/Majuro` | Pacific/Majuro\n`Pacific/Marquesas` | Pacific/Marquesas\n`Pacific/Midway` | Pacific/Midway\n`Pacific/Nauru` | Pacific/Nauru\n`Pacific/Niue` | Pacific/Niue\n`Pacific/Norfolk` | Pacific/Norfolk\n`Pacific/Noumea` | Pacific/Noumea\n`Pacific/Pago_Pago` | Pacific/Pago_Pago\n`Pacific/Palau` | Pacific/Palau\n`Pacific/Pitcairn` | Pacific/Pitcairn\n`Pacific/Pohnpei` | Pacific/Pohnpei\n`Pacific/Port_Moresby` | Pacific/Port_Moresby\n`Pacific/Rarotonga` | Pacific/Rarotonga\n`Pacific/Saipan` | Pacific/Saipan\n`Pacific/Tahiti` | Pacific/Tahiti\n`Pacific/Tarawa` | Pacific/Tarawa\n`Pacific/Tongatapu` | Pacific/Tongatapu\n`Pacific/Wake` | Pacific/Wake\n`Pacific/Wallis` | Pacific/Wallis\n`US/Alaska` | US/Alaska\n`US/Arizona` | US/Arizona\n`US/Central` | US/Central\n`US/Eastern` | US/Eastern\n`US/Hawaii` | US/Hawaii\n`US/Mountain` | US/Mountain\n`US/Pacific` | US/Pacific\n`UTC` | UTC\n</details>"}, "language": {"type": "string", "description": "Choose the language you want Elorus to speak. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n</details>"}, "email_notifications": {"type": "boolean", "description": "Send me an email whenever a new notification is created."}, "first_name_translations": {"type": "string", "description": ""}, "last_name_translations": {"type": "string", "description": ""}}}, "name": "data", "in": "body"}], "tags": ["user"], "summary": "/native/user/", "operationId": "user_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "email": {"type": "string", "description": "When changing your email address, a new verification code will be sent to the new email address. You should verify the address within 10 days, otherwise your account will be suspended without any further notice."}, "first_name": {"type": "string", "description": ""}, "last_name": {"type": "string", "description": ""}, "phone_number": {"type": "string", "description": ""}, "date_joined": {"type": "string", "description": "\n\nTimezone information is included."}, "timezone": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`Africa/Abidjan` | Africa/Abidjan\n`Africa/Accra` | Africa/Accra\n`Africa/Addis_Ababa` | Africa/Addis_Ababa\n`Africa/Algiers` | Africa/Algiers\n`Africa/Asmara` | Africa/Asmara\n`Africa/Bamako` | Africa/Bamako\n`Africa/Bangui` | Africa/Bangui\n`Africa/Banjul` | Africa/Banjul\n`Africa/Bissau` | Africa/Bissau\n`Africa/Blantyre` | Africa/Blantyre\n`Africa/Brazzaville` | Africa/Brazzaville\n`Africa/Bujumbura` | Africa/Bujumbura\n`Africa/Cairo` | Africa/Cairo\n`Africa/Casablanca` | Africa/Casablanca\n`Africa/Ceuta` | Africa/Ceuta\n`Africa/Conakry` | Africa/Conakry\n`Africa/Dakar` | Africa/Dakar\n`Africa/Dar_es_Salaam` | Africa/Dar_es_Salaam\n`Africa/Djibouti` | Africa/Djibouti\n`Africa/Douala` | Africa/Douala\n`Africa/El_Aaiun` | Africa/El_Aaiun\n`Africa/Freetown` | Africa/Freetown\n`Africa/Gaborone` | Africa/Gaborone\n`Africa/Harare` | Africa/Harare\n`Africa/Johannesburg` | Africa/Johannesburg\n`Africa/Juba` | Africa/Juba\n`Africa/Kampala` | Africa/Kampala\n`Africa/Khartoum` | Africa/Khartoum\n`Africa/Kigali` | Africa/Kigali\n`Africa/Kinshasa` | Africa/Kinshasa\n`Africa/Lagos` | Africa/Lagos\n`Africa/Libreville` | Africa/Libreville\n`Africa/Lome` | Africa/Lome\n`Africa/Luanda` | Africa/Luanda\n`Africa/Lubumbashi` | Africa/Lubumbashi\n`Africa/Lusaka` | Africa/Lusaka\n`Africa/Malabo` | Africa/Malabo\n`Africa/Maputo` | Africa/Maputo\n`Africa/Maseru` | Africa/Maseru\n`Africa/Mbabane` | Africa/Mbabane\n`Africa/Mogadishu` | Africa/Mogadishu\n`Africa/Monrovia` | Africa/Monrovia\n`Africa/Nairobi` | Africa/Nairobi\n`Africa/Ndjamena` | Africa/Ndjamena\n`Africa/Niamey` | Africa/Niamey\n`Africa/Nouakchott` | Africa/Nouakchott\n`Africa/Ouagadougou` | Africa/Ouagadougou\n`Africa/Porto-Novo` | Africa/Porto-Novo\n`Africa/Sao_Tome` | Africa/Sao_Tome\n`Africa/Tripoli` | Africa/Tripoli\n`Africa/Tunis` | Africa/Tunis\n`Africa/Windhoek` | Africa/Windhoek\n`America/Adak` | America/Adak\n`America/Anchorage` | America/Anchorage\n`America/Anguilla` | America/Anguilla\n`America/Antigua` | America/Antigua\n`America/Araguaina` | America/Araguaina\n`America/Argentina/Buenos_Aires` | America/Argentina/Buenos_Aires\n`America/Argentina/Catamarca` | America/Argentina/Catamarca\n`America/Argentina/Cordoba` | America/Argentina/Cordoba\n`America/Argentina/Jujuy` | America/Argentina/Jujuy\n`America/Argentina/La_Rioja` | America/Argentina/La_Rioja\n`America/Argentina/Mendoza` | America/Argentina/Mendoza\n`America/Argentina/Rio_Gallegos` | America/Argentina/Rio_Gallegos\n`America/Argentina/Salta` | America/Argentina/Salta\n`America/Argentina/San_Juan` | America/Argentina/San_Juan\n`America/Argentina/San_Luis` | America/Argentina/San_Luis\n`America/Argentina/Tucuman` | America/Argentina/Tucuman\n`America/Argentina/Ushuaia` | America/Argentina/Ushuaia\n`America/Aruba` | America/Aruba\n`America/Asuncion` | America/Asuncion\n`America/Atikokan` | America/Atikokan\n`America/Bahia` | America/Bahia\n`America/Bahia_Banderas` | America/Bahia_Banderas\n`America/Barbados` | America/Barbados\n`America/Belem` | America/Belem\n`America/Belize` | America/Belize\n`America/Blanc-Sablon` | America/Blanc-Sablon\n`America/Boa_Vista` | America/Boa_Vista\n`America/Bogota` | America/Bogota\n`America/Boise` | America/Boise\n`America/Cambridge_Bay` | America/Cambridge_Bay\n`America/Campo_Grande` | America/Campo_Grande\n`America/Cancun` | America/Cancun\n`America/Caracas` | America/Caracas\n`America/Cayenne` | America/Cayenne\n`America/Cayman` | America/Cayman\n`America/Chicago` | America/Chicago\n`America/Chihuahua` | America/Chihuahua\n`America/Costa_Rica` | America/Costa_Rica\n`America/Creston` | America/Creston\n`America/Cuiaba` | America/Cuiaba\n`America/Curacao` | America/Curacao\n`America/Danmarkshavn` | America/Danmarkshavn\n`America/Dawson` | America/Dawson\n`America/Dawson_Creek` | America/Dawson_Creek\n`America/Denver` | America/Denver\n`America/Detroit` | America/Detroit\n`America/Dominica` | America/Dominica\n`America/Edmonton` | America/Edmonton\n`America/Eirunepe` | America/Eirunepe\n`America/El_Salvador` | America/El_Salvador\n`America/Fortaleza` | America/Fortaleza\n`America/Glace_Bay` | America/Glace_Bay\n`America/Godthab` | America/Godthab\n`America/Goose_Bay` | America/Goose_Bay\n`America/Grand_Turk` | America/Grand_Turk\n`America/Grenada` | America/Grenada\n`America/Guadeloupe` | America/Guadeloupe\n`America/Guatemala` | America/Guatemala\n`America/Guayaquil` | America/Guayaquil\n`America/Guyana` | America/Guyana\n`America/Halifax` | America/Halifax\n`America/Havana` | America/Havana\n`America/Hermosillo` | America/Hermosillo\n`America/Indiana/Indianapolis` | America/Indiana/Indianapolis\n`America/Indiana/Knox` | America/Indiana/Knox\n`America/Indiana/Marengo` | America/Indiana/Marengo\n`America/Indiana/Petersburg` | America/Indiana/Petersburg\n`America/Indiana/Tell_City` | America/Indiana/Tell_City\n`America/Indiana/Vevay` | America/Indiana/Vevay\n`America/Indiana/Vincennes` | America/Indiana/Vincennes\n`America/Indiana/Winamac` | America/Indiana/Winamac\n`America/Inuvik` | America/Inuvik\n`America/Iqaluit` | America/Iqaluit\n`America/Jamaica` | America/Jamaica\n`America/Juneau` | America/Juneau\n`America/Kentucky/Louisville` | America/Kentucky/Louisville\n`America/Kentucky/Monticello` | America/Kentucky/Monticello\n`America/Kralendijk` | America/Kralendijk\n`America/La_Paz` | America/La_Paz\n`America/Lima` | America/Lima\n`America/Los_Angeles` | America/Los_Angeles\n`America/Lower_Princes` | America/Lower_Princes\n`America/Maceio` | America/Maceio\n`America/Managua` | America/Managua\n`America/Manaus` | America/Manaus\n`America/Marigot` | America/Marigot\n`America/Martinique` | America/Martinique\n`America/Matamoros` | America/Matamoros\n`America/Mazatlan` | America/Mazatlan\n`America/Menominee` | America/Menominee\n`America/Merida` | America/Merida\n`America/Metlakatla` | America/Metlakatla\n`America/Mexico_City` | America/Mexico_City\n`America/Miquelon` | America/Miquelon\n`America/Moncton` | America/Moncton\n`America/Monterrey` | America/Monterrey\n`America/Montevideo` | America/Montevideo\n`America/Montreal` | America/Montreal\n`America/Montserrat` | America/Montserrat\n`America/Nassau` | America/Nassau\n`America/New_York` | America/New_York\n`America/Nipigon` | America/Nipigon\n`America/Nome` | America/Nome\n`America/Noronha` | America/Noronha\n`America/North_Dakota/Beulah` | America/North_Dakota/Beulah\n`America/North_Dakota/Center` | America/North_Dakota/Center\n`America/North_Dakota/New_Salem` | America/North_Dakota/New_Salem\n`America/Ojinaga` | America/Ojinaga\n`America/Panama` | America/Panama\n`America/Pangnirtung` | America/Pangnirtung\n`America/Paramaribo` | America/Paramaribo\n`America/Phoenix` | America/Phoenix\n`America/Port-au-Prince` | America/Port-au-Prince\n`America/Port_of_Spain` | America/Port_of_Spain\n`America/Porto_Velho` | America/Porto_Velho\n`America/Puerto_Rico` | America/Puerto_Rico\n`America/Rainy_River` | America/Rainy_River\n`America/Rankin_Inlet` | America/Rankin_Inlet\n`America/Recife` | America/Recife\n`America/Regina` | America/Regina\n`America/Resolute` | America/Resolute\n`America/Rio_Branco` | America/Rio_Branco\n`America/Santa_Isabel` | America/Santa_Isabel\n`America/Santarem` | America/Santarem\n`America/Santiago` | America/Santiago\n`America/Santo_Domingo` | America/Santo_Domingo\n`America/Sao_Paulo` | America/Sao_Paulo\n`America/Scoresbysund` | America/Scoresbysund\n`America/Sitka` | America/Sitka\n`America/St_Barthelemy` | America/St_Barthelemy\n`America/St_Johns` | America/St_Johns\n`America/St_Kitts` | America/St_Kitts\n`America/St_Lucia` | America/St_Lucia\n`America/St_Thomas` | America/St_Thomas\n`America/St_Vincent` | America/St_Vincent\n`America/Swift_Current` | America/Swift_Current\n`America/Tegucigalpa` | America/Tegucigalpa\n`America/Thule` | America/Thule\n`America/Thunder_Bay` | America/Thunder_Bay\n`America/Tijuana` | America/Tijuana\n`America/Toronto` | America/Toronto\n`America/Tortola` | America/Tortola\n`America/Vancouver` | America/Vancouver\n`America/Whitehorse` | America/Whitehorse\n`America/Winnipeg` | America/Winnipeg\n`America/Yakutat` | America/Yakutat\n`America/Yellowknife` | America/Yellowknife\n`Antarctica/Casey` | Antarctica/Casey\n`Antarctica/Davis` | Antarctica/Davis\n`Antarctica/DumontDUrville` | Antarctica/DumontDUrville\n`Antarctica/Macquarie` | Antarctica/Macquarie\n`Antarctica/Mawson` | Antarctica/Mawson\n`Antarctica/McMurdo` | Antarctica/McMurdo\n`Antarctica/Palmer` | Antarctica/Palmer\n`Antarctica/Rothera` | Antarctica/Rothera\n`Antarctica/Syowa` | Antarctica/Syowa\n`Antarctica/Troll` | Antarctica/Troll\n`Antarctica/Vostok` | Antarctica/Vostok\n`Arctic/Longyearbyen` | Arctic/Longyearbyen\n`Asia/Aden` | Asia/Aden\n`Asia/Almaty` | Asia/Almaty\n`Asia/Amman` | Asia/Amman\n`Asia/Anadyr` | Asia/Anadyr\n`Asia/Aqtau` | Asia/Aqtau\n`Asia/Aqtobe` | Asia/Aqtobe\n`Asia/Ashgabat` | Asia/Ashgabat\n`Asia/Baghdad` | Asia/Baghdad\n`Asia/Bahrain` | Asia/Bahrain\n`Asia/Baku` | Asia/Baku\n`Asia/Bangkok` | Asia/Bangkok\n`Asia/Beirut` | Asia/Beirut\n`Asia/Bishkek` | Asia/Bishkek\n`Asia/Brunei` | Asia/Brunei\n`Asia/Chita` | Asia/Chita\n`Asia/Choibalsan` | Asia/Choibalsan\n`Asia/Colombo` | Asia/Colombo\n`Asia/Damascus` | Asia/Damascus\n`Asia/Dhaka` | Asia/Dhaka\n`Asia/Dili` | Asia/Dili\n`Asia/Dubai` | Asia/Dubai\n`Asia/Dushanbe` | Asia/Dushanbe\n`Asia/Gaza` | Asia/Gaza\n`Asia/Hebron` | Asia/Hebron\n`Asia/Ho_Chi_Minh` | Asia/Ho_Chi_Minh\n`Asia/Hong_Kong` | Asia/Hong_Kong\n`Asia/Hovd` | Asia/Hovd\n`Asia/Irkutsk` | Asia/Irkutsk\n`Asia/Jakarta` | Asia/Jakarta\n`Asia/Jayapura` | Asia/Jayapura\n`Asia/Jerusalem` | Asia/Jerusalem\n`Asia/Kabul` | Asia/Kabul\n`Asia/Kamchatka` | Asia/Kamchatka\n`Asia/Karachi` | Asia/Karachi\n`Asia/Kathmandu` | Asia/Kathmandu\n`Asia/Khandyga` | Asia/Khandyga\n`Asia/Kolkata` | Asia/Kolkata\n`Asia/Krasnoyarsk` | Asia/Krasnoyarsk\n`Asia/Kuala_Lumpur` | Asia/Kuala_Lumpur\n`Asia/Kuching` | Asia/Kuching\n`Asia/Kuwait` | Asia/Kuwait\n`Asia/Macau` | Asia/Macau\n`Asia/Magadan` | Asia/Magadan\n`Asia/Makassar` | Asia/Makassar\n`Asia/Manila` | Asia/Manila\n`Asia/Muscat` | Asia/Muscat\n`Asia/Nicosia` | Asia/Nicosia\n`Asia/Novokuznetsk` | Asia/Novokuznetsk\n`Asia/Novosibirsk` | Asia/Novosibirsk\n`Asia/Omsk` | Asia/Omsk\n`Asia/Oral` | Asia/Oral\n`Asia/Phnom_Penh` | Asia/Phnom_Penh\n`Asia/Pontianak` | Asia/Pontianak\n`Asia/Pyongyang` | Asia/Pyongyang\n`Asia/Qatar` | Asia/Qatar\n`Asia/Qyzylorda` | Asia/Qyzylorda\n`Asia/Rangoon` | Asia/Rangoon\n`Asia/Riyadh` | Asia/Riyadh\n`Asia/Sakhalin` | Asia/Sakhalin\n`Asia/Samarkand` | Asia/Samarkand\n`Asia/Seoul` | Asia/Seoul\n`Asia/Shanghai` | Asia/Shanghai\n`Asia/Singapore` | Asia/Singapore\n`Asia/Srednekolymsk` | Asia/Srednekolymsk\n`Asia/Taipei` | Asia/Taipei\n`Asia/Tashkent` | Asia/Tashkent\n`Asia/Tbilisi` | Asia/Tbilisi\n`Asia/Tehran` | Asia/Tehran\n`Asia/Thimphu` | Asia/Thimphu\n`Asia/Tokyo` | Asia/Tokyo\n`Asia/Ulaanbaatar` | Asia/Ulaanbaatar\n`Asia/Urumqi` | Asia/Urumqi\n`Asia/Ust-Nera` | Asia/Ust-Nera\n`Asia/Vientiane` | Asia/Vientiane\n`Asia/Vladivostok` | Asia/Vladivostok\n`Asia/Yakutsk` | Asia/Yakutsk\n`Asia/Yekaterinburg` | Asia/Yekaterinburg\n`Asia/Yerevan` | Asia/Yerevan\n`Atlantic/Azores` | Atlantic/Azores\n`Atlantic/Bermuda` | Atlantic/Bermuda\n`Atlantic/Canary` | Atlantic/Canary\n`Atlantic/Cape_Verde` | Atlantic/Cape_Verde\n`Atlantic/Faroe` | Atlantic/Faroe\n`Atlantic/Madeira` | Atlantic/Madeira\n`Atlantic/Reykjavik` | Atlantic/Reykjavik\n`Atlantic/South_Georgia` | Atlantic/South_Georgia\n`Atlantic/St_Helena` | Atlantic/St_Helena\n`Atlantic/Stanley` | Atlantic/Stanley\n`Australia/Adelaide` | Australia/Adelaide\n`Australia/Brisbane` | Australia/Brisbane\n`Australia/Broken_Hill` | Australia/Broken_Hill\n`Australia/Currie` | Australia/Currie\n`Australia/Darwin` | Australia/Darwin\n`Australia/Eucla` | Australia/Eucla\n`Australia/Hobart` | Australia/Hobart\n`Australia/Lindeman` | Australia/Lindeman\n`Australia/Lord_Howe` | Australia/Lord_Howe\n`Australia/Melbourne` | Australia/Melbourne\n`Australia/Perth` | Australia/Perth\n`Australia/Sydney` | Australia/Sydney\n`Canada/Atlantic` | Canada/Atlantic\n`Canada/Central` | Canada/Central\n`Canada/Eastern` | Canada/Eastern\n`Canada/Mountain` | Canada/Mountain\n`Canada/Newfoundland` | Canada/Newfoundland\n`Canada/Pacific` | Canada/Pacific\n`Europe/Amsterdam` | Europe/Amsterdam\n`Europe/Andorra` | Europe/Andorra\n`Europe/Athens` | Europe/Athens\n`Europe/Belgrade` | Europe/Belgrade\n`Europe/Berlin` | Europe/Berlin\n`Europe/Bratislava` | Europe/Bratislava\n`Europe/Brussels` | Europe/Brussels\n`Europe/Bucharest` | Europe/Bucharest\n`Europe/Budapest` | Europe/Budapest\n`Europe/Busingen` | Europe/Busingen\n`Europe/Chisinau` | Europe/Chisinau\n`Europe/Copenhagen` | Europe/Copenhagen\n`Europe/Dublin` | Europe/Dublin\n`Europe/Gibraltar` | Europe/Gibraltar\n`Europe/Guernsey` | Europe/Guernsey\n`Europe/Helsinki` | Europe/Helsinki\n`Europe/Isle_of_Man` | Europe/Isle_of_Man\n`Europe/Istanbul` | Europe/Istanbul\n`Europe/Jersey` | Europe/Jersey\n`Europe/Kaliningrad` | Europe/Kaliningrad\n`Europe/Kiev` | Europe/Kiev\n`Europe/Lisbon` | Europe/Lisbon\n`Europe/Ljubljana` | Europe/Ljubljana\n`Europe/London` | Europe/London\n`Europe/Luxembourg` | Europe/Luxembourg\n`Europe/Madrid` | Europe/Madrid\n`Europe/Malta` | Europe/Malta\n`Europe/Mariehamn` | Europe/Mariehamn\n`Europe/Minsk` | Europe/Minsk\n`Europe/Monaco` | Europe/Monaco\n`Europe/Moscow` | Europe/Moscow\n`Europe/Oslo` | Europe/Oslo\n`Europe/Paris` | Europe/Paris\n`Europe/Podgorica` | Europe/Podgorica\n`Europe/Prague` | Europe/Prague\n`Europe/Riga` | Europe/Riga\n`Europe/Rome` | Europe/Rome\n`Europe/Samara` | Europe/Samara\n`Europe/San_Marino` | Europe/San_Marino\n`Europe/Sarajevo` | Europe/Sarajevo\n`Europe/Simferopol` | Europe/Simferopol\n`Europe/Skopje` | Europe/Skopje\n`Europe/Sofia` | Europe/Sofia\n`Europe/Stockholm` | Europe/Stockholm\n`Europe/Tallinn` | Europe/Tallinn\n`Europe/Tirane` | Europe/Tirane\n`Europe/Uzhgorod` | Europe/Uzhgorod\n`Europe/Vaduz` | Europe/Vaduz\n`Europe/Vatican` | Europe/Vatican\n`Europe/Vienna` | Europe/Vienna\n`Europe/Vilnius` | Europe/Vilnius\n`Europe/Volgograd` | Europe/Volgograd\n`Europe/Warsaw` | Europe/Warsaw\n`Europe/Zagreb` | Europe/Zagreb\n`Europe/Zaporozhye` | Europe/Zaporozhye\n`Europe/Zurich` | Europe/Zurich\n`GMT` | GMT\n`Indian/Antananarivo` | Indian/Antananarivo\n`Indian/Chagos` | Indian/Chagos\n`Indian/Christmas` | Indian/Christmas\n`Indian/Cocos` | Indian/Cocos\n`Indian/Comoro` | Indian/Comoro\n`Indian/Kerguelen` | Indian/Kerguelen\n`Indian/Mahe` | Indian/Mahe\n`Indian/Maldives` | Indian/Maldives\n`Indian/Mauritius` | Indian/Mauritius\n`Indian/Mayotte` | Indian/Mayotte\n`Indian/Reunion` | Indian/Reunion\n`Pacific/Apia` | Pacific/Apia\n`Pacific/Auckland` | Pacific/Auckland\n`Pacific/Bougainville` | Pacific/Bougainville\n`Pacific/Chatham` | Pacific/Chatham\n`Pacific/Chuuk` | Pacific/Chuuk\n`Pacific/Easter` | Pacific/Easter\n`Pacific/Efate` | Pacific/Efate\n`Pacific/Enderbury` | Pacific/Enderbury\n`Pacific/Fakaofo` | Pacific/Fakaofo\n`Pacific/Fiji` | Pacific/Fiji\n`Pacific/Funafuti` | Pacific/Funafuti\n`Pacific/Galapagos` | Pacific/Galapagos\n`Pacific/Gambier` | Pacific/Gambier\n`Pacific/Guadalcanal` | Pacific/Guadalcanal\n`Pacific/Guam` | Pacific/Guam\n`Pacific/Honolulu` | Pacific/Honolulu\n`Pacific/Johnston` | Pacific/Johnston\n`Pacific/Kiritimati` | Pacific/Kiritimati\n`Pacific/Kosrae` | Pacific/Kosrae\n`Pacific/Kwajalein` | Pacific/Kwajalein\n`Pacific/Majuro` | Pacific/Majuro\n`Pacific/Marquesas` | Pacific/Marquesas\n`Pacific/Midway` | Pacific/Midway\n`Pacific/Nauru` | Pacific/Nauru\n`Pacific/Niue` | Pacific/Niue\n`Pacific/Norfolk` | Pacific/Norfolk\n`Pacific/Noumea` | Pacific/Noumea\n`Pacific/Pago_Pago` | Pacific/Pago_Pago\n`Pacific/Palau` | Pacific/Palau\n`Pacific/Pitcairn` | Pacific/Pitcairn\n`Pacific/Pohnpei` | Pacific/Pohnpei\n`Pacific/Port_Moresby` | Pacific/Port_Moresby\n`Pacific/Rarotonga` | Pacific/Rarotonga\n`Pacific/Saipan` | Pacific/Saipan\n`Pacific/Tahiti` | Pacific/Tahiti\n`Pacific/Tarawa` | Pacific/Tarawa\n`Pacific/Tongatapu` | Pacific/Tongatapu\n`Pacific/Wake` | Pacific/Wake\n`Pacific/Wallis` | Pacific/Wallis\n`US/Alaska` | US/Alaska\n`US/Arizona` | US/Arizona\n`US/Central` | US/Central\n`US/Eastern` | US/Eastern\n`US/Hawaii` | US/Hawaii\n`US/Mountain` | US/Mountain\n`US/Pacific` | US/Pacific\n`UTC` | UTC\n</details>"}, "language": {"type": "string", "description": "Choose the language you want Elorus to speak. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n</details>"}, "email_notifications": {"type": "boolean", "description": "Send me an email whenever a new notification is created."}, "first_name_translations": {"type": "string", "description": ""}, "last_name_translations": {"type": "string", "description": ""}, "last_login": {"type": "string", "description": "\n\nTimezone information is included."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/native/user/organizations/": {"get": {"description": "Get the organizations of the user.\n---", "parameters": [{"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. To get all the results pass the value \"all\"."}], "tags": ["user"], "summary": "/native/user/organizations/", "operationId": "user_organizations_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"type": "object", "properties": {"id": {"type": "string", "description": ""}, "company": {"type": "string", "description": "The company name"}, "subdomain": {"type": "string", "description": "The unique URL of the organization"}, "currency_code": {"type": "string", "description": "You cannot change the currency once you have added financial transactions (e.g. issued invoices, cash payments etc) One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, "currency_before_value": {"type": "boolean", "description": "If checked, currency will be displayed before the amount (e.g. $30 instead of 30$)"}, "is_active": {"type": "boolean", "description": "Whether the organization is active or not"}, "demo": {"type": "boolean", "description": "Designates whether this is a demo organization. Demo organizations can be used by third party developers to test the API or by elorus users to have a trial on the application."}, "created": {"type": "string", "description": "ISO-formatted creation date & time\n\nTimezone information is included."}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time\n\nTimezone information is included."}, "tt_enabled": {"type": "string", "description": "Whether time tracking is enabled for this organization"}, "user_role": {"type": "object", "properties": {"core_role": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`manager` | Manager\n`staff` | Staff\n`partner` | Partner\n</details>"}, "custom_role": {"type": "string", "description": "The organizationrole id or blank(empty string)"}, "active": {"type": "boolean", "description": "Whether the role is active or not"}, "invitation_email": {"type": "string", "description": "The email address used to invite the user to join the organization"}, "invitation_status": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`ini` | Initialized\n`pen` | Pending\n`acc` | Accepted\n</details>"}, "contacts": {"items": {"type": "string", "description": ""}, "required": false, "type": "array", "name": "contacts", "description": "A list of the contact IDs that the user can access. The `restrict_contact_access` property must also be true for this list to be in effect."}, "restrict_contact_access": {"type": "boolean", "description": "Whether the role has access only to the contacts in the `contacts` field"}, "permissions": {"type": "object", "properties": {"invoicing_invoice": {"type": "object", "properties": {"add": {"type": "boolean", "description": ""}, "view": {"type": "boolean", "description": ""}, "change": {"type": "boolean", "description": ""}, "delete": {"type": "boolean", "description": ""}, "email": {"type": "boolean", "description": ""}}, "description": "Permissions of the user for invoicing_invoice"}, "contacts_contact": {"type": "object", "properties": {"add": {"type": "boolean", "description": ""}, "view": {"type": "boolean", "description": ""}, "change": {"type": "boolean", "description": ""}, "delete": {"type": "boolean", "description": ""}}, "description": "Permissions of the user for contacts_contact"}, "user_organization": {"type": "object", "properties": {"add": {"type": "boolean", "description": ""}, "view": {"type": "boolean", "description": ""}, "change": {"type": "boolean", "description": ""}}, "description": "Permissions of the user for user_organization"}, "tracking_project": {"type": "object", "properties": {"add": {"type": "boolean", "description": ""}, "view": {"type": "boolean", "description": ""}, "change": {"type": "boolean", "description": ""}, "delete": {"type": "boolean", "description": ""}}, "description": "Permissions of the user for tracking_project"}, "tracking_task": {"type": "object", "properties": {"add": {"type": "boolean", "description": ""}, "view": {"type": "boolean", "description": ""}, "change": {"type": "boolean", "description": ""}, "delete": {"type": "boolean", "description": ""}}, "description": "Permissions of the user for tracking_task"}, "tracking_timeentry": {"type": "object", "properties": {"add": {"type": "boolean", "description": ""}, "view": {"type": "boolean", "description": ""}, "change": {"type": "boolean", "description": ""}, "delete": {"type": "boolean", "description": ""}}, "description": "Permissions of the user for tracking_timeentry"}, "tracking_time": {"type": "object", "properties": {"manage": {"type": "boolean", "description": ""}}, "description": "Permissions of the user for tracking_time"}}, "description": "The permissions the user has based on his/her role"}}, "description": "The role of the user in the organization"}}, "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any."}, "previous": {"type": "string", "description": "URL to the previous page, if any."}, "count": {"type": "integer", "description": "Number of total results."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}}, "securityDefinitions": {"OAuth2": {"scopes": {"user": "Perform any action a specific user can perform"}, "tokenUrl": "https://api.elorus.com/oauth2/token/", "name": "Authorization", "flow": "password", "in": "header", "type": "oauth2", "description": "\nElorus supports OAuth2 for third-party applications that want to securely\naccess user data. To begin, you should contact us to \nregister your application and obtain a `client_id` and a `client_secret`. \n\nElorus currently only supports the Oauth2 *password* flow. To actually \nget a user *access token* you must send a `POST` request to the \n`https://api.elorus.com/oauth2/token/` endpoint. \nYour `client_id` and `client_secret` must be sent using the standard \nBasic Authentication scheme. In the request body, you must include the \n`grant_type`, `username` and `password` parameters:\n\n* `grant_type`: Must always be set to `password`\n* `username`: The email address or username of the user that your application \nwants to access.\n* `password`: The password of the user that your application \nwants to access.\n\nExample using `curl`:\n \n    curl https://api.elorus.com/oauth/token/  \\\n    -X POST \\\n    -H 'Accept:application/json' \\\n    -u client_id:client_secret \\\n    -d '{ \\\n    \"grant_type\": \"password\", \\\n    \"username\": \"user@example.com\", \\\n    \"password\": \"the_password\" \\\n    }'\n    \nOn success, you will get a response that looks like this:\n\n    {\n        \"access_token\": \"the_access_token\", \n        \"token_type\": \"Bearer\", \n        \"expires_in\": 86400, \n        \"refresh_token\": \"the_refresh_token\", \n        \"scope\": \"\"\n    }\n    \nYou may now go ahead and use the API, sending your `access_token` in the \n`Authorization` HTTP header as follows:\n\n    Authorization: Bearer <the_access_token>\n\n\nOnce the `access_token` expires, you may use the `refresh_token` to\nrequest a new one:\n \n    curl https://api.elorus.com/oauth/token/  \\\n    -X POST \\\n    -H 'Accept:application/json' \\\n    -u client_id:client_secret \\\n    -d '{ \\\n    \"grant_type\": \"refresh_token\", \\\n    \"refresh_token\": \"the_refresh_token\" \\\n    }'\n            "}}, "tags": [{"x-traitTag": true, "name": "Websockets", "description": "\nElorus supports interacting with the [notifications](#tag/notifications) and \n[time entries](#tag/timeentries) resources through websockets. \nA subset of those resources' actions is supported.\nOnly `wss` (secure websockets) scheme is supported. \nTo open a websocket connection you have to own a valid Oauth2 token.\nPlease refer to the [Authentication](#section/Authentication) section to \nfind out how to obtain one. \nIn order to open a websocket connection you must include the `Authorization` \nand `X-Elorus-Organization` headers on the connect request.\n\nExample using `wsta`:\n\n    wsta --header Authorization:\"Bearer <the_access_token>\" \\\n         --header X-Elorus-Organization:<organization_id> \\\n         wss://api.elorus.com/ws/native/ \n\nElorus uses multiplexing, so you must use one websocket per client.\nThat means that, you shouldn't open a new websocket for each request or \nresource you want to interact with.\nThe `stream` key must be included on each request.\nThe supported streams are: `notifications` and `timeentries`.\nThe request data must be JSON encoded. The responses are also JSON encoded.\nElorus recognizes the following request format:\n\n    {\n        \"stream\": <stream_name>,\n        \"payload\": {\n            \"action\": <action_name>,\n            \"resource_id\": <resource_id_if_applicable>\n        }\n    }\n    \nThe responses have the following format:\n\n    {\n        \"stream\": <stream_name>,\n        \"payload\": {\n            \"action\": <action_name>,\n            \"data\": <response_data>,\n            \"resource_id\": <resource_id_or_null>,\n            \"status\": <http_status_code>\n        }\n    }\n    \nIn case of erroneous responses the `data` and `status` entries will contain \ninfo about the error.\nIf the data sent do not follow the request format described above, a response\nwill be sent informing the user about what went wrong.\nThat response will have the following format:\n\n    {\n        \"error\": <error_message>\n    }\n\nFinally, please note that responses might be received at any time without a \nclient's request, due to another client's action.\n\n\n# notifications\n\nAll the responses will include a list of all the notifications. The format is \nthe same as [here](#operation/notifications_list).\n\n## Available actions are:\n\n### list\nRequest:\n\n    {\n        \"stream\": \"notifications\",\n        \"payload\": {\n            \"action\": \"list\"\n        }\n    }\n    \nResponse:\n\n    {\n        \"stream\": \"notifications\",\n        \"payload\": {\n            \"action\": \"list\",\n            \"data\": <paginated_list_of_results>,\n            \"status\": <http_status_code>,\n            \"resource_id\": null\n        }\n    }\n    \n### destroy\nRequest:\n\n    {\n        \"stream\": \"notifications\",\n        \"payload\": {\n            \"action\": \"destroy\",\n            \"resource_id\": <notification_id>\n        }\n    }\n    \nResponse:\n\n    {\n        \"stream\": \"notifications\",\n        \"payload\": {\n            \"action\": \"destroy\",\n            \"resource_id\": <notification_id>,\n            \"data\": <paginated_list_of_results>,\n            \"status\": <http_status_code>\n        }\n    }\n    \n### mark_read\nRequest:\n\n    {\n        \"stream\": \"notifications\",\n        \"payload\": {\n            \"action\": \"mark_read\",\n            \"resource_id\": <notification_id>\n        }\n    }\n    \nResponse:\n\n    {\n        \"stream\": \"notifications\",\n        \"payload\": {\n            \"action\": \"mark_read\",\n            \"resource_id\": <notification_id>,\n            \"data\": <paginated_list_of_results>,\n            \"status\": <http_status_code>\n        }\n    }\n    \n### bulk_mark_read\nRequest:\n\n    {\n        \"stream\": \"notifications\",\n        \"payload\": {\n            \"action\": \"bulk_mark_read\"\n        }\n    }\n    \nResponse:\n\n    {\n        \"stream\": \"notifications\",\n        \"payload\": {\n            \"action\": \"bulk_mark_read\",\n            \"data\": <paginated_list_of_results>,\n            \"status\": <http_status_code>,\n            \"resource_id\": null\n        }\n    }\n    \n\n## Push events:\n\nThe server may push the following events:\n\n### new\nA new notification has been created. \nInfo about the new notification is not included in the response data. \nIt's up to the application to refresh its notifications' list.\n\nResponse:\n\n    {\n        \"stream\": \"notifications\",\n        \"payload\": {\n            \"action\": \"new\",\n        }\n    }\n\n### destroy\n\nSent data match the `destroy` action response above. \n\n### mark_read\n\nSent data match the `mark_read` action response above.\n\n### bulk_mark_read\n\nSent data match the `bulk_mark_read` action response above.\n\n\n# timeentries\n\n## Available actions are:\n\n### start\nStart a time entry.\n\nRequest:\n\n    {\n        \"stream\": \"timeentries\",\n        \"payload\": {\n            \"action\": \"start\"\n        }\n    }\n    \nResponse:\n\n    {\n        \"stream\": \"timeentries\",\n        \"payload\": {\n            \"action\": \"start\",\n            \"data\": <response_data>,\n            \"status\": <http_status_code>,\n            \"resource_id\": null\n        }\n    }\n    \nThe response_data format is the same as [here](#operation/timeentries_start)\n    \n### ongoing\nGet the ongoing time entry.\n\nRequest:\n\n    {\n        \"stream\": \"timeentries\",\n        \"payload\": {\n            \"action\": \"ongoing\"\n        }\n    }\n    \nResponse:\n\n    {\n        \"stream\": \"timeentries\",\n        \"payload\": {\n            \"action\": \"ongoing\",\n            \"data\": <response_data>,\n            \"status\": <http_status_code>,\n            \"resource_id\": null\n        }\n    }\n    \nThe response_data format is the same as [here](#operation/timeentries_ongoing)\n    \n### stop\nStop the currently running time entry.\n\nRequest:\n\n    {\n        \"stream\": \"timeentries\",\n        \"payload\": {\n            \"action\": \"stop\"\n        }\n    }\n    \nResponse:\n\n    {\n        \"stream\": \"timeentries\",\n        \"payload\": {\n            \"action\": \"stop\",\n            \"data\": <response_data>,\n            \"status\": <http_status_code>,\n            \"resource_id\": null\n        }\n    }\n    \nThe response_data format is the same as [here](#operation/timeentries_stop)\n    \n### update\nUpdate a time entry.\n\nRequest:\n\n    {\n        \"stream\": \"timeentries\",\n        \"payload\": {\n            \"action\": \"update\",\n            \"resource_id\": <timeentry_id>,\n            \"data\": <request_data>\n        }\n    }\n    \nThe request_data format is the same as [here](#operation/timeentries_update)\n    \nResponse:\n\n    {\n        \"stream\": \"timeentries\",\n        \"payload\": {\n            \"action\": \"update\",\n            \"data\": <response_data>,\n            \"status\": <http_status_code>,\n            \"resource_id\": <timeentry_id>\n        }\n    }\n    \nThe response_data format is the same as [here](#operation/timeentries_update)\n\n\n## Push events:\n\nThe server may push the start, stop and update events. Sent data match\nthe corresponding action responses above.\n\n                "}]}
