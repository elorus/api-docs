{"swagger": "2.0", "info": {"title": "API Documentation", "description": "\nThe Elorus developer API enables external applications access the [Elorus \nplatform](https://www.elorus.com) and update organization data \nprogrammatically. For example, you may use the API to:\n\n- Update your data without interacting with the Elorus user interface\n- Connect your e-shop / website, automate the invoicing process and \nsynchronize data\n- Use Elorus as your billing system\n\nThis portal provides documentation for developers to access and \nuse the Elorus API. \n", "version": "v1.0", "x-logo": {"url": "../img/elorus-logo-api.svg", "backgroundColor": "#FFFFFF"}}, "host": "api.elorus.com", "schemes": ["https"], "paths": {"/v1.0/cashpayments/": {"get": {"description": "Get the list of payments sent.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `title`, `contact__display_name`, `date`."}, {"required": false, "type": "string", "name": "contact", "in": "query", "description": "Optionally filter by contact ID."}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "transaction_type", "in": "query", "description": "Optionally filter by transaction type. Either `dp`, `ip` or `cnp`"}, {"required": false, "type": "string", "name": "purchase", "in": "query", "description": "Optionally filter by bill ID."}, {"required": false, "type": "string", "name": "creditnote", "in": "query", "description": "Optionally filter by credit note ID."}, {"required": false, "type": "string", "name": "cheque", "in": "query", "description": "Optionally filter by cheque ID."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `date`, `amount`, `contact__display_name`. Prepend a `-` to denote reverse ordering (e.g `-date`)."}, {"required": false, "type": "string", "name": "period_from", "in": "query", "description": "Optionally filter results from a date onwards.Must be used with the `period_to` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}, {"required": false, "type": "string", "name": "period_to", "in": "query", "description": "Optionally filter results from a date backwards.Must be used with the `period_from` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}], "tags": ["cashpayments"], "summary": "/v1.0/cashpayments/", "operationId": "cashpayments_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other payment\n`ip` | Supplier payment\n`cnp` | Client refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "A supplier invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "purchase": {"type": "string", "description": "A comma-separated list with the IDs of the associated purchases.", "example": "8800000040088865"}, "creditnote": {"type": "string", "description": "A comma-separated list with the IDs of the associated credit notes.", "example": "null"}, "cheque": {"type": "string", "description": "ID of the associated outgoing cheque (if any) or `null`.", "example": "null"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new payment sent.\n---\nWhen adding a new bill or credit note payment that\nexceeds the bill due amount, the remaining amount is stored\nas \"amount in excess\" and can be used in future transactions.\n\n**IMPORTANT NOTE:**\nYou cannot associate a single transaction with multiple\nbills or credit notes using this version of the API.\nFor more information, see the\n[payments sent](#tag/cashpayments) section.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["amount", "contact"], "type": "object", "properties": {"transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other payment\n`ip` | Supplier payment\n`cnp` | Client refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "A supplier invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "purchase": {"type": "string", "description": "ID of the associated bill", "example": "8800000040088865"}, "creditnote": {"type": "string", "description": "ID of the associated credit note", "example": "null"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["cashpayments"], "summary": "/v1.0/cashpayments/", "operationId": "cashpayments_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other payment\n`ip` | Supplier payment\n`cnp` | Client refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "A supplier invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "purchase": {"type": "string", "description": "ID of the associated bill", "example": "8800000040088865"}, "creditnote": {"type": "string", "description": "ID of the associated credit note", "example": "null"}, "cheque": {"type": "string", "description": "ID of the associated outgoing cheque (if any) or `null`.", "example": "null"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/cashpayments/{id}/": {"get": {"description": "Get a single payment sent.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["cashpayments"], "summary": "/v1.0/cashpayments/{id}/", "operationId": "cashpayments_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other payment\n`ip` | Supplier payment\n`cnp` | Client refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "A supplier invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "purchase": {"type": "string", "description": "A comma-separated list with the IDs of the associated purchases.", "example": "8800000040088865"}, "creditnote": {"type": "string", "description": "A comma-separated list with the IDs of the associated credit notes.", "example": "null"}, "cheque": {"type": "string", "description": "ID of the associated outgoing cheque (if any) or `null`.", "example": "null"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a payment sent.\n---\nNote that you cannot update the bill, credit note or\ncheque of the payment. For example, you cannot assign\na bill to a payment after it was created.\n\nWhen updating bill, credit note or cheque payments,\nyou will not be able to change the amount, nor the contact.\nIn addition, the transaction type cannot be modified.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["amount", "contact"], "type": "object", "properties": {"transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other payment\n`ip` | Supplier payment\n`cnp` | Client refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "A supplier invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["cashpayments"], "summary": "/v1.0/cashpayments/{id}/", "operationId": "cashpayments_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other payment\n`ip` | Supplier payment\n`cnp` | Client refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "A supplier invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "purchase": {"type": "string", "description": "A comma-separated list with the IDs of the associated purchases.", "example": "8800000040088865"}, "creditnote": {"type": "string", "description": "A comma-separated list with the IDs of the associated credit notes.", "example": "null"}, "cheque": {"type": "string", "description": "ID of the associated outgoing cheque (if any) or `null`.", "example": "null"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a payment sent.\n---\nThe only difference between full & partial update is that the latter\nwill treat all parameters as optional. You may omit any parameter\nin order to keep the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other payment\n`ip` | Supplier payment\n`cnp` | Client refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "A supplier invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["cashpayments"], "summary": "/v1.0/cashpayments/{id}/", "operationId": "cashpayments_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other payment\n`ip` | Supplier payment\n`cnp` | Client refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "A supplier invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "purchase": {"type": "string", "description": "A comma-separated list with the IDs of the associated purchases.", "example": "8800000040088865"}, "creditnote": {"type": "string", "description": "A comma-separated list with the IDs of the associated credit notes.", "example": "null"}, "cheque": {"type": "string", "description": "ID of the associated outgoing cheque (if any) or `null`.", "example": "null"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a payment sent.\n---\nDeleting a bill or credit note payment may result\nin changing the corresponding document's status. For example, if the\nbill was marked as 'paid' it will now revert to 'issued' or\n'partially paid' (depending on whether other payments exist as well).", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["cashpayments"], "summary": "/v1.0/cashpayments/{id}/", "operationId": "cashpayments_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/cashpayments/{parent_pk}/attachments/": {"get": {"description": "Get the list of attachments.\n---\nThe list of attachments for the specified record.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}], "tags": ["cashpayments"], "summary": "/v1.0/cashpayments/{parent_pk}/attachments/", "operationId": "cashpayments_attachments_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new attachment.\n---\nAdds a new attachment to the specified record.\nThe actual attachment file must be sent within the request body.\n**Incoming data must be encoded as `multipart/form-data`**.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}, {"required": true, "type": "string", "name": "file", "in": "formData", "description": "The actual file data"}], "tags": ["cashpayments"], "summary": "/v1.0/cashpayments/{parent_pk}/attachments/", "operationId": "cashpayments_attachments_create", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/cashpayments/{parent_pk}/attachments/{id}/": {"get": {"description": "Get a single attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["cashpayments"], "summary": "/v1.0/cashpayments/{parent_pk}/attachments/{id}/", "operationId": "cashpayments_attachments_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "patch": {"description": "Partially update an attachment.\n---\nYou may change the attachment title but you cannot\nreplace the actual file. **Incoming data\nmust be encoded as `multipart/form-data`.**", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}], "tags": ["cashpayments"], "summary": "/v1.0/cashpayments/{parent_pk}/attachments/{id}/", "operationId": "cashpayments_attachments_partial_update", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete an attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["cashpayments"], "summary": "/v1.0/cashpayments/{parent_pk}/attachments/{id}/", "operationId": "cashpayments_attachments_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/cashpayments/{parent_pk}/attachments/{id}/file/": {"get": {"description": "Get the actual attachment file.\n---\nThis endpoint may return a `307` redirect response.\nTo retrieve the file you should follow the redirection.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["cashpayments"], "summary": "/v1.0/cashpayments/{parent_pk}/attachments/{id}/file/", "operationId": "cashpayments_attachments_file", "responses": {"200": {"description": "Success"}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/cashreceipts/": {"get": {"description": "Get the list of payments received.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `title`, `contact__display_name`, `date`."}, {"required": false, "type": "string", "name": "contact", "in": "query", "description": "Optionally filter by contact ID."}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "transaction_type", "in": "query", "description": "Optionally filter by transaction type. Either `dp`, `ip` or `cnp`"}, {"required": false, "type": "string", "name": "invoice", "in": "query", "description": "Optionally filter by invoice ID."}, {"required": false, "type": "string", "name": "purchasecreditnote", "in": "query", "description": "Optionally filter by supplier credit ID."}, {"required": false, "type": "string", "name": "cheque", "in": "query", "description": "Optionally filter by cheque ID."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `date`, `amount`, `contact__display_name`. Prepend a `-` to denote reverse ordering (e.g `-date`)."}, {"required": false, "type": "string", "name": "period_from", "in": "query", "description": "Optionally filter results from a date onwards.Must be used with the `period_to` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}, {"required": false, "type": "string", "name": "period_to", "in": "query", "description": "Optionally filter results from a date backwards.Must be used with the `period_from` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}], "tags": ["cashreceipts"], "summary": "/v1.0/cashreceipts/", "operationId": "cashreceipts_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other income\n`ip` | Client payment\n`cnp` | Supplier refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "An invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "invoice": {"type": "string", "description": "A comma-separated list with the IDs of the associated invoices.", "example": "8800000040088865"}, "purchasecreditnote": {"type": "string", "description": "A comma-separated list with the IDs of the associated supplier credits.", "example": "null"}, "cheque": {"type": "string", "description": "ID of the associated incoming cheque (if any) or `null`.", "example": "null"}, "recurring": {"type": "string", "description": "ID of the recurring payment received that created this record (if any) or `null`.", "example": "9900000040000900"}, "payment_gateway": {"type": "string", "description": "ID of the payment gateway that was used to process the payment. Applies only to actual client payments made via Elorus.", "example": "null"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new payment received.\n---\nWhen adding a new invoice or supplier credit payment that\nexceeds the invoice due amount, the remaining amount is stored\nas \"amount in excess\" and can be used in future transactions.\n\n**IMPORTANT NOTE:**\nYou cannot associate a single transaction with multiple\ninvoices or supplier credits using this version of the API.\nFor more information, see the\n[payments received](#tag/cashreceipts) section.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["amount", "contact"], "type": "object", "properties": {"transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other income\n`ip` | Client payment\n`cnp` | Supplier refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "An invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "invoice": {"type": "string", "description": "ID of the associated invoice", "example": "8800000040088865"}, "purchasecreditnote": {"type": "string", "description": "ID of the associated supplier credit", "example": "null"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["cashreceipts"], "summary": "/v1.0/cashreceipts/", "operationId": "cashreceipts_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other income\n`ip` | Client payment\n`cnp` | Supplier refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "An invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "invoice": {"type": "string", "description": "ID of the associated invoice", "example": "8800000040088865"}, "purchasecreditnote": {"type": "string", "description": "ID of the associated supplier credit", "example": "null"}, "cheque": {"type": "string", "description": "ID of the associated incoming cheque (if any) or `null`.", "example": "null"}, "recurring": {"type": "string", "description": "ID of the recurring payment received that created this record (if any) or `null`.", "example": "9900000040000900"}, "payment_gateway": {"type": "string", "description": "ID of the payment gateway that was used to process the payment. Applies only to actual client payments made via Elorus.", "example": "null"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/cashreceipts/{id}/": {"get": {"description": "Get a single payment received.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["cashreceipts"], "summary": "/v1.0/cashreceipts/{id}/", "operationId": "cashreceipts_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other income\n`ip` | Client payment\n`cnp` | Supplier refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "An invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "invoice": {"type": "string", "description": "A comma-separated list with the IDs of the associated invoices.", "example": "8800000040088865"}, "purchasecreditnote": {"type": "string", "description": "A comma-separated list with the IDs of the associated supplier credits.", "example": "null"}, "cheque": {"type": "string", "description": "ID of the associated incoming cheque (if any) or `null`.", "example": "null"}, "recurring": {"type": "string", "description": "ID of the recurring payment received that created this record (if any) or `null`.", "example": "9900000040000900"}, "payment_gateway": {"type": "string", "description": "ID of the payment gateway that was used to process the payment. Applies only to actual client payments made via Elorus.", "example": "null"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a payment received.\n---\nNote that you cannot update the invoice, supplier credit or\ncheque of the payment. For example, you cannot assign\nan invoice to a payment after it was created.\n\nWhen updating invoice, supplier credit or cheque payments,\nyou will not be able to change the amount, nor the contact.\nIn addition, the transaction type cannot be modified.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["amount", "contact"], "type": "object", "properties": {"transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other income\n`ip` | Client payment\n`cnp` | Supplier refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "An invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["cashreceipts"], "summary": "/v1.0/cashreceipts/{id}/", "operationId": "cashreceipts_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other income\n`ip` | Client payment\n`cnp` | Supplier refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "An invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "invoice": {"type": "string", "description": "A comma-separated list with the IDs of the associated invoices.", "example": "8800000040088865"}, "purchasecreditnote": {"type": "string", "description": "A comma-separated list with the IDs of the associated supplier credits.", "example": "null"}, "cheque": {"type": "string", "description": "ID of the associated incoming cheque (if any) or `null`.", "example": "null"}, "recurring": {"type": "string", "description": "ID of the recurring payment received that created this record (if any) or `null`.", "example": "9900000040000900"}, "payment_gateway": {"type": "string", "description": "ID of the payment gateway that was used to process the payment. Applies only to actual client payments made via Elorus.", "example": "null"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a payment received.\n---\nThe only difference between full & partial update is that the latter\nwill treat all parameters as optional. You may omit any parameter\nin order to keep the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other income\n`ip` | Client payment\n`cnp` | Supplier refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "An invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["cashreceipts"], "summary": "/v1.0/cashreceipts/{id}/", "operationId": "cashreceipts_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "transaction_type": {"type": "string", "description": "The transaction type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`dp` | Other income\n`ip` | Client payment\n`cnp` | Supplier refund\n</details>", "example": "ip"}, "title": {"type": "string", "description": "Short description / reason.", "example": "An invoice payment"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "invoice": {"type": "string", "description": "A comma-separated list with the IDs of the associated invoices.", "example": "8800000040088865"}, "purchasecreditnote": {"type": "string", "description": "A comma-separated list with the IDs of the associated supplier credits.", "example": "null"}, "cheque": {"type": "string", "description": "ID of the associated incoming cheque (if any) or `null`.", "example": "null"}, "recurring": {"type": "string", "description": "ID of the recurring payment received that created this record (if any) or `null`.", "example": "9900000040000900"}, "payment_gateway": {"type": "string", "description": "ID of the payment gateway that was used to process the payment. Applies only to actual client payments made via Elorus.", "example": "null"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a payment received.\n---\nDeleting an invoice or supplier credit payment may result\nin changing the corresponding document's status. For example, if the\ninvoice was marked as 'paid' it will now revert to 'issued' or\n'partially paid' (depending on whether other payments exist as well).", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["cashreceipts"], "summary": "/v1.0/cashreceipts/{id}/", "operationId": "cashreceipts_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/cashreceipts/{id}/pdf/": {"get": {"description": "Get a payment received as PDF.\n---\nOnly client payments can be rendered to PDF.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["cashreceipts"], "summary": "/v1.0/cashreceipts/{id}/pdf/", "operationId": "cashreceipts_pdf", "responses": {"200": {"description": "Success"}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/cashreceipts/{parent_pk}/attachments/": {"get": {"description": "Get the list of attachments.\n---\nThe list of attachments for the specified record.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}], "tags": ["cashreceipts"], "summary": "/v1.0/cashreceipts/{parent_pk}/attachments/", "operationId": "cashreceipts_attachments_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new attachment.\n---\nAdds a new attachment to the specified record.\nThe actual attachment file must be sent within the request body.\n**Incoming data must be encoded as `multipart/form-data`**.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}, {"required": true, "type": "string", "name": "file", "in": "formData", "description": "The actual file data"}], "tags": ["cashreceipts"], "summary": "/v1.0/cashreceipts/{parent_pk}/attachments/", "operationId": "cashreceipts_attachments_create", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/cashreceipts/{parent_pk}/attachments/{id}/": {"get": {"description": "Get a single attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["cashreceipts"], "summary": "/v1.0/cashreceipts/{parent_pk}/attachments/{id}/", "operationId": "cashreceipts_attachments_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "patch": {"description": "Partially update an attachment.\n---\nYou may change the attachment title but you cannot\nreplace the actual file. **Incoming data\nmust be encoded as `multipart/form-data`.**", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}], "tags": ["cashreceipts"], "summary": "/v1.0/cashreceipts/{parent_pk}/attachments/{id}/", "operationId": "cashreceipts_attachments_partial_update", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete an attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["cashreceipts"], "summary": "/v1.0/cashreceipts/{parent_pk}/attachments/{id}/", "operationId": "cashreceipts_attachments_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/cashreceipts/{parent_pk}/attachments/{id}/file/": {"get": {"description": "Get the actual attachment file.\n---\nThis endpoint may return a `307` redirect response.\nTo retrieve the file you should follow the redirection.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["cashreceipts"], "summary": "/v1.0/cashreceipts/{parent_pk}/attachments/{id}/file/", "operationId": "cashreceipts_attachments_file", "responses": {"200": {"description": "Success"}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/contacts/": {"get": {"description": "Get the list of contacts\n---\nAll related addresses, phone numbers and email addresses are included\nin the response.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `first_name`, `last_name`, `company`, `profession`, `vat_number`, `email__email`, `phones__number`, `addresses__address`, `addresses__city`, `addresses__state`."}, {"required": false, "type": "string", "name": "letter", "in": "query", "description": "Optionally filter by starting letter. Refers to the contact's \"display_name.\""}, {"required": false, "type": "string", "name": "ctype", "in": "query", "description": "Optionally filter by contact type. Either `client` or `supplier`."}, {"required": false, "type": "string", "name": "profession", "in": "query", "description": "Optionally filter by profession."}, {"required": false, "type": "string", "name": "company", "in": "query", "description": "Optionally filter by company."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `display_name`, `profession`, `vat_number`. Prepend a `-` to denote reverse ordering (e.g `-display_name`)."}], "tags": ["contacts"], "summary": "/v1.0/contacts/", "operationId": "contacts_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "first_name": {"type": "string", "description": "First name of the contact", "example": "John"}, "last_name": {"type": "string", "description": "Last name of the contact", "example": "Doe"}, "company": {"type": "string", "description": "The company that the contact represents", "example": "Acme Inc."}, "display_name": {"type": "string", "description": "Automatically generated representation string.", "example": "Acme Inc. - Doe, John"}, "profession": {"type": "string", "description": "Profession of the contact", "example": "Consultant"}, "notes": {"type": "string", "description": "Private notes", "example": "Some notes"}, "vat_number": {"type": "string", "description": "The tax ID of the contact", "example": ""}, "tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "is_client": {"type": "boolean", "description": "Whether the contact is a client or not"}, "is_supplier": {"type": "boolean", "description": "Whether the contact is a supplier or not "}, "default_language": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact", "example": "2142000303010092"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "addresses": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "address": {"type": "string", "description": "", "example": "4 Catherine St."}, "city": {"type": "string", "description": "", "example": "Southaven"}, "state": {"type": "string", "description": "", "example": "MS"}, "zip": {"type": "string", "description": "", "example": "38671"}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MK` | North Macedonia\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>", "example": "US"}, "ad_type": {"type": "string", "description": "The address type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`bill` | Billing\n`ship` | Shipping\n`other` | Other\n</details>", "example": "bill"}}}, "type": "array", "description": "A list of postal addresses"}, "email": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "email": {"type": "string", "description": "", "example": "john@doe.com"}, "client_portal_access": {"type": "boolean", "description": "Whether the contact is allowed to access the client portal or not."}, "last_login": {"type": "string", "description": "When the contact logged in to the client for the last time. ISO-formatted date and time. Timezone information is included.", "example": "2018-09-28T13:48:56.504916Z"}}}, "type": "array", "description": "A list of emails"}, "phones": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "number": {"type": "string", "description": "", "example": "662-222-2222"}}}, "type": "array", "description": "A list of phone numbers"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new contact.\n---\nThis endpoint will add a new contact to the specified organization.\nAlthough `first_name`, `last_name` and `company` are not required\nfields, at least one of them must be specified for the record\nto be valid. The created contact's ID is included in\nthe response.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"first_name": {"type": "string", "description": "First name of the contact", "example": "John"}, "last_name": {"type": "string", "description": "Last name of the contact", "example": "Doe"}, "company": {"type": "string", "description": "The company that the contact represents", "example": "Acme Inc."}, "profession": {"type": "string", "description": "Profession of the contact", "example": "Consultant"}, "notes": {"type": "string", "description": "Private notes", "example": "Some notes"}, "vat_number": {"type": "string", "description": "The tax ID of the contact", "example": ""}, "tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "is_client": {"type": "boolean", "description": "Whether the contact is a client or not"}, "is_supplier": {"type": "boolean", "description": "Whether the contact is a supplier or not "}, "default_language": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact", "example": "2142000303010092"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "addresses": {"items": {"type": "object", "properties": {"address": {"type": "string", "description": "", "example": "4 Catherine St."}, "city": {"type": "string", "description": "", "example": "Southaven"}, "state": {"type": "string", "description": "", "example": "MS"}, "zip": {"type": "string", "description": "", "example": "38671"}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MK` | North Macedonia\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>", "example": "US"}, "ad_type": {"type": "string", "description": "The address type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`bill` | Billing\n`ship` | Shipping\n`other` | Other\n</details>", "example": "bill"}}}, "required": false, "type": "array", "name": "addresses", "description": "A list of postal addresses"}, "email": {"items": {"type": "object", "properties": {"email": {"type": "string", "description": "", "example": "john@doe.com"}}}, "required": false, "type": "array", "name": "email", "description": "A list of emails"}, "phones": {"items": {"type": "object", "properties": {"number": {"type": "string", "description": "", "example": "662-222-2222"}}}, "required": false, "type": "array", "name": "phones", "description": "A list of phone numbers"}}}, "name": "data", "in": "body"}], "tags": ["contacts"], "summary": "/v1.0/contacts/", "operationId": "contacts_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "first_name": {"type": "string", "description": "First name of the contact", "example": "John"}, "last_name": {"type": "string", "description": "Last name of the contact", "example": "Doe"}, "company": {"type": "string", "description": "The company that the contact represents", "example": "Acme Inc."}, "display_name": {"type": "string", "description": "Automatically generated representation string.", "example": "Acme Inc. - Doe, John"}, "profession": {"type": "string", "description": "Profession of the contact", "example": "Consultant"}, "notes": {"type": "string", "description": "Private notes", "example": "Some notes"}, "vat_number": {"type": "string", "description": "The tax ID of the contact", "example": ""}, "tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "is_client": {"type": "boolean", "description": "Whether the contact is a client or not"}, "is_supplier": {"type": "boolean", "description": "Whether the contact is a supplier or not "}, "default_language": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact", "example": "2142000303010092"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "addresses": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "address": {"type": "string", "description": "", "example": "4 Catherine St."}, "city": {"type": "string", "description": "", "example": "Southaven"}, "state": {"type": "string", "description": "", "example": "MS"}, "zip": {"type": "string", "description": "", "example": "38671"}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MK` | North Macedonia\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>", "example": "US"}, "ad_type": {"type": "string", "description": "The address type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`bill` | Billing\n`ship` | Shipping\n`other` | Other\n</details>", "example": "bill"}}}, "type": "array", "description": "A list of postal addresses"}, "email": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "email": {"type": "string", "description": "", "example": "john@doe.com"}, "client_portal_access": {"type": "boolean", "description": "Whether the contact is allowed to access the client portal or not."}, "last_login": {"type": "string", "description": "When the contact logged in to the client for the last time. ISO-formatted date and time. Timezone information is included.", "example": "2018-09-28T13:48:56.504916Z"}}}, "type": "array", "description": "A list of emails"}, "phones": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "number": {"type": "string", "description": "", "example": "662-222-2222"}}}, "type": "array", "description": "A list of phone numbers"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/contacts/{id}/": {"get": {"description": "Get the details of a single contact.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["contacts"], "summary": "/v1.0/contacts/{id}/", "operationId": "contacts_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "first_name": {"type": "string", "description": "First name of the contact", "example": "John"}, "last_name": {"type": "string", "description": "Last name of the contact", "example": "Doe"}, "company": {"type": "string", "description": "The company that the contact represents", "example": "Acme Inc."}, "display_name": {"type": "string", "description": "Automatically generated representation string.", "example": "Acme Inc. - Doe, John"}, "profession": {"type": "string", "description": "Profession of the contact", "example": "Consultant"}, "notes": {"type": "string", "description": "Private notes", "example": "Some notes"}, "vat_number": {"type": "string", "description": "The tax ID of the contact", "example": ""}, "tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "is_client": {"type": "boolean", "description": "Whether the contact is a client or not"}, "is_supplier": {"type": "boolean", "description": "Whether the contact is a supplier or not "}, "default_language": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact", "example": "2142000303010092"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "addresses": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "address": {"type": "string", "description": "", "example": "4 Catherine St."}, "city": {"type": "string", "description": "", "example": "Southaven"}, "state": {"type": "string", "description": "", "example": "MS"}, "zip": {"type": "string", "description": "", "example": "38671"}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MK` | North Macedonia\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>", "example": "US"}, "ad_type": {"type": "string", "description": "The address type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`bill` | Billing\n`ship` | Shipping\n`other` | Other\n</details>", "example": "bill"}}}, "type": "array", "description": "A list of postal addresses"}, "email": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "email": {"type": "string", "description": "", "example": "john@doe.com"}, "client_portal_access": {"type": "boolean", "description": "Whether the contact is allowed to access the client portal or not."}, "last_login": {"type": "string", "description": "When the contact logged in to the client for the last time. ISO-formatted date and time. Timezone information is included.", "example": "2018-09-28T13:48:56.504916Z"}}}, "type": "array", "description": "A list of emails"}, "phones": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "number": {"type": "string", "description": "", "example": "662-222-2222"}}}, "type": "array", "description": "A list of phone numbers"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a contact.\n---\nYou must provide at least the required fields for the record to be\nsuccessfully updated. Any missing parameter will result in\npreserving the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"first_name": {"type": "string", "description": "First name of the contact", "example": "John"}, "last_name": {"type": "string", "description": "Last name of the contact", "example": "Doe"}, "company": {"type": "string", "description": "The company that the contact represents", "example": "Acme Inc."}, "profession": {"type": "string", "description": "Profession of the contact", "example": "Consultant"}, "notes": {"type": "string", "description": "Private notes", "example": "Some notes"}, "vat_number": {"type": "string", "description": "The tax ID of the contact", "example": ""}, "tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "is_client": {"type": "boolean", "description": "Whether the contact is a client or not"}, "is_supplier": {"type": "boolean", "description": "Whether the contact is a supplier or not "}, "default_language": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact", "example": "2142000303010092"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "addresses": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "address": {"type": "string", "description": "", "example": "4 Catherine St."}, "city": {"type": "string", "description": "", "example": "Southaven"}, "state": {"type": "string", "description": "", "example": "MS"}, "zip": {"type": "string", "description": "", "example": "38671"}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MK` | North Macedonia\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>", "example": "US"}, "ad_type": {"type": "string", "description": "The address type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`bill` | Billing\n`ship` | Shipping\n`other` | Other\n</details>", "example": "bill"}}}, "required": false, "type": "array", "name": "addresses", "description": "A list of postal addresses"}, "email": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "email": {"type": "string", "description": "", "example": "john@doe.com"}}}, "required": false, "type": "array", "name": "email", "description": "A list of emails"}, "phones": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "number": {"type": "string", "description": "", "example": "662-222-2222"}}}, "required": false, "type": "array", "name": "phones", "description": "A list of phone numbers"}}}, "name": "data", "in": "body"}], "tags": ["contacts"], "summary": "/v1.0/contacts/{id}/", "operationId": "contacts_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "first_name": {"type": "string", "description": "First name of the contact", "example": "John"}, "last_name": {"type": "string", "description": "Last name of the contact", "example": "Doe"}, "company": {"type": "string", "description": "The company that the contact represents", "example": "Acme Inc."}, "display_name": {"type": "string", "description": "Automatically generated representation string.", "example": "Acme Inc. - Doe, John"}, "profession": {"type": "string", "description": "Profession of the contact", "example": "Consultant"}, "notes": {"type": "string", "description": "Private notes", "example": "Some notes"}, "vat_number": {"type": "string", "description": "The tax ID of the contact", "example": ""}, "tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "is_client": {"type": "boolean", "description": "Whether the contact is a client or not"}, "is_supplier": {"type": "boolean", "description": "Whether the contact is a supplier or not "}, "default_language": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact", "example": "2142000303010092"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "addresses": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "address": {"type": "string", "description": "", "example": "4 Catherine St."}, "city": {"type": "string", "description": "", "example": "Southaven"}, "state": {"type": "string", "description": "", "example": "MS"}, "zip": {"type": "string", "description": "", "example": "38671"}, "country": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MK` | North Macedonia\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>", "example": "US"}, "ad_type": {"type": "string", "description": "The address type. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`bill` | Billing\n`ship` | Shipping\n`other` | Other\n</details>", "example": "bill"}}}, "type": "array", "description": "A list of postal addresses"}, "email": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "email": {"type": "string", "description": "", "example": "john@doe.com"}, "client_portal_access": {"type": "boolean", "description": "Whether the contact is allowed to access the client portal or not."}, "last_login": {"type": "string", "description": "When the contact logged in to the client for the last time. ISO-formatted date and time. Timezone information is included.", "example": "2018-09-28T13:48:56.504916Z"}}}, "type": "array", "description": "A list of emails"}, "phones": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "To update an existing object, provide the corresponding ID as it was returned to you by the API. To create a new object, omit the ID entirely.", "example": "1050000300010040"}, "number": {"type": "string", "description": "", "example": "662-222-2222"}}}, "type": "array", "description": "A list of phone numbers"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a contact.\n---\nThe only difference between full & partial update is that the latter\nwill treat all parameters as optional. You may omit any parameter\nin order to keep the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"first_name": {"type": "string", "description": "First name of the contact", "example": "John"}, "last_name": {"type": "string", "description": "Last name of the contact", "example": "Doe"}, "company": {"type": "string", "description": "The company that the contact represents", "example": "Acme Inc."}, "profession": {"type": "string", "description": "Profession of the contact", "example": "Consultant"}, "notes": {"type": "string", "description": "Private notes", "example": "Some notes"}, "vat_number": {"type": "string", "description": "The tax ID of the contact", "example": ""}, "tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "is_client": {"type": "boolean", "description": "Whether the contact is a client or not"}, "is_supplier": {"type": "boolean", "description": "Whether the contact is a supplier or not "}, "default_language": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact", "example": "2142000303010092"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}}}, "name": "data", "in": "body"}], "tags": ["contacts"], "summary": "/v1.0/contacts/{id}/", "operationId": "contacts_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "first_name": {"type": "string", "description": "First name of the contact", "example": "John"}, "last_name": {"type": "string", "description": "Last name of the contact", "example": "Doe"}, "company": {"type": "string", "description": "The company that the contact represents", "example": "Acme Inc."}, "display_name": {"type": "string", "description": "Automatically generated representation string.", "example": "Acme Inc. - Doe, John"}, "profession": {"type": "string", "description": "Profession of the contact", "example": "Consultant"}, "notes": {"type": "string", "description": "Private notes", "example": "Some notes"}, "vat_number": {"type": "string", "description": "The tax ID of the contact", "example": ""}, "tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "is_client": {"type": "boolean", "description": "Whether the contact is a client or not"}, "is_supplier": {"type": "boolean", "description": "Whether the contact is a supplier or not "}, "default_language": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}, "default_theme": {"type": "string", "description": "ID of the theme that will be used by default when invoicing this contact", "example": "2142000303010092"}, "default_currency_code": {"type": "string", "description": "The currency used by default when invoicing this contact One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a contact.\n---\nNote that you cannot delete contacts having relations with other\nobjects (such as invoices, payments etc). Trying to delete such\nrecords will result in a 400 HTTP status -with appropriate error\nmessages-.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["contacts"], "summary": "/v1.0/contacts/{id}/", "operationId": "contacts_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/contacts/{id}/clientportal/": {"put": {"description": "Enable / disable client portal access\n---\nUse this method to allow or revoke access to the client portal\nfor a specific email address. The contact in question\nmust be a client (i.e. `is_client` attribute must be `true`).", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["access", "email", "language"], "type": "object", "properties": {"access": {"type": "boolean", "description": "Whether the client portal access should be enabled or disabled."}, "email": {"type": "string", "description": "The email for which the client portal should be enabled or disabled. This email address must already exist among the contact email addresses."}, "password": {"type": "string", "description": "If you enable the client portal access, you may also set a default password. This field is optional. If not specified, the client will be able to set up a password on his own.", "example": "xxxxxxxx"}, "language": {"type": "string", "description": "The default client portal language. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n</details>", "example": "en"}}}, "name": "data", "in": "body"}], "tags": ["contacts"], "summary": "/v1.0/contacts/{id}/clientportal/", "operationId": "contacts_clientportal", "consumes": ["application/json"], "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/contacts/{parent_pk}/attachments/": {"get": {"description": "Get the list of attachments.\n---\nThe list of attachments for the specified record.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}], "tags": ["contacts"], "summary": "/v1.0/contacts/{parent_pk}/attachments/", "operationId": "contacts_attachments_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new attachment.\n---\nAdds a new attachment to the specified record.\nThe actual attachment file must be sent within the request body.\n**Incoming data must be encoded as `multipart/form-data`**.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}, {"required": true, "type": "string", "name": "file", "in": "formData", "description": "The actual file data"}], "tags": ["contacts"], "summary": "/v1.0/contacts/{parent_pk}/attachments/", "operationId": "contacts_attachments_create", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/contacts/{parent_pk}/attachments/{id}/": {"get": {"description": "Get a single attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["contacts"], "summary": "/v1.0/contacts/{parent_pk}/attachments/{id}/", "operationId": "contacts_attachments_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "patch": {"description": "Partially update an attachment.\n---\nYou may change the attachment title but you cannot\nreplace the actual file. **Incoming data\nmust be encoded as `multipart/form-data`.**", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}], "tags": ["contacts"], "summary": "/v1.0/contacts/{parent_pk}/attachments/{id}/", "operationId": "contacts_attachments_partial_update", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete an attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["contacts"], "summary": "/v1.0/contacts/{parent_pk}/attachments/{id}/", "operationId": "contacts_attachments_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/contacts/{parent_pk}/attachments/{id}/file/": {"get": {"description": "Get the actual attachment file.\n---\nThis endpoint may return a `307` redirect response.\nTo retrieve the file you should follow the redirection.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["contacts"], "summary": "/v1.0/contacts/{parent_pk}/attachments/{id}/file/", "operationId": "contacts_attachments_file", "responses": {"200": {"description": "Success"}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/creditnotes/": {"get": {"description": "Get the list of credit notes.\n---\nThe response does not include all the credit note details.\nTo retrieve more information about a specific credit note, use\nthe [single credit note](#operation/creditnotes_read) endpoint.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `client__display_name`, `documenttype__title`, `series__name`, `number`, `notes`, `items__title`, `items__description`."}, {"required": false, "type": "string", "name": "documenttype", "in": "query", "description": "Optionally filter by document type ID."}, {"required": false, "type": "string", "name": "series", "in": "query", "description": "Optionally filter by the numbering sequence ID."}, {"required": false, "type": "string", "name": "draft", "in": "query", "description": "Optionally filter by draft status. Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "fpaid", "in": "query", "description": "Optionally filter on whether the invoice is paid or not. Can be either `yes` or `no`."}, {"required": false, "type": "string", "name": "is_void", "in": "query", "description": "Optionally filter by void status. Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "client", "in": "query", "description": "Optionally filter by client ID."}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `date`, `documenttype__title`, `client__display_name`, `total`, `initial`, `net`, `draft`, `paid`, `payable`, `number`, `series__name`. Prepend a `-` to denote reverse ordering (e.g `-date`)."}, {"required": false, "type": "string", "name": "period_from", "in": "query", "description": "Optionally filter results from a date onwards.Must be used with the `period_to` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}, {"required": false, "type": "string", "name": "period_to", "in": "query", "description": "Optionally filter results from a date backwards.Must be used with the `period_from` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/", "operationId": "creditnotes_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n</details>", "example": "paid"}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Credit note #A-1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "The client name as it will appear on the PDF.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the credit note"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "permalink": {"type": "string", "description": "Public URL for clients.", "example": "//url-for-the-client/"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new credit note.\n---\nTo create a new credit note, you must first specify the client.\nYou may choose to omit all client-related fields\nexcept from the client ID. In this case, the fields will be initialized\nwith values originating from the client's contact record.\nFor example, if you do not specify the `client_email` parameter\nit will be automatically copied from the specified contact record.\nIf you provide blank values (e.g. in case you *do send* the\n`client_email` parameter with an empty string value),\nthe corresponding fields will be left empty.\n\n#### PDF rendering\nAs far as the PDF rendering is concerned, you must first specify\nthe template to use\n(see the [credit notes description](#tag/creditnotes) above).\nYou may override most of the template settings through the\n`template_settings` group of fields. You may omit (do not sent at all)\nany template setting that you do not wish to override.\nThe same goes for the `terms` and `public_notes` fields as well.\n\n> **Tip:** In most cases you only need to specify the template ID and\n> let Elorus initialize the rest template settings.\n\n#### Credit note lines & amounts\nThe credit note's initial, net and total amount will be calculated\nautomatically and their values will depend on the calculator\nmode and the line items.\n\nWhen it comes to the credit note lines, you may associate each\nline with an [inventory product](#tag/products). In this case you can\nomit the `title`, `description`, `measurement unit` and `value` fields\nto have them copied over form product record.\nOnce again, if you choose to explicitly specify any of these fields,\nyou end up overriding the default values of the product record.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["documenttype", "date", "client", "calculator_mode", "items", "withholding_taxes", "related_documents", "template_settings"], "type": "object", "properties": {"draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If not provided, the client name will be retrieved from the specified client contact", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"items": {"type": "string", "description": ""}, "type": "array", "description": "A list of the applied tax IDs.", "example": ["6600230050000705"]}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "required": true, "type": "array", "name": "items", "description": "Line items of a creditnote."}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "related_documents": {"name": "related_documents", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["4400230020000542"], "description": "A list of invoice IDs linked to this credit note. This information is solely for display purposes, it will appear on the PDF"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the credit note"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "template_settings": {"type": "object", "description": "The set of appearance settings.", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/", "operationId": "creditnotes_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n</details>", "example": "paid"}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Credit note #A-1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If not provided, the client name will be retrieved from the specified client contact", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of a creditnote."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "related_documents": {"name": "related_documents", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["4400230020000542"], "description": "A list of invoice IDs linked to this credit note. This information is solely for display purposes, it will appear on the PDF"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the credit note"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "permalink": {"type": "string", "description": "Public URL for clients.", "example": "//url-for-the-client/"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "template_settings": {"type": "object", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}, "description": "The set of appearance settings."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/creditnotes/{id}/": {"get": {"description": "Get a single credit note.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/{id}/", "operationId": "creditnotes_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n</details>", "example": "paid"}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Credit note #A-1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If you change the client and do not specify the field, the client name will be retrieved from the specified client contact.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of a creditnote."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "related_documents": {"name": "related_documents", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["4400230020000542"], "description": "A list of invoice IDs linked to this credit note. This information is solely for display purposes, it will appear on the PDF"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the credit note"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "permalink": {"type": "string", "description": "Public URL for clients.", "example": "//url-for-the-client/"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "template_settings": {"type": "object", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}, "description": "The set of appearance settings."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a credit note.\n---\nYou must send all required fields for the record to be\nsuccessfully updated. You may only modify draft credit notes. To\nupdate issued invoices, you should first mark them as draft\nvia the [partial update endpoint](#operation/creditnotes_partial_update).\n\nWhen changing the credit note client, all client fields will be updated\nbased on the new contact record, unless you explicitly\nspecify their values.\n\nTo update the line items, the endpoint expects that you send\na complete list of the new items. For existing lines\nyou must send over their IDs (as returned by the\n[retrieve endpoint](#operation/creditnotes_read))\nalong with any possible changes. If there exist any lines whose\nIDs are not sent, they will be deleted. Accordingly, lines for which\nyou send no ID will result in creating new items.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["documenttype", "client", "calculator_mode", "items", "withholding_taxes", "related_documents", "template_settings"], "type": "object", "properties": {"draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If you change the client and do not specify the field, the client name will be retrieved from the specified client contact.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"items": {"type": "string", "description": ""}, "type": "array", "description": "A list of the applied tax IDs.", "example": ["6600230050000705"]}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "required": true, "type": "array", "name": "items", "description": "Line items of a creditnote."}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "related_documents": {"name": "related_documents", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["4400230020000542"], "description": "A list of invoice IDs linked to this credit note. This information is solely for display purposes, it will appear on the PDF"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the credit note"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "template_settings": {"type": "object", "description": "The set of appearance settings.", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/{id}/", "operationId": "creditnotes_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n</details>", "example": "paid"}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Credit note #A-1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If you change the client and do not specify the field, the client name will be retrieved from the specified client contact.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of a creditnote."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "related_documents": {"name": "related_documents", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["4400230020000542"], "description": "A list of invoice IDs linked to this credit note. This information is solely for display purposes, it will appear on the PDF"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the credit note"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "permalink": {"type": "string", "description": "Public URL for clients.", "example": "//url-for-the-client/"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "template_settings": {"type": "object", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}, "description": "The set of appearance settings."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a credit note.\n---\nUse this action to update the credit note appearance, notes\nor change it's draft status. Since this method does\nnot modify the credit note items and amounts you can always use it\nregardless the credit note status. On the other hand, the\n[full update action](#operation/creditnotes_update) is only applicable\nto draft credit notes.\n\nPlease not that you cannot mark void credit notes as draft, unless\nyou [un-void](#operation/creditnotes_mark_void) them first.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"draft": {"type": "boolean", "description": "<p>If enabled, the document will not be taken into consideration in your balance and statistics and you will not be able to add payments.</p><p>Once the document is issued (not draft) and as long as payments exist, the document status cannot be reverted.</p>", "example": false}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "template_settings": {"type": "object", "description": "The set of appearance settings.", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/{id}/", "operationId": "creditnotes_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "<p>If enabled, the document will not be taken into consideration in your balance and statistics and you will not be able to add payments.</p><p>Once the document is issued (not draft) and as long as payments exist, the document status cannot be reverted.</p>", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n</details>", "example": "paid"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Credit note #A-1"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "template_settings": {"type": "object", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}, "description": "The set of appearance settings."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a credit note.\n---\nNote that you cannot delete credit notes marked as issued\n(i.e. the `draft` field is set to `false`).", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/{id}/", "operationId": "creditnotes_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/creditnotes/{id}/email/": {"get": {"description": "Email the document to a client.\n---\nYou may retrieve the default email subject, message etc. with a `GET`\nrequest.\n\nUse the `POST` request to queue the email for sending.\nIn most cases you want to send the data exactly as returned by\nthe `GET` action.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/{id}/email/", "operationId": "creditnotes_email_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"to": {"type": "string", "description": "The default recipient email address.", "example": "someone@example.com"}, "cc": {"type": "string", "description": "The default CC email addresses; comma-separated values", "example": "accounting@doe.com"}, "bcc": {"type": "string", "description": "The default BCC email addresses; comma-separated values"}, "reply_to": {"type": "string", "description": "A possible response from the recipients will be sent to this email address.", "example": "john@doe.com"}, "subject": {"type": "string", "description": "The default email subject.", "example": "The email subject"}, "message": {"type": "string", "description": "The default email message.", "example": "Hello,<br/>please find the PDF attached."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Email the document to a client.\n---\nYou may retrieve the default email subject, message etc. with a `GET`\nrequest.\n\nUse the `POST` request to queue the email for sending.\nIn most cases you want to send the data exactly as returned by\nthe `GET` action.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["to", "cc", "bcc", "subject", "message", "attach_pdf", "attachments"], "type": "object", "properties": {"to": {"type": "string", "description": "The recipient email address.", "example": "someone@example.com"}, "store_to": {"type": "boolean", "description": "Store the recipient address on the client contact for future use."}, "cc": {"name": "cc", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["accounting@doe.com"], "description": "A list of email addresses to carbon-copy the email to."}, "bcc": {"name": "bcc", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": [], "description": "A list of email addresses to blind carbon-copy the email to."}, "subject": {"type": "string", "description": "The email subject.", "example": "The email subject"}, "message": {"type": "string", "description": "The email message. May contain html.", "example": "Hello,<br/>please find the PDF attached."}, "attach_pdf": {"type": "boolean", "description": "Whether to include the PDF version of the document as attachment or not."}, "attachments": {"name": "attachments", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["1050000300010040"], "description": "A list of credit note attachment IDs to attach in the email"}}}, "name": "data", "in": "body"}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/{id}/email/", "operationId": "creditnotes_email_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"to": {"type": "string", "description": "The recipient email address.", "example": "someone@example.com"}, "store_to": {"type": "boolean", "description": "Store the recipient address on the client contact for future use."}, "cc": {"name": "cc", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["accounting@doe.com"], "description": "A list of email addresses to carbon-copy the email to."}, "bcc": {"name": "bcc", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": [], "description": "A list of email addresses to blind carbon-copy the email to."}, "reply_to": {"type": "string", "description": "A possible response from the recipients will be sent to this email address.", "example": "john@doe.com"}, "subject": {"type": "string", "description": "The email subject.", "example": "The email subject"}, "message": {"type": "string", "description": "The email message. May contain html.", "example": "Hello,<br/>please find the PDF attached."}, "attach_pdf": {"type": "boolean", "description": "Whether to include the PDF version of the document as attachment or not."}, "attachments": {"name": "attachments", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["1050000300010040"], "description": "A list of credit note attachment IDs to attach in the email"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/creditnotes/{id}/pdf/": {"get": {"description": "Get the document as PDF.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/{id}/pdf/", "operationId": "creditnotes_pdf", "responses": {"200": {"description": "Success"}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/creditnotes/{id}/void/": {"put": {"description": "Mark as void / Un-Void\n---\nMark the document as void or convert it from void back to issued.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"void": {"type": "boolean", "description": "Whether to void or un-void the document.If not sent, `true` will be assumed."}}}, "name": "data", "in": "body"}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/{id}/void/", "operationId": "creditnotes_mark_void", "consumes": ["application/json"], "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/creditnotes/{parent_pk}/attachments/": {"get": {"description": "Get the list of attachments.\n---\nThe list of attachments for the specified record.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/{parent_pk}/attachments/", "operationId": "creditnotes_attachments_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new attachment.\n---\nAdds a new attachment to the specified record.\nThe actual attachment file must be sent within the request body.\n**Incoming data must be encoded as `multipart/form-data`**.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}, {"required": true, "type": "string", "name": "file", "in": "formData", "description": "The actual file data"}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/{parent_pk}/attachments/", "operationId": "creditnotes_attachments_create", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/creditnotes/{parent_pk}/attachments/{id}/": {"get": {"description": "Get a single attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/{parent_pk}/attachments/{id}/", "operationId": "creditnotes_attachments_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "patch": {"description": "Partially update an attachment.\n---\nYou may change the attachment title but you cannot\nreplace the actual file. **Incoming data\nmust be encoded as `multipart/form-data`.**", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/{parent_pk}/attachments/{id}/", "operationId": "creditnotes_attachments_partial_update", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete an attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/{parent_pk}/attachments/{id}/", "operationId": "creditnotes_attachments_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/creditnotes/{parent_pk}/attachments/{id}/file/": {"get": {"description": "Get the actual attachment file.\n---\nThis endpoint may return a `307` redirect response.\nTo retrieve the file you should follow the redirection.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["creditnotes"], "summary": "/v1.0/creditnotes/{parent_pk}/attachments/{id}/file/", "operationId": "creditnotes_attachments_file", "responses": {"200": {"description": "Success"}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/documenttypes/": {"get": {"description": "Get the list of document types.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `title`."}, {"required": false, "type": "string", "name": "application", "in": "query", "description": "Optional filter."}, {"required": false, "type": "string", "name": "active", "in": "query", "description": "Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `title`, `active`, `application`, `mcsr_role`. Prepend a `-` to denote reverse ordering (e.g `-title`)."}], "tags": ["documenttypes"], "summary": "/v1.0/documenttypes/", "operationId": "documenttypes_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The title, as it will appear on the rendered document (e.g. \"Tax invoice\").", "example": "Invoice"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "application": {"type": "integer", "description": "The kind of documents this type applies to. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1` | Invoices\n`2` | Credit notes\n`3` | Estimates\n</details>", "example": 1}, "default": {"type": "boolean", "description": "Only one default record per application is allowed"}, "mcsr_role": {"type": "integer", "description": "Only applicable to organizations based in Greece. See the <a href=\"#mcsr-role\">MCSR role</a> data type One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1` | Invoice\n`2` | Receipt\n</details>"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new document type.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["title"], "type": "object", "properties": {"title": {"type": "string", "description": "The title, as it will appear on the rendered document (e.g. \"Tax invoice\").", "example": "Invoice"}, "title_translations": {"type": "object", "description": "The translations to use when invoicing in multiple languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "\u0424\u0430\u043a\u0442\u0443\u0440\u0430"}, "de": {"type": "string", "description": "The german translation.", "example": "Rechnung"}, "el": {"type": "string", "description": "The greek translation.", "example": "\u03a4\u03b9\u03bc\u03bf\u03bb\u03cc\u03b3\u03b9\u03bf"}, "en": {"type": "string", "description": "The english translation.", "example": "Invoice"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "Invoice"}, "es": {"type": "string", "description": "The spanish translation.", "example": "Factura"}, "fr": {"type": "string", "description": "The french translation.", "example": "Facture"}, "it": {"type": "string", "description": "The italian translation.", "example": "Fattura"}}}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "application": {"type": "integer", "description": "The kind of documents this type applies to. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1` | Invoices\n`2` | Credit notes\n`3` | Estimates\n</details>", "example": 1}, "default": {"type": "boolean", "description": "Only one default record per application is allowed"}, "mcsr_role": {"type": "integer", "description": "Only applicable to organizations based in Greece. See the <a href=\"#mcsr-role\">MCSR role</a> data type One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1` | Invoice\n`2` | Receipt\n</details>"}}}, "name": "data", "in": "body"}], "tags": ["documenttypes"], "summary": "/v1.0/documenttypes/", "operationId": "documenttypes_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The title, as it will appear on the rendered document (e.g. \"Tax invoice\").", "example": "Invoice"}, "title_translations": {"type": "object", "description": "The translations to use when invoicing in multiple languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "\u0424\u0430\u043a\u0442\u0443\u0440\u0430"}, "de": {"type": "string", "description": "The german translation.", "example": "Rechnung"}, "el": {"type": "string", "description": "The greek translation.", "example": "\u03a4\u03b9\u03bc\u03bf\u03bb\u03cc\u03b3\u03b9\u03bf"}, "en": {"type": "string", "description": "The english translation.", "example": "Invoice"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "Invoice"}, "es": {"type": "string", "description": "The spanish translation.", "example": "Factura"}, "fr": {"type": "string", "description": "The french translation.", "example": "Facture"}, "it": {"type": "string", "description": "The italian translation.", "example": "Fattura"}}}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "application": {"type": "integer", "description": "The kind of documents this type applies to. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1` | Invoices\n`2` | Credit notes\n`3` | Estimates\n</details>", "example": 1}, "default": {"type": "boolean", "description": "Only one default record per application is allowed"}, "mcsr_role": {"type": "integer", "description": "Only applicable to organizations based in Greece. See the <a href=\"#mcsr-role\">MCSR role</a> data type One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1` | Invoice\n`2` | Receipt\n</details>"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/documenttypes/{id}/": {"get": {"description": "Get a single document type.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["documenttypes"], "summary": "/v1.0/documenttypes/{id}/", "operationId": "documenttypes_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The title, as it will appear on the rendered document (e.g. \"Tax invoice\").", "example": "Invoice"}, "title_translations": {"type": "object", "description": "The translations to use when invoicing in multiple languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "\u0424\u0430\u043a\u0442\u0443\u0440\u0430"}, "de": {"type": "string", "description": "The german translation.", "example": "Rechnung"}, "el": {"type": "string", "description": "The greek translation.", "example": "\u03a4\u03b9\u03bc\u03bf\u03bb\u03cc\u03b3\u03b9\u03bf"}, "en": {"type": "string", "description": "The english translation.", "example": "Invoice"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "Invoice"}, "es": {"type": "string", "description": "The spanish translation.", "example": "Factura"}, "fr": {"type": "string", "description": "The french translation.", "example": "Facture"}, "it": {"type": "string", "description": "The italian translation.", "example": "Fattura"}}}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "application": {"type": "integer", "description": "The kind of documents this type applies to. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1` | Invoices\n`2` | Credit notes\n`3` | Estimates\n</details>", "example": 1}, "default": {"type": "boolean", "description": "Only one default record per application is allowed"}, "mcsr_role": {"type": "integer", "description": "Only applicable to organizations based in Greece. See the <a href=\"#mcsr-role\">MCSR role</a> data type One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1` | Invoice\n`2` | Receipt\n</details>"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a document type.\n---\nPlease note you are not allowed to change the document types's\napplication.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["title"], "type": "object", "properties": {"title": {"type": "string", "description": "The title, as it will appear on the rendered document (e.g. \"Tax invoice\").", "example": "Invoice"}, "title_translations": {"type": "object", "description": "The translations to use when invoicing in multiple languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "\u0424\u0430\u043a\u0442\u0443\u0440\u0430"}, "de": {"type": "string", "description": "The german translation.", "example": "Rechnung"}, "el": {"type": "string", "description": "The greek translation.", "example": "\u03a4\u03b9\u03bc\u03bf\u03bb\u03cc\u03b3\u03b9\u03bf"}, "en": {"type": "string", "description": "The english translation.", "example": "Invoice"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "Invoice"}, "es": {"type": "string", "description": "The spanish translation.", "example": "Factura"}, "fr": {"type": "string", "description": "The french translation.", "example": "Facture"}, "it": {"type": "string", "description": "The italian translation.", "example": "Fattura"}}}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "default": {"type": "boolean", "description": "Only one default record per application is allowed"}, "mcsr_role": {"type": "integer", "description": "Only applicable to organizations based in Greece. See the <a href=\"#mcsr-role\">MCSR role</a> data type One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1` | Invoice\n`2` | Receipt\n</details>"}}}, "name": "data", "in": "body"}], "tags": ["documenttypes"], "summary": "/v1.0/documenttypes/{id}/", "operationId": "documenttypes_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The title, as it will appear on the rendered document (e.g. \"Tax invoice\").", "example": "Invoice"}, "title_translations": {"type": "object", "description": "The translations to use when invoicing in multiple languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "\u0424\u0430\u043a\u0442\u0443\u0440\u0430"}, "de": {"type": "string", "description": "The german translation.", "example": "Rechnung"}, "el": {"type": "string", "description": "The greek translation.", "example": "\u03a4\u03b9\u03bc\u03bf\u03bb\u03cc\u03b3\u03b9\u03bf"}, "en": {"type": "string", "description": "The english translation.", "example": "Invoice"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "Invoice"}, "es": {"type": "string", "description": "The spanish translation.", "example": "Factura"}, "fr": {"type": "string", "description": "The french translation.", "example": "Facture"}, "it": {"type": "string", "description": "The italian translation.", "example": "Fattura"}}}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "application": {"type": "integer", "description": "The kind of documents this type applies to. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1` | Invoices\n`2` | Credit notes\n`3` | Estimates\n</details>", "example": 1}, "default": {"type": "boolean", "description": "Only one default record per application is allowed"}, "mcsr_role": {"type": "integer", "description": "Only applicable to organizations based in Greece. See the <a href=\"#mcsr-role\">MCSR role</a> data type One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1` | Invoice\n`2` | Receipt\n</details>"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a document type.\n---\nThe only difference between full & partial update is that the latter\nwill treat all parameters as optional. Any missing parameter will\nresult in keeping the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"title": {"type": "string", "description": "The title, as it will appear on the rendered document (e.g. \"Tax invoice\").", "example": "Invoice"}, "title_translations": {"type": "object", "description": "The translations to use when invoicing in multiple languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "\u0424\u0430\u043a\u0442\u0443\u0440\u0430"}, "de": {"type": "string", "description": "The german translation.", "example": "Rechnung"}, "el": {"type": "string", "description": "The greek translation.", "example": "\u03a4\u03b9\u03bc\u03bf\u03bb\u03cc\u03b3\u03b9\u03bf"}, "en": {"type": "string", "description": "The english translation.", "example": "Invoice"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "Invoice"}, "es": {"type": "string", "description": "The spanish translation.", "example": "Factura"}, "fr": {"type": "string", "description": "The french translation.", "example": "Facture"}, "it": {"type": "string", "description": "The italian translation.", "example": "Fattura"}}}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "default": {"type": "boolean", "description": "Only one default record per application is allowed"}, "mcsr_role": {"type": "integer", "description": "Only applicable to organizations based in Greece. See the <a href=\"#mcsr-role\">MCSR role</a> data type One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1` | Invoice\n`2` | Receipt\n</details>"}}}, "name": "data", "in": "body"}], "tags": ["documenttypes"], "summary": "/v1.0/documenttypes/{id}/", "operationId": "documenttypes_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The title, as it will appear on the rendered document (e.g. \"Tax invoice\").", "example": "Invoice"}, "title_translations": {"type": "object", "description": "The translations to use when invoicing in multiple languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "\u0424\u0430\u043a\u0442\u0443\u0440\u0430"}, "de": {"type": "string", "description": "The german translation.", "example": "Rechnung"}, "el": {"type": "string", "description": "The greek translation.", "example": "\u03a4\u03b9\u03bc\u03bf\u03bb\u03cc\u03b3\u03b9\u03bf"}, "en": {"type": "string", "description": "The english translation.", "example": "Invoice"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "Invoice"}, "es": {"type": "string", "description": "The spanish translation.", "example": "Factura"}, "fr": {"type": "string", "description": "The french translation.", "example": "Facture"}, "it": {"type": "string", "description": "The italian translation.", "example": "Fattura"}}}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "application": {"type": "integer", "description": "The kind of documents this type applies to. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1` | Invoices\n`2` | Credit notes\n`3` | Estimates\n</details>", "example": 1}, "default": {"type": "boolean", "description": "Only one default record per application is allowed"}, "mcsr_role": {"type": "integer", "description": "Only applicable to organizations based in Greece. See the <a href=\"#mcsr-role\">MCSR role</a> data type One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1` | Invoice\n`2` | Receipt\n</details>"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a document type.\n---\nNote that you cannot delete document types marked as default.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["documenttypes"], "summary": "/v1.0/documenttypes/{id}/", "operationId": "documenttypes_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/estimates/": {"get": {"description": "Get the list of estimates.\n---\nThe response does not include all the estimate details.\nTo retrieve more information about a specific estimate, use\nthe [single estimate](#operation/estimates_read) endpoint.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `client__display_name`, `documenttype__title`, `series__name`, `number`, `notes`, `items__title`, `items__description`."}, {"required": false, "type": "string", "name": "documenttype", "in": "query", "description": "Optionally filter by document type ID."}, {"required": false, "type": "string", "name": "series", "in": "query", "description": "Optionally filter by the numbering sequence ID."}, {"required": false, "type": "string", "name": "draft", "in": "query", "description": "Optionally filter by draft status. Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "accept_status", "in": "query", "description": "Optionally filter by accept status. Can be either `accepted` or `rejected`."}, {"required": false, "type": "string", "name": "client", "in": "query", "description": "Optionally filter by client ID."}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `date`, `documenttype__title`, `client__display_name`, `total`, `initial`, `net`, `draft`, `number`, `series__name`. Prepend a `-` to denote reverse ordering (e.g `-date`)."}, {"required": false, "type": "string", "name": "period_from", "in": "query", "description": "Optionally filter results from a date onwards.Must be used with the `period_to` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}, {"required": false, "type": "string", "name": "period_to", "in": "query", "description": "Optionally filter results from a date backwards.Must be used with the `period_from` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}], "tags": ["estimates"], "summary": "/v1.0/estimates/", "operationId": "estimates_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "accept_status": {"type": "string", "description": "Whether the client has accepted / rejected the estimate. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`accepted` | Accepted\n`rejected` | Rejected\n</details>", "example": "accepted"}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`accepted` | Accepted\n`rejected` | Rejected\n</details>", "example": "accepted"}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Estimate #EST-1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "The client name as it will appear on the PDF.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the estimate"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "permalink": {"type": "string", "description": "Public URL for clients.", "example": "//url-for-the-client/"}, "converted_invoice": {"type": "string", "description": "The ID of the generated invoice (if any).", "example": "6700230020000663"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new estimate.\n---\nTo create a new estimate, you must first specify the client.\nYou may choose to omit all client-related fields\nexcept from the client ID. In this case, the fields will be initialized\nwith values originating from the client's contact record.\nFor example, if you do not specify the `client_email` parameter\nit will be automatically copied from the specified contact record.\nIf you provide blank values (e.g. in case you *do send* the\n`client_email` parameter with an empty string value),\nthe corresponding fields will be left empty.\n\n#### PDF rendering\nAs far as the PDF rendering is concerned, you must first specify\nthe template to use\n(see the [estimates description](#tag/estimates) above).\nYou may override most of the template settings through the\n`template_settings` group of fields. You may omit (do not sent at all)\nany template setting that you do not wish to override.\nThe same goes for the `terms` and `public_notes` fields as well.\n\n> **Tip:** In most cases you only need to specify the template ID and\n> let Elorus initialize the rest template settings.\n\n#### Estimate lines & amounts\nThe estimate's initial, net and total amount will be calculated\nautomatically and their values will depend on the calculator\nmode and the line items.\n\nWhen it comes to the estimate lines, you may associate each\nline with an [inventory product](#tag/products). In this case you can\nomit the `title`, `description`, `measurement unit` and `value` fields\nto have them copied over form product record.\nOnce again, if you choose to explicitly specify any of these fields,\nyou end up overriding the default values of the product record.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["documenttype", "client", "calculator_mode", "items", "template_settings"], "type": "object", "properties": {"documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If not provided, the client name will be retrieved from the specified client contact", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"items": {"type": "string", "description": ""}, "type": "array", "description": "A list of the applied tax IDs.", "example": ["6600230050000705"]}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "required": true, "type": "array", "name": "items", "description": "Line items of an estimate."}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the estimate"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "template_settings": {"type": "object", "description": "The set of appearance settings.", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}}, "accept_status": {"type": "string", "description": "Whether the client has accepted / rejected the estimate. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`accepted` | Accepted\n`rejected` | Rejected\n</details>", "example": "accepted"}}}, "name": "data", "in": "body"}], "tags": ["estimates"], "summary": "/v1.0/estimates/", "operationId": "estimates_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Estimate #EST-1"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`accepted` | Accepted\n`rejected` | Rejected\n</details>", "example": "accepted"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If not provided, the client name will be retrieved from the specified client contact", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of an estimate."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the estimate"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "converted_invoice": {"type": "string", "description": "The ID of the generated invoice (if any).", "example": "6700230020000663"}, "permalink": {"type": "string", "description": "Public URL for clients.", "example": "//url-for-the-client/"}, "accept_status": {"type": "string", "description": "Whether the client has accepted / rejected the estimate. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`accepted` | Accepted\n`rejected` | Rejected\n</details>", "example": "accepted"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "template_settings": {"type": "object", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}, "description": "The set of appearance settings."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/estimates/{id}/": {"get": {"description": "Get a single estimate.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["estimates"], "summary": "/v1.0/estimates/{id}/", "operationId": "estimates_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "accept_status": {"type": "string", "description": "Whether the client has accepted / rejected the estimate. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`accepted` | Accepted\n`rejected` | Rejected\n</details>", "example": "accepted"}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`accepted` | Accepted\n`rejected` | Rejected\n</details>", "example": "accepted"}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Estimate #EST-1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If you change the client and do not specify the field, the client name will be retrieved from the specified client contact.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of an estimate."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the estimate"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "permalink": {"type": "string", "description": "Public URL for clients.", "example": "//url-for-the-client/"}, "converted_invoice": {"type": "string", "description": "The ID of the generated invoice (if any).", "example": "6700230020000663"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "template_settings": {"type": "object", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}, "description": "The set of appearance settings."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update an estimate.\n---\nYou must send all required fields for the record to be\nsuccessfully updated. You may only modify draft estimates. To\nupdate issued estimates, you should first mark them as draft\nvia the [partial update endpoint](#operation/estimates_partial_update).\n\nWhen changing the client all client fields will be updated based on the\nnew contact record, unless you explicitly specify their values.\n\nTo update the line items, the endpoint expects that you send\na complete list of the new items. For existing lines\nyou must send over their IDs (as returned by the\n[retrieve endpoint](#operation/estimates_read))\nalong with any possible changes. If there exist any lines whose\nIDs are not sent, they will be deleted. Accordingly, lines for which\nyou send no ID will result in creating new items.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["documenttype", "client", "calculator_mode", "items", "template_settings"], "type": "object", "properties": {"draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "accept_status": {"type": "string", "description": "Whether the client has accepted / rejected the estimate. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`accepted` | Accepted\n`rejected` | Rejected\n</details>", "example": "accepted"}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If you change the client and do not specify the field, the client name will be retrieved from the specified client contact.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"items": {"type": "string", "description": ""}, "type": "array", "description": "A list of the applied tax IDs.", "example": ["6600230050000705"]}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "required": true, "type": "array", "name": "items", "description": "Line items of an estimate."}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the estimate"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "template_settings": {"type": "object", "description": "The set of appearance settings.", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}}}}, "name": "data", "in": "body"}], "tags": ["estimates"], "summary": "/v1.0/estimates/{id}/", "operationId": "estimates_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "accept_status": {"type": "string", "description": "Whether the client has accepted / rejected the estimate. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`accepted` | Accepted\n`rejected` | Rejected\n</details>", "example": "accepted"}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`accepted` | Accepted\n`rejected` | Rejected\n</details>", "example": "accepted"}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Estimate #EST-1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If you change the client and do not specify the field, the client name will be retrieved from the specified client contact.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of an estimate."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the estimate"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "permalink": {"type": "string", "description": "Public URL for clients.", "example": "//url-for-the-client/"}, "converted_invoice": {"type": "string", "description": "The ID of the generated invoice (if any).", "example": "6700230020000663"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "template_settings": {"type": "object", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}, "description": "The set of appearance settings."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update an estimate.\n---\nUse this action to update the estimate appearance, notes\nor change it's status. Since this method does\nnot modify the estimate items and amounts you can always use it\nregardless the estimate status. On the other hand, the\n[full update action](#operation/estimates_update) is only applicable\nto draft estimates.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "template_settings": {"type": "object", "description": "The set of appearance settings.", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}}, "accept_status": {"type": "string", "description": "Whether the client has accepted / rejected the estimate. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`accepted` | Accepted\n`rejected` | Rejected\n</details>", "example": "accepted"}}}, "name": "data", "in": "body"}], "tags": ["estimates"], "summary": "/v1.0/estimates/{id}/", "operationId": "estimates_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`accepted` | Accepted\n`rejected` | Rejected\n</details>", "example": "accepted"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Estimate #EST-1"}, "converted_invoice": {"type": "string", "description": "The ID of the generated invoice (if any).", "example": "6700230020000663"}, "accept_status": {"type": "string", "description": "Whether the client has accepted / rejected the estimate. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`accepted` | Accepted\n`rejected` | Rejected\n</details>", "example": "accepted"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "template_settings": {"type": "object", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}, "description": "The set of appearance settings."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete an estimate.\n---\nNote that you cannot delete issued, accepted or rejected estimates\n(i.e. the `draft` field must be `true` for the operation to succeed).", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["estimates"], "summary": "/v1.0/estimates/{id}/", "operationId": "estimates_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/estimates/{id}/email/": {"get": {"description": "Email the document to a client.\n---\nYou may retrieve the default email subject, message etc. with a `GET`\nrequest.\n\nUse the `POST` request to queue the email for sending.\nIn most cases you want to send the data exactly as returned by\nthe `GET` action.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["estimates"], "summary": "/v1.0/estimates/{id}/email/", "operationId": "estimates_email_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"to": {"type": "string", "description": "The default recipient email address.", "example": "someone@example.com"}, "cc": {"type": "string", "description": "The default CC email addresses; comma-separated values", "example": "accounting@doe.com"}, "bcc": {"type": "string", "description": "The default BCC email addresses; comma-separated values"}, "reply_to": {"type": "string", "description": "A possible response from the recipients will be sent to this email address.", "example": "john@doe.com"}, "subject": {"type": "string", "description": "The default email subject.", "example": "The email subject"}, "message": {"type": "string", "description": "The default email message.", "example": "Hello,<br/>please find the PDF attached."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Email the document to a client.\n---\nYou may retrieve the default email subject, message etc. with a `GET`\nrequest.\n\nUse the `POST` request to queue the email for sending.\nIn most cases you want to send the data exactly as returned by\nthe `GET` action.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["to", "cc", "bcc", "subject", "message", "attach_pdf", "attachments"], "type": "object", "properties": {"to": {"type": "string", "description": "The recipient email address.", "example": "someone@example.com"}, "store_to": {"type": "boolean", "description": "Store the recipient address on the client contact for future use."}, "cc": {"name": "cc", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["accounting@doe.com"], "description": "A list of email addresses to carbon-copy the email to."}, "bcc": {"name": "bcc", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": [], "description": "A list of email addresses to blind carbon-copy the email to."}, "subject": {"type": "string", "description": "The email subject.", "example": "The email subject"}, "message": {"type": "string", "description": "The email message. May contain html.", "example": "Hello,<br/>please find the PDF attached."}, "attach_pdf": {"type": "boolean", "description": "Whether to include the PDF version of the document as attachment or not."}, "attachments": {"name": "attachments", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["1050000300010040"], "description": "A list of estimate attachment IDs to attach in the email"}}}, "name": "data", "in": "body"}], "tags": ["estimates"], "summary": "/v1.0/estimates/{id}/email/", "operationId": "estimates_email_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"to": {"type": "string", "description": "The recipient email address.", "example": "someone@example.com"}, "store_to": {"type": "boolean", "description": "Store the recipient address on the client contact for future use."}, "cc": {"name": "cc", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["accounting@doe.com"], "description": "A list of email addresses to carbon-copy the email to."}, "bcc": {"name": "bcc", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": [], "description": "A list of email addresses to blind carbon-copy the email to."}, "reply_to": {"type": "string", "description": "A possible response from the recipients will be sent to this email address.", "example": "john@doe.com"}, "subject": {"type": "string", "description": "The email subject.", "example": "The email subject"}, "message": {"type": "string", "description": "The email message. May contain html.", "example": "Hello,<br/>please find the PDF attached."}, "attach_pdf": {"type": "boolean", "description": "Whether to include the PDF version of the document as attachment or not."}, "attachments": {"name": "attachments", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["1050000300010040"], "description": "A list of estimate attachment IDs to attach in the email"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/estimates/{id}/pdf/": {"get": {"description": "Get the document as PDF.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["estimates"], "summary": "/v1.0/estimates/{id}/pdf/", "operationId": "estimates_pdf", "responses": {"200": {"description": "Success"}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/estimates/{id}/to-invoice/": {"put": {"description": "Estimate to invoice.\n---\nYou can create a new invoice out of the estimate, as long as\nthe estimate is not a draft and is not rejected. The invoice\nwill have the exact same data (e.g. client, line items etc.)\nas the estimate. On success, the ID of the created invoice\nwill be returned. To further modify the invoice, use the\n[invoice update](#operation/invoices_update) endpoint.\n\nPlease note that each estimate may only be invoiced once.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["estimates"], "summary": "/v1.0/estimates/{id}/to-invoice/", "operationId": "estimates_to_invoice", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "The estimate ID.", "example": "1050000300010040"}, "converted_invoice": {"type": "string", "description": "The ID of the created invoice.", "example": "6700230020000663"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/estimates/{parent_pk}/attachments/": {"get": {"description": "Get the list of attachments.\n---\nThe list of attachments for the specified record.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}], "tags": ["estimates"], "summary": "/v1.0/estimates/{parent_pk}/attachments/", "operationId": "estimates_attachments_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new attachment.\n---\nAdds a new attachment to the specified record.\nThe actual attachment file must be sent within the request body.\n**Incoming data must be encoded as `multipart/form-data`**.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}, {"required": true, "type": "string", "name": "file", "in": "formData", "description": "The actual file data"}], "tags": ["estimates"], "summary": "/v1.0/estimates/{parent_pk}/attachments/", "operationId": "estimates_attachments_create", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/estimates/{parent_pk}/attachments/{id}/": {"get": {"description": "Get a single attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["estimates"], "summary": "/v1.0/estimates/{parent_pk}/attachments/{id}/", "operationId": "estimates_attachments_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "patch": {"description": "Partially update an attachment.\n---\nYou may change the attachment title but you cannot\nreplace the actual file. **Incoming data\nmust be encoded as `multipart/form-data`.**", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}], "tags": ["estimates"], "summary": "/v1.0/estimates/{parent_pk}/attachments/{id}/", "operationId": "estimates_attachments_partial_update", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete an attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["estimates"], "summary": "/v1.0/estimates/{parent_pk}/attachments/{id}/", "operationId": "estimates_attachments_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/estimates/{parent_pk}/attachments/{id}/file/": {"get": {"description": "Get the actual attachment file.\n---\nThis endpoint may return a `307` redirect response.\nTo retrieve the file you should follow the redirection.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["estimates"], "summary": "/v1.0/estimates/{parent_pk}/attachments/{id}/file/", "operationId": "estimates_attachments_file", "responses": {"200": {"description": "Success"}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/estimateseries/": {"get": {"description": "Get the list of estimate numbering sequences.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `name`, `description`."}, {"required": false, "type": "string", "name": "documenttype", "in": "query", "description": "Optional filter."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `name`. Prepend a `-` to denote reverse ordering (e.g `-name`)."}], "tags": ["estimateseries"], "summary": "/v1.0/estimateseries/", "operationId": "estimateseries_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "name": {"type": "string", "description": "The sequence prefix (e.g. \"INV\").", "example": "INV"}, "description": {"type": "string", "description": "An optional description used for your own reference.", "example": "A new sequence."}, "documenttypes": {"type": "string", "description": "List of document type IDs associated with this sequence.", "example": ["8800000040088865"]}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/estimateseries/{id}/": {"get": {"description": "Get a single estimate numbering sequence.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["estimateseries"], "summary": "/v1.0/estimateseries/{id}/", "operationId": "estimateseries_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "name": {"type": "string", "description": "The sequence prefix (e.g. \"INV\").", "example": "INV"}, "description": {"type": "string", "description": "An optional description used for your own reference.", "example": "A new sequence."}, "documenttypes": {"type": "string", "description": "List of document type IDs associated with this sequence.", "example": ["8800000040088865"]}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "delete": {"description": "Delete an estimate numbering sequence.\n---\nNote that you cannot delete sequences being currently in use.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["estimateseries"], "summary": "/v1.0/estimateseries/{id}/", "operationId": "estimateseries_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/incomingcheques/": {"get": {"description": "Get the list of incoming cheques.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `number`, `bank`, `location`, `contact__display_name`."}, {"required": false, "type": "string", "name": "status", "in": "query", "description": "Optional filter."}, {"required": false, "type": "string", "name": "bank", "in": "query", "description": "Optional filter."}, {"required": false, "type": "string", "name": "contact", "in": "query", "description": "Optionally filter by contact ID."}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "pending", "in": "query", "description": "Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "dishonoured", "in": "query", "description": "Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `issue_date`, `due_date`, `amount`, `contact__display_name`, `bank`, `status`, `location`, `number`. Prepend a `-` to denote reverse ordering (e.g `-issue_date`)."}, {"required": false, "type": "string", "name": "period_from", "in": "query", "description": "Optionally filter results from a date onwards.Must be used with the `period_to` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}, {"required": false, "type": "string", "name": "period_to", "in": "query", "description": "Optionally filter results from a date backwards.Must be used with the `period_from` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}], "tags": ["incomingcheques"], "summary": "/v1.0/incomingcheques/", "operationId": "incomingcheques_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`issued` | Issued\n`expired` | Expired\n`canceled` | Canceled\n`paid` | Paid\n`bank` | In bank\n`bounced` | Bounced\n`lawyer` | In lawyer\n</details>", "example": "issued"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new incoming cheque.\n---\nWhen adding a new incoming cheque, the status is automatically\ninitialized. The initial status will be either 'issued' or\n'expired' based on whether the due_date is a future date or not.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["contact", "amount", "invoices"], "type": "object", "properties": {"contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "invoices": {"name": "invoices", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["8800000040088865"], "description": "A list of issued invoice IDs that will be paid once the cheque is collected"}}}, "name": "data", "in": "body"}], "tags": ["incomingcheques"], "summary": "/v1.0/incomingcheques/", "operationId": "incomingcheques_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`issued` | Issued\n`expired` | Expired\n`canceled` | Canceled\n`paid` | Paid\n`bank` | In bank\n`bounced` | Bounced\n`lawyer` | In lawyer\n</details>", "example": "issued"}, "invoices": {"name": "invoices", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["8800000040088865"], "description": "A list of issued invoice IDs that will be paid once the cheque is collected"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/incomingcheques/{id}/": {"get": {"description": "Get a single incoming cheque.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["incomingcheques"], "summary": "/v1.0/incomingcheques/{id}/", "operationId": "incomingcheques_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`issued` | Issued\n`expired` | Expired\n`canceled` | Canceled\n`paid` | Paid\n`bank` | In bank\n`bounced` | Bounced\n`lawyer` | In lawyer\n</details>", "example": "issued"}, "invoices": {"name": "invoices", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["8800000040088865"], "description": "A list of issued invoice IDs that will be paid once the cheque is collected"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update an incoming cheque.\n---\nIf the cheque is paid, you may not change the amount or\ncontact, nor the associated invoices.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["contact", "amount", "invoices"], "type": "object", "properties": {"contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`issued` | Issued\n`expired` | Expired\n`canceled` | Canceled\n`paid` | Paid\n`bank` | In bank\n`bounced` | Bounced\n`lawyer` | In lawyer\n</details>", "example": "issued"}, "invoices": {"name": "invoices", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["8800000040088865"], "description": "A list of issued invoice IDs that will be paid once the cheque is collected"}}}, "name": "data", "in": "body"}], "tags": ["incomingcheques"], "summary": "/v1.0/incomingcheques/{id}/", "operationId": "incomingcheques_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`issued` | Issued\n`expired` | Expired\n`canceled` | Canceled\n`paid` | Paid\n`bank` | In bank\n`bounced` | Bounced\n`lawyer` | In lawyer\n</details>", "example": "issued"}, "invoices": {"name": "invoices", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["8800000040088865"], "description": "A list of issued invoice IDs that will be paid once the cheque is collected"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update an incoming cheque.\n---\nThe only difference between full & partial update is that the latter\nwill treat all parameters as optional. Any missing parameter will\nresult in keeping the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`issued` | Issued\n`expired` | Expired\n`canceled` | Canceled\n`paid` | Paid\n`bank` | In bank\n`bounced` | Bounced\n`lawyer` | In lawyer\n</details>", "example": "issued"}, "invoices": {"name": "invoices", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["8800000040088865"], "description": "A list of issued invoice IDs that will be paid once the cheque is collected"}}}, "name": "data", "in": "body"}], "tags": ["incomingcheques"], "summary": "/v1.0/incomingcheques/{id}/", "operationId": "incomingcheques_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`issued` | Issued\n`expired` | Expired\n`canceled` | Canceled\n`paid` | Paid\n`bank` | In bank\n`bounced` | Bounced\n`lawyer` | In lawyer\n</details>", "example": "issued"}, "invoices": {"name": "invoices", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["8800000040088865"], "description": "A list of issued invoice IDs that will be paid once the cheque is collected"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete an incoming cheque.\n---\nYou may not delete paid cheques, unless you delete the\nrelated payments first.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["incomingcheques"], "summary": "/v1.0/incomingcheques/{id}/", "operationId": "incomingcheques_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/invoices/": {"get": {"description": "Get the list of invoices.\n---\nThe response does not include all the invoice details.\nTo retrieve more information about a specific invoice, use\nthe [single invoice](#operation/invoices_read) endpoint.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `client__display_name`, `documenttype__title`, `series__name`, `number`, `notes`, `items__title`, `items__description`."}, {"required": false, "type": "string", "name": "documenttype", "in": "query", "description": "Optionally filter by document type ID."}, {"required": false, "type": "string", "name": "series", "in": "query", "description": "Optionally filter by the numbering sequence ID."}, {"required": false, "type": "string", "name": "draft", "in": "query", "description": "Optionally filter by draft status. Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "fpaid", "in": "query", "description": "Optionally filter on whether the invoice is paid or not. Can be either `yes` or `no`."}, {"required": false, "type": "string", "name": "is_void", "in": "query", "description": "Optionally filter by void status. Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "overdue", "in": "query", "description": "Optionally filter by whether the invoice is overdue or not. Can be either `yes` or `no`."}, {"required": false, "type": "string", "name": "client", "in": "query", "description": "Optionally filter by client ID."}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `date`, `documenttype__title`, `client__display_name`, `total`, `initial`, `net`, `draft`, `paid`, `payable`, `number`, `series__name`, `due_date`. Prepend a `-` to denote reverse ordering (e.g `-date`)."}, {"required": false, "type": "string", "name": "period_from", "in": "query", "description": "Optionally filter results from a date onwards.Must be used with the `period_to` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}, {"required": false, "type": "string", "name": "period_to", "in": "query", "description": "Optionally filter results from a date backwards.Must be used with the `period_from` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}], "tags": ["invoices"], "summary": "/v1.0/invoices/", "operationId": "invoices_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>", "example": "paid"}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Invoice #A-1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "Expected payment date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "The client name as it will appear on the PDF.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the invoice"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "permalink": {"type": "string", "description": "Public URL for clients.", "example": "//url-for-the-client/"}, "recurring": {"type": "string", "description": "ID of the recurring record that created this document (if any).", "example": "9900000040000900"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new invoice.\n---\nTo create a new invoice, you must first specify the client.\nYou may choose to omit all client-related fields\nexcept from the client ID. In this case, the fields will be initialized\nwith values originating from the client's contact record.\nFor example, if you do not specify the `client_email` parameter\nit will be automatically copied from the specified contact record.\nIf you provide blank values (e.g. in case you *do send* the\n`client_email` parameter with an empty string value),\nthe corresponding fields will be left empty.\n\n#### PDF rendering\nAs far as the PDF rendering is concerned, you must first specify\nthe template to use\n(see the [invoices description](#tag/invoices) above).\nYou may override most of the template settings through the\n`template_settings` group of fields. You may omit (do not sent at all)\nany template setting that you do not wish to override.\nThe same goes for the `terms` and `public_notes` fields as well.\n\n> **Tip:** In most cases you only need to specify the template ID and\n> let Elorus initialize the rest template settings.\n\n#### Invoice lines & amounts\nThe invoice's initial, net and total amount will be calculated\nautomatically and their values will depend on the calculator\nmode and the line items.\n\nWhen it comes to the invoice lines, you may associate each\nline with an [inventory product](#tag/products). In this case you can\nomit the `title`, `description`, `measurement unit` and `value` fields\nto have them copied over form product record.\nOnce again, if you choose to explicitly specify any of these fields,\nyou end up overriding the default values of the product record.\n\n#### Payment gateways\nWhen you create a new invoice, it will be automatically associated\nwith the default [payment gateways](#tag/paymentgateways) of the\norganization (if any), so that the invoice can be paid online.\nTo modify the invoice's payment gateways, you must use\nthe [partial update endpoint](#operation/invoices_partial_update).", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["documenttype", "date", "client", "calculator_mode", "items", "withholding_taxes", "template_settings"], "type": "object", "properties": {"draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "Expected payment date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If not provided, the client name will be retrieved from the specified client contact", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"items": {"type": "string", "description": ""}, "type": "array", "description": "A list of the applied tax IDs.", "example": ["6600230050000705"]}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "required": true, "type": "array", "name": "items", "description": "Line items of an invoice."}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the invoice"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "template_settings": {"type": "object", "description": "The set of appearance settings.", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["invoices"], "summary": "/v1.0/invoices/", "operationId": "invoices_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>", "example": "paid"}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Invoice #A-1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "Expected payment date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If not provided, the client name will be retrieved from the specified client contact", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of an invoice."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the invoice"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "payment_gateways": {"name": "payment_gateways", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["4400230020000542"], "description": "A list of payment gateway IDs that can be used to pay the invoice."}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "permalink": {"type": "string", "description": "Public URL for clients.", "example": "//url-for-the-client/"}, "recurring": {"type": "string", "description": "ID of the recurring record that created this document (if any).", "example": "9900000040000900"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "template_settings": {"type": "object", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}, "description": "The set of appearance settings."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/invoices/{id}/": {"get": {"description": "Get a single invoice.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["invoices"], "summary": "/v1.0/invoices/{id}/", "operationId": "invoices_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>", "example": "paid"}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Invoice #A-1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "Expected payment date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If you change the client and do not specify the field, the client name will be retrieved from the specified client contact.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of an invoice."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the invoice"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "payment_gateways": {"name": "payment_gateways", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["4400230020000542"], "description": "A list of payment gateway IDs that can be used to pay the invoice."}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "permalink": {"type": "string", "description": "Public URL for clients.", "example": "//url-for-the-client/"}, "recurring": {"type": "string", "description": "ID of the recurring record that created this document (if any).", "example": "9900000040000900"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "template_settings": {"type": "object", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}, "description": "The set of appearance settings."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update an invoice.\n---\nYou must send all required fields for the record to be\nsuccessfully updated. You may only modify draft invoices. To\nupdate issued invoices, you should first mark them as draft\nvia the [partial update endpoint](#operation/invoices_partial_update).\n\nWhen changing the invoice client, all client fields will be updated\nbased on the new contact record, unless you explicitly\nspecify their values.\n\nTo update the line items, the endpoint expects that you send\na complete list of the new items. For existing lines\nyou must send over their IDs (as returned by the\n[retrieve endpoint](#operation/invoices_read))\nalong with any possible changes. If there exist any lines whose\nIDs are not sent, they will be deleted. Accordingly, lines for which\nyou send no ID will result in creating new items.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["documenttype", "client", "calculator_mode", "items", "withholding_taxes", "template_settings", "payment_gateways"], "type": "object", "properties": {"draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "Expected payment date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If you change the client and do not specify the field, the client name will be retrieved from the specified client contact.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"items": {"type": "string", "description": ""}, "type": "array", "description": "A list of the applied tax IDs.", "example": ["6600230050000705"]}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "required": true, "type": "array", "name": "items", "description": "Line items of an invoice."}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the invoice"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "template_settings": {"type": "object", "description": "The set of appearance settings.", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}}, "payment_gateways": {"name": "payment_gateways", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["4400230020000542"], "description": "A list of payment gateway IDs that can be used to pay the invoice."}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["invoices"], "summary": "/v1.0/invoices/{id}/", "operationId": "invoices_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>", "example": "paid"}, "documenttype": {"type": "string", "description": "ID of the associated document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the associated numbering sequence.", "example": "4400000040000456"}, "number": {"type": "string", "description": "Use `0` (zero) for automatic numbering.", "example": "1"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Invoice #A-1"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "Expected payment date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If you change the client and do not specify the field, the client name will be retrieved from the specified client contact.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of an invoice."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "terms": {"type": "string", "description": "These terms are displayed on the document's printable form.", "example": "Terms and conditions here"}, "public_notes": {"type": "string", "description": "These notes are displayed on the document's printable form.", "example": "Notes visible on the invoice"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "payment_gateways": {"name": "payment_gateways", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["4400230020000542"], "description": "A list of payment gateway IDs that can be used to pay the invoice."}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "permalink": {"type": "string", "description": "Public URL for clients.", "example": "//url-for-the-client/"}, "recurring": {"type": "string", "description": "ID of the recurring record that created this document (if any).", "example": "9900000040000900"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "template_settings": {"type": "object", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}, "description": "The set of appearance settings."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update an invoice.\n---\nUse this action to update the invoice appearance, the payment gateways\nor change it's draft status. Since this method does\nnot modify the invoice items and amounts you can always use it\nregardless the invoice status. On the other hand, the\n[full update action](#operation/invoices_update) is only applicable\nto draft invoices.\n\nPlease not that you cannot mark void invoices as draft, unless\nyou [un-void](#operation/invoices_mark_void) them first.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "template_settings": {"type": "object", "description": "The set of appearance settings.", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}}, "payment_gateways": {"name": "payment_gateways", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["4400230020000542"], "description": "A list of payment gateway IDs that can be used to pay the invoice."}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["invoices"], "summary": "/v1.0/invoices/{id}/", "operationId": "invoices_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>", "example": "paid"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Invoice #A-1"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "payment_gateways": {"name": "payment_gateways", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["4400230020000542"], "description": "A list of payment gateway IDs that can be used to pay the invoice."}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "template_settings": {"type": "object", "properties": {"discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_product_code": {"type": "boolean", "description": "Hide product code from the document."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "theme": {"type": "string", "description": "ID of the associated template.", "example": "1100000022000129"}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}}, "description": "The set of appearance settings."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete an invoice.\n---\nNote that you cannot delete invoices marked as issued\n(i.e. the `draft` field is set to `false`).", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["invoices"], "summary": "/v1.0/invoices/{id}/", "operationId": "invoices_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/invoices/{id}/email/": {"get": {"description": "Email the document to a client.\n---\nYou may retrieve the default email subject, message etc. with a `GET`\nrequest.\n\nUse the `POST` request to queue the email for sending.\nIn most cases you want to send the data exactly as returned by\nthe `GET` action.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["invoices"], "summary": "/v1.0/invoices/{id}/email/", "operationId": "invoices_email_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"to": {"type": "string", "description": "The default recipient email address.", "example": "someone@example.com"}, "cc": {"type": "string", "description": "The default CC email addresses; comma-separated values", "example": "accounting@doe.com"}, "bcc": {"type": "string", "description": "The default BCC email addresses; comma-separated values"}, "reply_to": {"type": "string", "description": "A possible response from the recipients will be sent to this email address.", "example": "john@doe.com"}, "subject": {"type": "string", "description": "The default email subject.", "example": "The email subject"}, "message": {"type": "string", "description": "The default email message.", "example": "Hello,<br/>please find the PDF attached."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Email the document to a client.\n---\nYou may retrieve the default email subject, message etc. with a `GET`\nrequest.\n\nUse the `POST` request to queue the email for sending.\nIn most cases you want to send the data exactly as returned by\nthe `GET` action.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["to", "cc", "bcc", "subject", "message", "attach_pdf", "attachments"], "type": "object", "properties": {"to": {"type": "string", "description": "The recipient email address.", "example": "someone@example.com"}, "store_to": {"type": "boolean", "description": "Store the recipient address on the client contact for future use."}, "cc": {"name": "cc", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["accounting@doe.com"], "description": "A list of email addresses to carbon-copy the email to."}, "bcc": {"name": "bcc", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": [], "description": "A list of email addresses to blind carbon-copy the email to."}, "subject": {"type": "string", "description": "The email subject.", "example": "The email subject"}, "message": {"type": "string", "description": "The email message. May contain html.", "example": "Hello,<br/>please find the PDF attached."}, "attach_pdf": {"type": "boolean", "description": "Whether to include the PDF version of the document as attachment or not."}, "attachments": {"name": "attachments", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["1050000300010040"], "description": "A list of invoice attachment IDs to attach in the email"}}}, "name": "data", "in": "body"}], "tags": ["invoices"], "summary": "/v1.0/invoices/{id}/email/", "operationId": "invoices_email_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"to": {"type": "string", "description": "The recipient email address.", "example": "someone@example.com"}, "store_to": {"type": "boolean", "description": "Store the recipient address on the client contact for future use."}, "cc": {"name": "cc", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["accounting@doe.com"], "description": "A list of email addresses to carbon-copy the email to."}, "bcc": {"name": "bcc", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": [], "description": "A list of email addresses to blind carbon-copy the email to."}, "reply_to": {"type": "string", "description": "A possible response from the recipients will be sent to this email address.", "example": "john@doe.com"}, "subject": {"type": "string", "description": "The email subject.", "example": "The email subject"}, "message": {"type": "string", "description": "The email message. May contain html.", "example": "Hello,<br/>please find the PDF attached."}, "attach_pdf": {"type": "boolean", "description": "Whether to include the PDF version of the document as attachment or not."}, "attachments": {"name": "attachments", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["1050000300010040"], "description": "A list of invoice attachment IDs to attach in the email"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/invoices/{id}/pdf/": {"get": {"description": "Get the document as PDF.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["invoices"], "summary": "/v1.0/invoices/{id}/pdf/", "operationId": "invoices_pdf", "responses": {"200": {"description": "Success"}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/invoices/{id}/void/": {"put": {"description": "Mark as void / Un-Void\n---\nMark the document as void or convert it from void back to issued.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"void": {"type": "boolean", "description": "Whether to void or un-void the document.If not sent, `true` will be assumed."}}}, "name": "data", "in": "body"}], "tags": ["invoices"], "summary": "/v1.0/invoices/{id}/void/", "operationId": "invoices_mark_void", "consumes": ["application/json"], "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/invoices/{parent_pk}/attachments/": {"get": {"description": "Get the list of attachments.\n---\nThe list of attachments for the specified record.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}], "tags": ["invoices"], "summary": "/v1.0/invoices/{parent_pk}/attachments/", "operationId": "invoices_attachments_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new attachment.\n---\nAdds a new attachment to the specified record.\nThe actual attachment file must be sent within the request body.\n**Incoming data must be encoded as `multipart/form-data`**.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}, {"required": true, "type": "string", "name": "file", "in": "formData", "description": "The actual file data"}], "tags": ["invoices"], "summary": "/v1.0/invoices/{parent_pk}/attachments/", "operationId": "invoices_attachments_create", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/invoices/{parent_pk}/attachments/{id}/": {"get": {"description": "Get a single attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["invoices"], "summary": "/v1.0/invoices/{parent_pk}/attachments/{id}/", "operationId": "invoices_attachments_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "patch": {"description": "Partially update an attachment.\n---\nYou may change the attachment title but you cannot\nreplace the actual file. **Incoming data\nmust be encoded as `multipart/form-data`.**", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}], "tags": ["invoices"], "summary": "/v1.0/invoices/{parent_pk}/attachments/{id}/", "operationId": "invoices_attachments_partial_update", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete an attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["invoices"], "summary": "/v1.0/invoices/{parent_pk}/attachments/{id}/", "operationId": "invoices_attachments_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/invoices/{parent_pk}/attachments/{id}/file/": {"get": {"description": "Get the actual attachment file.\n---\nThis endpoint may return a `307` redirect response.\nTo retrieve the file you should follow the redirection.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["invoices"], "summary": "/v1.0/invoices/{parent_pk}/attachments/{id}/file/", "operationId": "invoices_attachments_file", "responses": {"200": {"description": "Success"}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/organization/": {"get": {"description": "Get organization details.\n---\nRetrieve details about the organization\nprovided through the `X-Elorus-Organization`\nheader (See the [Authorization](#tag/Authorization) section).", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}], "tags": ["organization"], "summary": "/v1.0/organization/", "operationId": "organization_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "subdomain": {"type": "string", "description": "A unique URL for the organization. You will be able to login and use the application through that URL.", "example": "acme"}, "company": {"type": "string", "description": "The company name.", "example": "Acme Inc."}, "industry": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`agriculture` | Farming / Agriculture\n`fishery` | Fishery\n`actor` | Actor / Performer\n`art-design` | Art & Graphical Design services\n`photography` | Photography services\n`music` | Musician / Voice artist / Music services\n`automotive` | Automotive store\n`auto-parts` | Auto parts & accessories store\n`auto-mechanic` | Auto mechanic / Auto repair\n`civil-engineer` | Civil engineer / Architect\n`construction` | Construction firm\n`maintainance-technician` | Maintenance technician (Carpenter, Plumber etc)\n`electronics-repair` | Electronic equipment repair\n`electronics` | Electronics & Consumer electronics store\n`entertainment-recreation` | Entertainment & Recreation facilities\n`entertainment-services` | Entertainment services\n`fashion-beauty` | Fashion & Beauty store\n`fashion-design-services` | Fashion design services\n`hair-beauty-services` | Hair & Beauty services\n`accounting` | Accounting services\n`financial-banking` | Financial & Banking\n`catering-services` | Catering services\n`food-beverage` | Food & Beverage retail store\n`food-beverage-service` | Cafe / Bar / Restaurant etc.\n`doctor` | Doctor\n`healthcare` | Healthcare services\n`medical-equipment` | Pharmaceutical & Medical equipment\n`marketing` | Marketing services\n`media-communications` | Media & Communication services\n`sports` | Sports & fitness facilities\n`sports-services` | Sports agency / Sports club etc.\n`sports-equipment` | Sports equipment store\n`information-technology` | IT & Software engineering services\n`technology` | Other technology services\n`telecommunications` | Telecommunication services\n`web-services` | Web & Cloud services\n`manufacturing` | Manufacturing / Small industry / Lab\n`non-profit` | Non profit\n`retail` | Retail\n`wholesale` | Wholesale trades\n`writer` | Author / Writer / Journalist etc.\n`publishing` | Publishing\n`consulting` | Consulting services\n`education` | Education services\n`employment` | Employment & Recruitment services\n`energy` | Energy\n`insurance` | Insurance\n`legal` | Legal services\n`real-estate` | Real Estate\n`services` | Other services\n`hospitality` | Accommodation & Hospitality services\n`tourism` | Tourism & travel services\n`transportation` | Transportation services\n</details>", "example": "web-services"}, "logo": {"type": "string", "description": "<p>Upload your company logo, which will be used in various sections of the application (e.g. the report PDF documents).</p><p>This logo <strong>will not be used</strong> in the invoices and estimates you issue; you may organize your invoice logos using <i>templates<i>.</p>", "example": "//url-to-access-the-file/"}, "vat_number": {"type": "string", "description": "The tax ID of the organization.", "example": ""}, "tax_office": {"type": "string", "description": "Applies only to organizations based in Greece. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>", "example": ""}, "address": {"type": "string", "description": "", "example": "4 Catherine St."}, "city": {"type": "string", "description": "", "example": "Southaven"}, "state": {"type": "string", "description": "", "example": "MS"}, "zip": {"type": "string", "description": "", "example": "38671"}, "country": {"type": "string", "description": "The country where the business is situated. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MK` | North Macedonia\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>", "example": "US"}, "phone": {"type": "string", "description": "The primary phone number.", "example": "(555) 555-1234"}, "fax": {"type": "string", "description": "", "example": ""}, "currency_code": {"type": "string", "description": "You cannot change the currency once you have added financial transactions (e.g. issued invoices, payments sent etc) One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "currency_before_value": {"type": "boolean", "description": "If checked, currency will be displayed before the amount (e.g. $30 instead of 30$)"}, "starting_balance": {"type": "string", "description": "Fill in your business's initial capital. It will be taken into consideration in the cash flow report. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "0.00"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create an organization.\n---\nThis endpoint is used to create a new organization.\nTherefore, **you may omit the X-Elorus-Organization** header.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": true, "type": "string", "name": "subdomain", "in": "formData", "description": "A unique URL for the organization. You will be able to login and use the application through that URL."}, {"required": true, "type": "string", "name": "company", "in": "formData", "description": "The company name."}, {"required": true, "type": "string", "name": "country", "in": "formData", "description": "The country where the business is situated. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MK` | North Macedonia\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>"}, {"required": false, "type": "string", "name": "vat_number", "in": "formData", "description": "The tax ID of the organization."}], "tags": ["organization"], "summary": "/v1.0/organization/", "operationId": "organization_create", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "subdomain": {"type": "string", "description": "A unique URL for the organization. You will be able to login and use the application through that URL.", "example": "acme"}, "company": {"type": "string", "description": "The company name.", "example": "Acme Inc."}, "country": {"type": "string", "description": "The country where the business is situated. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MK` | North Macedonia\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>", "example": "US"}, "vat_number": {"type": "string", "description": "The tax ID of the organization.", "example": ""}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "put": {"description": "Update an organization.\n---\nUpdate the organization provided through the `X-Elorus-Organization`\nheader (See the [Authorization](#tag/Authorization) section).\n\n**Incoming data must be encoded as `multipart/form-data` so that you\nmay upload the logo.**", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": true, "type": "string", "name": "subdomain", "in": "formData", "description": "A unique URL for the organization. You will be able to login and use the application through that URL."}, {"required": true, "type": "string", "name": "company", "in": "formData", "description": "The company name."}, {"required": false, "type": "string", "name": "industry", "in": "formData", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`agriculture` | Farming / Agriculture\n`fishery` | Fishery\n`actor` | Actor / Performer\n`art-design` | Art & Graphical Design services\n`photography` | Photography services\n`music` | Musician / Voice artist / Music services\n`automotive` | Automotive store\n`auto-parts` | Auto parts & accessories store\n`auto-mechanic` | Auto mechanic / Auto repair\n`civil-engineer` | Civil engineer / Architect\n`construction` | Construction firm\n`maintainance-technician` | Maintenance technician (Carpenter, Plumber etc)\n`electronics-repair` | Electronic equipment repair\n`electronics` | Electronics & Consumer electronics store\n`entertainment-recreation` | Entertainment & Recreation facilities\n`entertainment-services` | Entertainment services\n`fashion-beauty` | Fashion & Beauty store\n`fashion-design-services` | Fashion design services\n`hair-beauty-services` | Hair & Beauty services\n`accounting` | Accounting services\n`financial-banking` | Financial & Banking\n`catering-services` | Catering services\n`food-beverage` | Food & Beverage retail store\n`food-beverage-service` | Cafe / Bar / Restaurant etc.\n`doctor` | Doctor\n`healthcare` | Healthcare services\n`medical-equipment` | Pharmaceutical & Medical equipment\n`marketing` | Marketing services\n`media-communications` | Media & Communication services\n`sports` | Sports & fitness facilities\n`sports-services` | Sports agency / Sports club etc.\n`sports-equipment` | Sports equipment store\n`information-technology` | IT & Software engineering services\n`technology` | Other technology services\n`telecommunications` | Telecommunication services\n`web-services` | Web & Cloud services\n`manufacturing` | Manufacturing / Small industry / Lab\n`non-profit` | Non profit\n`retail` | Retail\n`wholesale` | Wholesale trades\n`writer` | Author / Writer / Journalist etc.\n`publishing` | Publishing\n`consulting` | Consulting services\n`education` | Education services\n`employment` | Employment & Recruitment services\n`energy` | Energy\n`insurance` | Insurance\n`legal` | Legal services\n`real-estate` | Real Estate\n`services` | Other services\n`hospitality` | Accommodation & Hospitality services\n`tourism` | Tourism & travel services\n`transportation` | Transportation services\n</details>"}, {"required": false, "type": "string", "name": "logo", "in": "formData", "description": "<p>Upload your company logo, which will be used in various sections of the application (e.g. the report PDF documents).</p><p>This logo <strong>will not be used</strong> in the invoices and estimates you issue; you may organize your invoice logos using <i>templates<i>.</p>"}, {"required": false, "type": "string", "name": "vat_number", "in": "formData", "description": "The tax ID of the organization."}, {"required": false, "type": "string", "name": "tax_office", "in": "formData", "description": "Applies only to organizations based in Greece. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, {"required": false, "type": "string", "name": "address", "in": "formData", "description": ""}, {"required": false, "type": "string", "name": "city", "in": "formData", "description": ""}, {"required": false, "type": "string", "name": "state", "in": "formData", "description": ""}, {"required": false, "type": "string", "name": "zip", "in": "formData", "description": ""}, {"required": true, "type": "string", "name": "country", "in": "formData", "description": "The country where the business is situated. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MK` | North Macedonia\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>"}, {"required": false, "type": "string", "name": "phone", "in": "formData", "description": "The primary phone number."}, {"required": false, "type": "string", "name": "fax", "in": "formData", "description": ""}, {"required": false, "type": "string", "name": "currency_code", "in": "formData", "description": "You cannot change the currency once you have added financial transactions (e.g. issued invoices, payments sent etc) One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, {"required": false, "type": "boolean", "name": "currency_before_value", "in": "formData", "description": "If checked, currency will be displayed before the amount (e.g. $30 instead of 30$)"}, {"required": false, "type": "string", "name": "starting_balance", "in": "formData", "description": "Fill in your business's initial capital. It will be taken into consideration in the cash flow report. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places."}], "tags": ["organization"], "summary": "/v1.0/organization/", "operationId": "organization_update", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "subdomain": {"type": "string", "description": "A unique URL for the organization. You will be able to login and use the application through that URL.", "example": "acme"}, "company": {"type": "string", "description": "The company name.", "example": "Acme Inc."}, "industry": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`agriculture` | Farming / Agriculture\n`fishery` | Fishery\n`actor` | Actor / Performer\n`art-design` | Art & Graphical Design services\n`photography` | Photography services\n`music` | Musician / Voice artist / Music services\n`automotive` | Automotive store\n`auto-parts` | Auto parts & accessories store\n`auto-mechanic` | Auto mechanic / Auto repair\n`civil-engineer` | Civil engineer / Architect\n`construction` | Construction firm\n`maintainance-technician` | Maintenance technician (Carpenter, Plumber etc)\n`electronics-repair` | Electronic equipment repair\n`electronics` | Electronics & Consumer electronics store\n`entertainment-recreation` | Entertainment & Recreation facilities\n`entertainment-services` | Entertainment services\n`fashion-beauty` | Fashion & Beauty store\n`fashion-design-services` | Fashion design services\n`hair-beauty-services` | Hair & Beauty services\n`accounting` | Accounting services\n`financial-banking` | Financial & Banking\n`catering-services` | Catering services\n`food-beverage` | Food & Beverage retail store\n`food-beverage-service` | Cafe / Bar / Restaurant etc.\n`doctor` | Doctor\n`healthcare` | Healthcare services\n`medical-equipment` | Pharmaceutical & Medical equipment\n`marketing` | Marketing services\n`media-communications` | Media & Communication services\n`sports` | Sports & fitness facilities\n`sports-services` | Sports agency / Sports club etc.\n`sports-equipment` | Sports equipment store\n`information-technology` | IT & Software engineering services\n`technology` | Other technology services\n`telecommunications` | Telecommunication services\n`web-services` | Web & Cloud services\n`manufacturing` | Manufacturing / Small industry / Lab\n`non-profit` | Non profit\n`retail` | Retail\n`wholesale` | Wholesale trades\n`writer` | Author / Writer / Journalist etc.\n`publishing` | Publishing\n`consulting` | Consulting services\n`education` | Education services\n`employment` | Employment & Recruitment services\n`energy` | Energy\n`insurance` | Insurance\n`legal` | Legal services\n`real-estate` | Real Estate\n`services` | Other services\n`hospitality` | Accommodation & Hospitality services\n`tourism` | Tourism & travel services\n`transportation` | Transportation services\n</details>", "example": "web-services"}, "logo": {"type": "string", "description": "<p>Upload your company logo, which will be used in various sections of the application (e.g. the report PDF documents).</p><p>This logo <strong>will not be used</strong> in the invoices and estimates you issue; you may organize your invoice logos using <i>templates<i>.</p>", "example": "//url-to-access-the-file/"}, "vat_number": {"type": "string", "description": "The tax ID of the organization.", "example": ""}, "tax_office": {"type": "string", "description": "Applies only to organizations based in Greece. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>", "example": ""}, "address": {"type": "string", "description": "", "example": "4 Catherine St."}, "city": {"type": "string", "description": "", "example": "Southaven"}, "state": {"type": "string", "description": "", "example": "MS"}, "zip": {"type": "string", "description": "", "example": "38671"}, "country": {"type": "string", "description": "The country where the business is situated. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MK` | North Macedonia\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>", "example": "US"}, "phone": {"type": "string", "description": "The primary phone number.", "example": "(555) 555-1234"}, "fax": {"type": "string", "description": "", "example": ""}, "currency_code": {"type": "string", "description": "You cannot change the currency once you have added financial transactions (e.g. issued invoices, payments sent etc) One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "currency_before_value": {"type": "boolean", "description": "If checked, currency will be displayed before the amount (e.g. $30 instead of 30$)"}, "starting_balance": {"type": "string", "description": "Fill in your business's initial capital. It will be taken into consideration in the cash flow report. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "0.00"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update an organization.\n---\nUpdate the organization provided through the `X-Elorus-Organization`\nheader (See the [Authorization](#tag/Authorization) section).\n\n**Incoming data must be encoded as `multipart/form-data` so that you\nmay upload the logo.**", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "subdomain", "in": "formData", "description": "A unique URL for the organization. You will be able to login and use the application through that URL."}, {"required": false, "type": "string", "name": "company", "in": "formData", "description": "The company name."}, {"required": false, "type": "string", "name": "industry", "in": "formData", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`agriculture` | Farming / Agriculture\n`fishery` | Fishery\n`actor` | Actor / Performer\n`art-design` | Art & Graphical Design services\n`photography` | Photography services\n`music` | Musician / Voice artist / Music services\n`automotive` | Automotive store\n`auto-parts` | Auto parts & accessories store\n`auto-mechanic` | Auto mechanic / Auto repair\n`civil-engineer` | Civil engineer / Architect\n`construction` | Construction firm\n`maintainance-technician` | Maintenance technician (Carpenter, Plumber etc)\n`electronics-repair` | Electronic equipment repair\n`electronics` | Electronics & Consumer electronics store\n`entertainment-recreation` | Entertainment & Recreation facilities\n`entertainment-services` | Entertainment services\n`fashion-beauty` | Fashion & Beauty store\n`fashion-design-services` | Fashion design services\n`hair-beauty-services` | Hair & Beauty services\n`accounting` | Accounting services\n`financial-banking` | Financial & Banking\n`catering-services` | Catering services\n`food-beverage` | Food & Beverage retail store\n`food-beverage-service` | Cafe / Bar / Restaurant etc.\n`doctor` | Doctor\n`healthcare` | Healthcare services\n`medical-equipment` | Pharmaceutical & Medical equipment\n`marketing` | Marketing services\n`media-communications` | Media & Communication services\n`sports` | Sports & fitness facilities\n`sports-services` | Sports agency / Sports club etc.\n`sports-equipment` | Sports equipment store\n`information-technology` | IT & Software engineering services\n`technology` | Other technology services\n`telecommunications` | Telecommunication services\n`web-services` | Web & Cloud services\n`manufacturing` | Manufacturing / Small industry / Lab\n`non-profit` | Non profit\n`retail` | Retail\n`wholesale` | Wholesale trades\n`writer` | Author / Writer / Journalist etc.\n`publishing` | Publishing\n`consulting` | Consulting services\n`education` | Education services\n`employment` | Employment & Recruitment services\n`energy` | Energy\n`insurance` | Insurance\n`legal` | Legal services\n`real-estate` | Real Estate\n`services` | Other services\n`hospitality` | Accommodation & Hospitality services\n`tourism` | Tourism & travel services\n`transportation` | Transportation services\n</details>"}, {"required": false, "type": "string", "name": "logo", "in": "formData", "description": "<p>Upload your company logo, which will be used in various sections of the application (e.g. the report PDF documents).</p><p>This logo <strong>will not be used</strong> in the invoices and estimates you issue; you may organize your invoice logos using <i>templates<i>.</p>"}, {"required": false, "type": "string", "name": "vat_number", "in": "formData", "description": "The tax ID of the organization."}, {"required": false, "type": "string", "name": "tax_office", "in": "formData", "description": "Applies only to organizations based in Greece. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, {"required": false, "type": "string", "name": "address", "in": "formData", "description": ""}, {"required": false, "type": "string", "name": "city", "in": "formData", "description": ""}, {"required": false, "type": "string", "name": "state", "in": "formData", "description": ""}, {"required": false, "type": "string", "name": "zip", "in": "formData", "description": ""}, {"required": false, "type": "string", "name": "country", "in": "formData", "description": "The country where the business is situated. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MK` | North Macedonia\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>"}, {"required": false, "type": "string", "name": "phone", "in": "formData", "description": "The primary phone number."}, {"required": false, "type": "string", "name": "fax", "in": "formData", "description": ""}, {"required": false, "type": "string", "name": "currency_code", "in": "formData", "description": "You cannot change the currency once you have added financial transactions (e.g. issued invoices, payments sent etc) One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>"}, {"required": false, "type": "boolean", "name": "currency_before_value", "in": "formData", "description": "If checked, currency will be displayed before the amount (e.g. $30 instead of 30$)"}, {"required": false, "type": "string", "name": "starting_balance", "in": "formData", "description": "Fill in your business's initial capital. It will be taken into consideration in the cash flow report. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places."}], "tags": ["organization"], "summary": "/v1.0/organization/", "operationId": "organization_partial_update", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "subdomain": {"type": "string", "description": "A unique URL for the organization. You will be able to login and use the application through that URL.", "example": "acme"}, "company": {"type": "string", "description": "The company name.", "example": "Acme Inc."}, "industry": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`agriculture` | Farming / Agriculture\n`fishery` | Fishery\n`actor` | Actor / Performer\n`art-design` | Art & Graphical Design services\n`photography` | Photography services\n`music` | Musician / Voice artist / Music services\n`automotive` | Automotive store\n`auto-parts` | Auto parts & accessories store\n`auto-mechanic` | Auto mechanic / Auto repair\n`civil-engineer` | Civil engineer / Architect\n`construction` | Construction firm\n`maintainance-technician` | Maintenance technician (Carpenter, Plumber etc)\n`electronics-repair` | Electronic equipment repair\n`electronics` | Electronics & Consumer electronics store\n`entertainment-recreation` | Entertainment & Recreation facilities\n`entertainment-services` | Entertainment services\n`fashion-beauty` | Fashion & Beauty store\n`fashion-design-services` | Fashion design services\n`hair-beauty-services` | Hair & Beauty services\n`accounting` | Accounting services\n`financial-banking` | Financial & Banking\n`catering-services` | Catering services\n`food-beverage` | Food & Beverage retail store\n`food-beverage-service` | Cafe / Bar / Restaurant etc.\n`doctor` | Doctor\n`healthcare` | Healthcare services\n`medical-equipment` | Pharmaceutical & Medical equipment\n`marketing` | Marketing services\n`media-communications` | Media & Communication services\n`sports` | Sports & fitness facilities\n`sports-services` | Sports agency / Sports club etc.\n`sports-equipment` | Sports equipment store\n`information-technology` | IT & Software engineering services\n`technology` | Other technology services\n`telecommunications` | Telecommunication services\n`web-services` | Web & Cloud services\n`manufacturing` | Manufacturing / Small industry / Lab\n`non-profit` | Non profit\n`retail` | Retail\n`wholesale` | Wholesale trades\n`writer` | Author / Writer / Journalist etc.\n`publishing` | Publishing\n`consulting` | Consulting services\n`education` | Education services\n`employment` | Employment & Recruitment services\n`energy` | Energy\n`insurance` | Insurance\n`legal` | Legal services\n`real-estate` | Real Estate\n`services` | Other services\n`hospitality` | Accommodation & Hospitality services\n`tourism` | Tourism & travel services\n`transportation` | Transportation services\n</details>", "example": "web-services"}, "logo": {"type": "string", "description": "<p>Upload your company logo, which will be used in various sections of the application (e.g. the report PDF documents).</p><p>This logo <strong>will not be used</strong> in the invoices and estimates you issue; you may organize your invoice logos using <i>templates<i>.</p>", "example": "//url-to-access-the-file/"}, "vat_number": {"type": "string", "description": "The tax ID of the organization.", "example": ""}, "tax_office": {"type": "string", "description": "Applies only to organizations based in Greece. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>", "example": ""}, "address": {"type": "string", "description": "", "example": "4 Catherine St."}, "city": {"type": "string", "description": "", "example": "Southaven"}, "state": {"type": "string", "description": "", "example": "MS"}, "zip": {"type": "string", "description": "", "example": "38671"}, "country": {"type": "string", "description": "The country where the business is situated. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`US` | United States of America\n`CA` | Canada\n`AF` | Afghanistan\n`AL` | Albania\n`DZ` | Algeria\n`AS` | American Samoa\n`AD` | Andorra\n`AO` | Angola\n`AI` | Anguilla\n`AQ` | Antarctica\n`AG` | Antigua & Barbuda\n`AR` | Argentina\n`AM` | Armenia\n`AW` | Aruba\n`AU` | Australia\n`AT` | Austria\n`AZ` | Azerbaijan\n`BS` | Bahamas\n`BH` | Bahrain\n`BD` | Bangladesh\n`BB` | Barbados\n`BY` | Belarus\n`BE` | Belgium\n`BZ` | Belize\n`BJ` | Benin\n`BM` | Bermuda\n`BT` | Bhutan\n`BO` | Bolivia\n`BA` | Bosnia and Herzegovina\n`BW` | Botswana\n`BV` | Bouvet Island\n`BR` | Brazil\n`IO` | British Indian Ocean Territory\n`VG` | British Virgin Islands\n`BN` | Brunei Darussalam\n`BG` | Bulgaria\n`BF` | Burkina Faso\n`BI` | Burundi\n`KH` | Cambodia\n`CM` | Cameroon\n`CV` | Cape Verde\n`KY` | Cayman Islands\n`CF` | Central African Republic\n`TD` | Chad\n`CL` | Chile\n`CN` | China\n`CX` | Christmas Island\n`CC` | Cocos (Keeling) Islands\n`CO` | Colombia\n`KM` | Comoros\n`CG` | Congo\n`CK` | Cook Islands\n`CR` | Costa Rica\n`HR` | Croatia\n`CU` | Cuba\n`CW` | Curacao\n`CY` | Cyprus\n`CZ` | Czech Republic\n`CD` | Democratic Republic of the Congo\n`DK` | Denmark\n`DJ` | Djibouti\n`DM` | Dominica\n`DO` | Dominican Republic\n`TP` | East Timor\n`EC` | Ecuador\n`EG` | Egypt\n`SV` | El Salvador\n`GQ` | Equatorial Guinea\n`ER` | Eritrea\n`EE` | Estonia\n`ET` | Ethiopia\n`FK` | Falkland Islands (Malvinas)\n`FO` | Faroe Islands\n`FJ` | Fiji\n`FI` | Finland\n`FR` | France\n`GF` | French Guiana\n`PF` | French Polynesia\n`TF` | French Southern Territories\n`GA` | Gabon\n`GM` | Gambia\n`GE` | Georgia\n`DE` | Germany\n`GH` | Ghana\n`GI` | Gibraltar\n`GR` | Greece\n`GL` | Greenland\n`GD` | Grenada\n`GP` | Guadeloupe\n`GU` | Guam\n`GT` | Guatemala\n`GN` | Guinea\n`GW` | Guinea-Bissau\n`GY` | Guyana\n`HT` | Haiti\n`HM` | Heard & McDonald Islands\n`HN` | Honduras\n`HK` | Hong Kong\n`HU` | Hungary\n`IS` | Iceland\n`IM` | Isle of Man\n`IN` | India\n`ID` | Indonesia\n`IQ` | Iraq\n`IE` | Ireland\n`IR` | Islamic Republic of Iran\n`IL` | Israel\n`IT` | Italy\n`CI` | Ivory Coast\n`JM` | Jamaica\n`JP` | Japan\n`JO` | Jordan\n`KZ` | Kazakhstan\n`KE` | Kenya\n`KI` | Kiribati\n`KP` | Korea, Democratic People's Republic of\n`KR` | Korea, Republic of\n`KW` | Kuwait\n`KG` | Kyrgyzstan\n`LA` | Lao People's Democratic Republic\n`LV` | Latvia\n`LB` | Lebanon\n`LS` | Lesotho\n`LR` | Liberia\n`LY` | Libyan Arab Jamahiriya\n`LI` | Liechtenstein\n`LT` | Lithuania\n`LU` | Luxembourg\n`MO` | Macau\n`MG` | Madagascar\n`MW` | Malawi\n`MY` | Malaysia\n`MV` | Maldives\n`ML` | Mali\n`MT` | Malta\n`MH` | Marshall Islands\n`MQ` | Martinique\n`MR` | Mauritania\n`MU` | Mauritius\n`YT` | Mayotte\n`MX` | Mexico\n`FM` | Micronesia\n`MD` | Moldova, Republic of\n`MC` | Monaco\n`ME` | Montenegro\n`MN` | Mongolia\n`MS` | Monserrat\n`MA` | Morocco\n`MZ` | Mozambique\n`MM` | Myanmar\n`NA` | Namibia\n`NR` | Nauru\n`NP` | Nepal\n`NL` | Netherlands\n`AN` | Netherlands Antilles\n`NC` | New Caledonia\n`NZ` | New Zealand\n`NI` | Nicaragua\n`NE` | Niger\n`NG` | Nigeria\n`NU` | Niue\n`NF` | Norfolk Island\n`MK` | North Macedonia\n`MP` | Northern Mariana Islands\n`NO` | Norway\n`OM` | Oman\n`PK` | Pakistan\n`PW` | Palau\n`PA` | Panama\n`PG` | Papua New Guinea\n`PY` | Paraguay\n`PE` | Peru\n`PH` | Philippines\n`PN` | Pitcairn\n`PL` | Poland\n`PT` | Portugal\n`PR` | Puerto Rico\n`QA` | Qatar\n`RE` | Reunion\n`RO` | Romania\n`RU` | Russian Federation\n`RW` | Rwanda\n`LC` | Saint Lucia\n`WS` | Samoa\n`SM` | San Marino\n`ST` | Sao Tome & Principe\n`SA` | Saudi Arabia\n`SN` | Senegal\n`RS` | Serbia\n`SC` | Seychelles\n`SL` | Sierra Leone\n`SG` | Singapore\n`SK` | Slovakia\n`SI` | Slovenia\n`SB` | Solomon Islands\n`SO` | Somalia\n`ZA` | South Africa\n`GS` | South Georgia and the South Sandwich Islands\n`ES` | Spain\n`LK` | Sri Lanka\n`SH` | St. Helena\n`KN` | St. Kitts and Nevis\n`PM` | St. Pierre & Miquelon\n`VC` | St. Vincent & the Grenadines\n`SD` | Sudan\n`SR` | Suriname\n`SJ` | Svalbard & Jan Mayen Islands\n`SZ` | Swaziland\n`SE` | Sweden\n`CH` | Switzerland\n`SY` | Syrian Arab Republic\n`TW` | Taiwan, Province of China\n`TJ` | Tajikistan\n`TZ` | Tanzania, United Republic of\n`TH` | Thailand\n`TG` | Togo\n`TK` | Tokelau\n`TO` | Tonga\n`TT` | Trinidad & Tobago\n`TN` | Tunisia\n`TR` | Turkey\n`TM` | Turkmenistan\n`TC` | Turks & Caicos Islands\n`TV` | Tuvalu\n`UG` | Uganda\n`UA` | Ukraine\n`AE` | United Arab Emirates\n`GB` | United Kingdom\n`UM` | United States Minor Outlying Islands\n`VI` | United States Virgin Islands\n`ZZ` | Unknown or unspecified country\n`UY` | Uruguay\n`UZ` | Uzbekistan\n`VU` | Vanuatu\n`VA` | Vatican City State (Holy See)\n`VE` | Venezuela\n`VN` | Viet Nam\n`WF` | Wallis & Futuna Islands\n`EH` | Western Sahara\n`YE` | Yemen\n`ZM` | Zambia\n`ZW` | Zimbabwe\n</details>", "example": "US"}, "phone": {"type": "string", "description": "The primary phone number.", "example": "(555) 555-1234"}, "fax": {"type": "string", "description": "", "example": ""}, "currency_code": {"type": "string", "description": "You cannot change the currency once you have added financial transactions (e.g. issued invoices, payments sent etc) One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "currency_before_value": {"type": "boolean", "description": "If checked, currency will be displayed before the amount (e.g. $30 instead of 30$)"}, "starting_balance": {"type": "string", "description": "Fill in your business's initial capital. It will be taken into consideration in the cash flow report. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "0.00"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/organization/settings/": {"get": {"description": "Get the application settings.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}], "tags": ["organization"], "summary": "/v1.0/organization/settings/", "operationId": "organization_settings_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"contact_display_format": {"type": "string", "description": "How you want your contacts to appear in the contacts page and in all contact / client / supplier selection boxes across the application. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`f l - c` | FName LName - Company\n`l, f - c` | Lname, FName - Company\n`l f - c` | Lname FName - Company\n`c - f l` | Company - FName LName\n`c - l, f` | Company - LName, FName\n`c - l f` | Company - LName FName\n</details>", "example": "f l - c"}, "address_format": {"type": "string", "description": "The format in which your company's and your contacts' addresses will be displayed. Predefined placeholders, space characters and ',', '.', '-', '|' are allowed.", "example": "%STREET%, %CITY% %ZIP% %STATE%, %COUNTRY%"}, "calculator_mode": {"type": "string", "description": "Set how Elorus calculates values in your Estimates, Invoices, Purchases & Recurring documents. This is a default value that you can override for each document. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "draft_auto_numbering": {"type": "boolean", "description": "If enabled, Elorus will always allocate a number when creating a new document. Disable this setting if you want your new documents to receive a number only after they're issued."}, "strict_sequential_numbering": {"type": "boolean", "description": "If enabled, invoices & credit notes will only be issued if they follow a valid sequential numbering."}, "invoice_estimate": {"type": "boolean", "description": "A new draft invoice will be automatically created every time an estimate gets accepted."}, "numbering_padding": {"type": "integer", "description": "The total number of numerals in the document's number (e.g. \"005\" or \"00005\"). One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`3` | 3 digits\n`4` | 4 digits\n`5` | 5 digits\n`6` | 6 digits\n`7` | 7 digits\n`8` | 8 digits\n`9` | 9 digits\n`10` | 10 digits\n</details>"}, "negative_stock": {"type": "boolean", "description": "If you disable this option, Elorus will prevent you from invoicing products that are out of stock. The setting applies only to products / services whose stock is managed."}, "slack_notifications": {"type": "boolean", "description": "Send a slack message whenever a new notification is created."}, "is_slack_enabled": {"type": "boolean", "description": "Whether the slack integration is enabled or disabled."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update the application settings.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["draft_auto_numbering", "negative_stock"], "type": "object", "properties": {"contact_display_format": {"type": "string", "description": "How you want your contacts to appear in the contacts page and in all contact / client / supplier selection boxes across the application. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`f l - c` | FName LName - Company\n`l, f - c` | Lname, FName - Company\n`l f - c` | Lname FName - Company\n`c - f l` | Company - FName LName\n`c - l, f` | Company - LName, FName\n`c - l f` | Company - LName FName\n</details>", "example": "f l - c"}, "address_format": {"type": "string", "description": "The format in which your company's and your contacts' addresses will be displayed. Predefined placeholders, space characters and ',', '.', '-', '|' are allowed.", "example": "%STREET%, %CITY% %ZIP% %STATE%, %COUNTRY%"}, "calculator_mode": {"type": "string", "description": "Set how Elorus calculates values in your Estimates, Invoices, Purchases & Recurring documents. This is a default value that you can override for each document. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "draft_auto_numbering": {"type": "boolean", "description": "If enabled, Elorus will always allocate a number when creating a new document. Disable this setting if you want your new documents to receive a number only after they're issued."}, "strict_sequential_numbering": {"type": "boolean", "description": "If enabled, invoices & credit notes will only be issued if they follow a valid sequential numbering."}, "invoice_estimate": {"type": "boolean", "description": "A new draft invoice will be automatically created every time an estimate gets accepted."}, "numbering_padding": {"type": "integer", "description": "The total number of numerals in the document's number (e.g. \"005\" or \"00005\"). One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`3` | 3 digits\n`4` | 4 digits\n`5` | 5 digits\n`6` | 6 digits\n`7` | 7 digits\n`8` | 8 digits\n`9` | 9 digits\n`10` | 10 digits\n</details>"}, "negative_stock": {"type": "boolean", "description": "If you disable this option, Elorus will prevent you from invoicing products that are out of stock. The setting applies only to products / services whose stock is managed."}, "slack_notifications": {"type": "boolean", "description": "Send a slack message whenever a new notification is created."}}}, "name": "data", "in": "body"}], "tags": ["organization"], "summary": "/v1.0/organization/settings/", "operationId": "organization_settings_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"contact_display_format": {"type": "string", "description": "How you want your contacts to appear in the contacts page and in all contact / client / supplier selection boxes across the application. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`f l - c` | FName LName - Company\n`l, f - c` | Lname, FName - Company\n`l f - c` | Lname FName - Company\n`c - f l` | Company - FName LName\n`c - l, f` | Company - LName, FName\n`c - l f` | Company - LName FName\n</details>", "example": "f l - c"}, "address_format": {"type": "string", "description": "The format in which your company's and your contacts' addresses will be displayed. Predefined placeholders, space characters and ',', '.', '-', '|' are allowed.", "example": "%STREET%, %CITY% %ZIP% %STATE%, %COUNTRY%"}, "calculator_mode": {"type": "string", "description": "Set how Elorus calculates values in your Estimates, Invoices, Purchases & Recurring documents. This is a default value that you can override for each document. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "draft_auto_numbering": {"type": "boolean", "description": "If enabled, Elorus will always allocate a number when creating a new document. Disable this setting if you want your new documents to receive a number only after they're issued."}, "strict_sequential_numbering": {"type": "boolean", "description": "If enabled, invoices & credit notes will only be issued if they follow a valid sequential numbering."}, "invoice_estimate": {"type": "boolean", "description": "A new draft invoice will be automatically created every time an estimate gets accepted."}, "numbering_padding": {"type": "integer", "description": "The total number of numerals in the document's number (e.g. \"005\" or \"00005\"). One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`3` | 3 digits\n`4` | 4 digits\n`5` | 5 digits\n`6` | 6 digits\n`7` | 7 digits\n`8` | 8 digits\n`9` | 9 digits\n`10` | 10 digits\n</details>"}, "negative_stock": {"type": "boolean", "description": "If you disable this option, Elorus will prevent you from invoicing products that are out of stock. The setting applies only to products / services whose stock is managed."}, "slack_notifications": {"type": "boolean", "description": "Send a slack message whenever a new notification is created."}, "is_slack_enabled": {"type": "boolean", "description": "Whether the slack integration is enabled or disabled."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update the application settings.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"contact_display_format": {"type": "string", "description": "How you want your contacts to appear in the contacts page and in all contact / client / supplier selection boxes across the application. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`f l - c` | FName LName - Company\n`l, f - c` | Lname, FName - Company\n`l f - c` | Lname FName - Company\n`c - f l` | Company - FName LName\n`c - l, f` | Company - LName, FName\n`c - l f` | Company - LName FName\n</details>", "example": "f l - c"}, "address_format": {"type": "string", "description": "The format in which your company's and your contacts' addresses will be displayed. Predefined placeholders, space characters and ',', '.', '-', '|' are allowed.", "example": "%STREET%, %CITY% %ZIP% %STATE%, %COUNTRY%"}, "calculator_mode": {"type": "string", "description": "Set how Elorus calculates values in your Estimates, Invoices, Purchases & Recurring documents. This is a default value that you can override for each document. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "draft_auto_numbering": {"type": "boolean", "description": "If enabled, Elorus will always allocate a number when creating a new document. Disable this setting if you want your new documents to receive a number only after they're issued."}, "strict_sequential_numbering": {"type": "boolean", "description": "If enabled, invoices & credit notes will only be issued if they follow a valid sequential numbering."}, "invoice_estimate": {"type": "boolean", "description": "A new draft invoice will be automatically created every time an estimate gets accepted."}, "numbering_padding": {"type": "integer", "description": "The total number of numerals in the document's number (e.g. \"005\" or \"00005\"). One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`3` | 3 digits\n`4` | 4 digits\n`5` | 5 digits\n`6` | 6 digits\n`7` | 7 digits\n`8` | 8 digits\n`9` | 9 digits\n`10` | 10 digits\n</details>"}, "negative_stock": {"type": "boolean", "description": "If you disable this option, Elorus will prevent you from invoicing products that are out of stock. The setting applies only to products / services whose stock is managed."}, "slack_notifications": {"type": "boolean", "description": "Send a slack message whenever a new notification is created."}}}, "name": "data", "in": "body"}], "tags": ["organization"], "summary": "/v1.0/organization/settings/", "operationId": "organization_settings_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"contact_display_format": {"type": "string", "description": "How you want your contacts to appear in the contacts page and in all contact / client / supplier selection boxes across the application. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`f l - c` | FName LName - Company\n`l, f - c` | Lname, FName - Company\n`l f - c` | Lname FName - Company\n`c - f l` | Company - FName LName\n`c - l, f` | Company - LName, FName\n`c - l f` | Company - LName FName\n</details>", "example": "f l - c"}, "address_format": {"type": "string", "description": "The format in which your company's and your contacts' addresses will be displayed. Predefined placeholders, space characters and ',', '.', '-', '|' are allowed.", "example": "%STREET%, %CITY% %ZIP% %STATE%, %COUNTRY%"}, "calculator_mode": {"type": "string", "description": "Set how Elorus calculates values in your Estimates, Invoices, Purchases & Recurring documents. This is a default value that you can override for each document. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "draft_auto_numbering": {"type": "boolean", "description": "If enabled, Elorus will always allocate a number when creating a new document. Disable this setting if you want your new documents to receive a number only after they're issued."}, "strict_sequential_numbering": {"type": "boolean", "description": "If enabled, invoices & credit notes will only be issued if they follow a valid sequential numbering."}, "invoice_estimate": {"type": "boolean", "description": "A new draft invoice will be automatically created every time an estimate gets accepted."}, "numbering_padding": {"type": "integer", "description": "The total number of numerals in the document's number (e.g. \"005\" or \"00005\"). One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`3` | 3 digits\n`4` | 4 digits\n`5` | 5 digits\n`6` | 6 digits\n`7` | 7 digits\n`8` | 8 digits\n`9` | 9 digits\n`10` | 10 digits\n</details>"}, "negative_stock": {"type": "boolean", "description": "If you disable this option, Elorus will prevent you from invoicing products that are out of stock. The setting applies only to products / services whose stock is managed."}, "slack_notifications": {"type": "boolean", "description": "Send a slack message whenever a new notification is created."}, "is_slack_enabled": {"type": "boolean", "description": "Whether the slack integration is enabled or disabled."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/organizationroles/": {"get": {"description": "Get the list of custom roles.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `name`, `description`."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `name`. Prepend a `-` to denote reverse ordering (e.g `-name`)."}], "tags": ["organizationroles"], "summary": "/v1.0/organizationroles/", "operationId": "organizationroles_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "name": {"type": "string", "description": "The custom role name.", "example": "Sales person"}, "description": {"type": "string", "description": "Optionally, describe the purpose of the role.", "example": "Users may only view & modify invoices and credit notes."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/organizationroles/{id}/": {"get": {"description": "Get a single custom role.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["organizationroles"], "summary": "/v1.0/organizationroles/{id}/", "operationId": "organizationroles_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "name": {"type": "string", "description": "The custom role name.", "example": "Sales person"}, "description": {"type": "string", "description": "Optionally, describe the purpose of the role.", "example": "Users may only view & modify invoices and credit notes."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/outgoingcheques/": {"get": {"description": "Get the list of outgoing cheques.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `number`, `bank`, `location`, `contact__display_name`."}, {"required": false, "type": "string", "name": "status", "in": "query", "description": "Optional filter."}, {"required": false, "type": "string", "name": "bank", "in": "query", "description": "Optional filter."}, {"required": false, "type": "string", "name": "contact", "in": "query", "description": "Optionally filter by contact ID."}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "pending", "in": "query", "description": "Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "dishonoured", "in": "query", "description": "Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `issue_date`, `due_date`, `amount`, `contact__display_name`, `bank`, `status`, `location`, `number`. Prepend a `-` to denote reverse ordering (e.g `-issue_date`)."}, {"required": false, "type": "string", "name": "period_from", "in": "query", "description": "Optionally filter results from a date onwards.Must be used with the `period_to` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}, {"required": false, "type": "string", "name": "period_to", "in": "query", "description": "Optionally filter results from a date backwards.Must be used with the `period_from` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}], "tags": ["outgoingcheques"], "summary": "/v1.0/outgoingcheques/", "operationId": "outgoingcheques_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`issued` | Issued\n`expired` | Expired\n`canceled` | Canceled\n`paid` | Paid\n`bank` | In bank\n`bounced` | Bounced\n`lawyer` | In lawyer\n</details>", "example": "issued"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new outgoing cheque.\n---\nWhen adding a new outgoing cheque, the status is automatically\ninitialized. The initial status will be either 'issued' or\n'expired' based on whether the due_date is a future date or not.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["contact", "amount", "purchases"], "type": "object", "properties": {"contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "purchases": {"name": "purchases", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["8800000040088865"], "description": "A list of issued bill IDs that will be paid once the cheque is collected"}}}, "name": "data", "in": "body"}], "tags": ["outgoingcheques"], "summary": "/v1.0/outgoingcheques/", "operationId": "outgoingcheques_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`issued` | Issued\n`expired` | Expired\n`canceled` | Canceled\n`paid` | Paid\n`bank` | In bank\n`bounced` | Bounced\n`lawyer` | In lawyer\n</details>", "example": "issued"}, "purchases": {"name": "purchases", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["8800000040088865"], "description": "A list of issued bill IDs that will be paid once the cheque is collected"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/outgoingcheques/{id}/": {"get": {"description": "Get a single outgoing cheque.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["outgoingcheques"], "summary": "/v1.0/outgoingcheques/{id}/", "operationId": "outgoingcheques_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`issued` | Issued\n`expired` | Expired\n`canceled` | Canceled\n`paid` | Paid\n`bank` | In bank\n`bounced` | Bounced\n`lawyer` | In lawyer\n</details>", "example": "issued"}, "purchases": {"name": "purchases", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["8800000040088865"], "description": "A list of issued bill IDs that will be paid once the cheque is collected"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update an outgoing cheque.\n---\nIf the cheque is paid, you may not change the amount or\ncontact, nor the associated bills.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["contact", "amount", "purchases"], "type": "object", "properties": {"contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`issued` | Issued\n`expired` | Expired\n`canceled` | Canceled\n`paid` | Paid\n`bank` | In bank\n`bounced` | Bounced\n`lawyer` | In lawyer\n</details>", "example": "issued"}, "purchases": {"name": "purchases", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["8800000040088865"], "description": "A list of issued bill IDs that will be paid once the cheque is collected"}}}, "name": "data", "in": "body"}], "tags": ["outgoingcheques"], "summary": "/v1.0/outgoingcheques/{id}/", "operationId": "outgoingcheques_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`issued` | Issued\n`expired` | Expired\n`canceled` | Canceled\n`paid` | Paid\n`bank` | In bank\n`bounced` | Bounced\n`lawyer` | In lawyer\n</details>", "example": "issued"}, "purchases": {"name": "purchases", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["8800000040088865"], "description": "A list of issued bill IDs that will be paid once the cheque is collected"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update an outgoing cheque.\n---\nThe only difference between full & partial update is that the latter\nwill treat all parameters as optional. Any missing parameter will\nresult in keeping the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`issued` | Issued\n`expired` | Expired\n`canceled` | Canceled\n`paid` | Paid\n`bank` | In bank\n`bounced` | Bounced\n`lawyer` | In lawyer\n</details>", "example": "issued"}, "purchases": {"name": "purchases", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["8800000040088865"], "description": "A list of issued bill IDs that will be paid once the cheque is collected"}}}, "name": "data", "in": "body"}], "tags": ["outgoingcheques"], "summary": "/v1.0/outgoingcheques/{id}/", "operationId": "outgoingcheques_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1500.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "issue_date": {"type": "string", "description": "When was the cheque actually issued. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "The cheque's expiration date (post-dated cheque). Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "number": {"type": "string", "description": "", "example": "CH #1"}, "bank": {"type": "string", "description": "", "example": "Barclays"}, "location": {"type": "string", "description": "", "example": "London, UK"}, "status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`issued` | Issued\n`expired` | Expired\n`canceled` | Canceled\n`paid` | Paid\n`bank` | In bank\n`bounced` | Bounced\n`lawyer` | In lawyer\n</details>", "example": "issued"}, "purchases": {"name": "purchases", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["8800000040088865"], "description": "A list of issued bill IDs that will be paid once the cheque is collected"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete an incoming cheque.\n---\nYou may not delete paid cheques, unless you delete the\nrelated payments first.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["outgoingcheques"], "summary": "/v1.0/outgoingcheques/{id}/", "operationId": "outgoingcheques_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/paymentgateways/": {"get": {"description": "Get the list of payment gateways.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `title`."}, {"required": false, "type": "string", "name": "backend", "in": "query", "description": "Optional filter."}, {"required": false, "type": "string", "name": "active", "in": "query", "description": "Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "default", "in": "query", "description": "Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `title`, `default`, `active`. Prepend a `-` to denote reverse ordering (e.g `-title`)."}], "tags": ["paymentgateways"], "summary": "/v1.0/paymentgateways/", "operationId": "paymentgateways_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Elorus allows you to store multiple accounts of the same provider. This title is for internal use, to help you identify each payment gateway.", "example": "My Paypal account"}, "backend": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`stripe` | Stripe\n`paypal` | PayPal\n`braintree` | Braintree\n`authorizenet` | Authorize.net\n`2checkout` | 2Checkout\n`vivaredirect` | VivaWallet\n`vivapos` | VivaWallet POS\n`razorpay` | Razorpay\n</details>", "example": "paypal"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "default": {"type": "boolean", "description": "If set, the gateway will be available as a default payment option in your new commercial documents."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/products/": {"get": {"description": "Get the list of products / services.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `title`, `description`, `code`."}, {"required": false, "type": "string", "name": "sales", "in": "query", "description": "Optionally filter by sales status. Use `1` to retrieve items that can be sold and `0` to retrieve items that cannot be sold."}, {"required": false, "type": "string", "name": "purchases", "in": "query", "description": "Optionally filter by purchase status. Use `1` to retrieve items that can be purchased and `0` to retrieve items that cannot be purchased."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `title`, `sales`, `sale_value`, `purchases`, `purchase_value`, `manage`, `stock`, `code`. Prepend a `-` to denote reverse ordering (e.g `-title`)."}], "tags": ["products"], "summary": "/v1.0/products/", "operationId": "products_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The product title.", "example": "Pair of socks"}, "code": {"type": "string", "description": "Optional product code, up to 40 characters.", "example": "PS-1"}, "description": {"type": "string", "description": "Optional product description.", "example": "Super-cool expensive socks!"}, "sales": {"type": "boolean", "description": "Indicates if you sale this item or not."}, "sale_value": {"type": "string", "description": "Default unit sale value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "purchases": {"type": "boolean", "description": "Indicates if you purchase this item or not."}, "purchase_value": {"type": "string", "description": "Default unit purchase value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "30.00"}, "manage": {"type": "boolean", "description": "Whether Elorus should manage the product's stock."}, "stock": {"type": "string", "description": "Automatically calculated stock. Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "13.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new product / service.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["title"], "type": "object", "properties": {"title": {"type": "string", "description": "The product title.", "example": "Pair of socks"}, "code": {"type": "string", "description": "Optional product code, up to 40 characters.", "example": "PS-1"}, "description": {"type": "string", "description": "Optional product description.", "example": "Super-cool expensive socks!"}, "sales": {"type": "boolean", "description": "Indicates if you sale this item or not."}, "sale_value": {"type": "string", "description": "Default unit sale value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "sale_taxes": {"name": "sale_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of tax IDs that should apply by default when selling the item."}, "purchases": {"type": "boolean", "description": "Indicates if you purchase this item or not."}, "purchase_value": {"type": "string", "description": "Default unit purchase value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "30.00"}, "purchase_taxes": {"name": "purchase_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of tax IDs that should apply by default when purchasing the item."}, "manage": {"type": "boolean", "description": "Whether Elorus should manage the product's stock."}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["products"], "summary": "/v1.0/products/", "operationId": "products_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The product title.", "example": "Pair of socks"}, "code": {"type": "string", "description": "Optional product code, up to 40 characters.", "example": "PS-1"}, "description": {"type": "string", "description": "Optional product description.", "example": "Super-cool expensive socks!"}, "sales": {"type": "boolean", "description": "Indicates if you sale this item or not."}, "sale_value": {"type": "string", "description": "Default unit sale value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "sale_taxes": {"name": "sale_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of tax IDs that should apply by default when selling the item."}, "purchases": {"type": "boolean", "description": "Indicates if you purchase this item or not."}, "purchase_value": {"type": "string", "description": "Default unit purchase value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "30.00"}, "purchase_taxes": {"name": "purchase_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of tax IDs that should apply by default when purchasing the item."}, "manage": {"type": "boolean", "description": "Whether Elorus should manage the product's stock."}, "stock": {"type": "string", "description": "Automatically calculated stock. Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "13.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/products/{id}/": {"get": {"description": "Get a single product / service.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["products"], "summary": "/v1.0/products/{id}/", "operationId": "products_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The product title.", "example": "Pair of socks"}, "code": {"type": "string", "description": "Optional product code, up to 40 characters.", "example": "PS-1"}, "description": {"type": "string", "description": "Optional product description.", "example": "Super-cool expensive socks!"}, "sales": {"type": "boolean", "description": "Indicates if you sale this item or not."}, "sale_value": {"type": "string", "description": "Default unit sale value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "sale_taxes": {"name": "sale_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of tax IDs that should apply by default when selling the item."}, "purchases": {"type": "boolean", "description": "Indicates if you purchase this item or not."}, "purchase_value": {"type": "string", "description": "Default unit purchase value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "30.00"}, "purchase_taxes": {"name": "purchase_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of tax IDs that should apply by default when purchasing the item."}, "manage": {"type": "boolean", "description": "Whether Elorus should manage the product's stock."}, "stock": {"type": "string", "description": "Automatically calculated stock. Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "13.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a product / service.\n---\nYou must provide at least all the required fields for the record to be\nsuccessfully updated. Omit any optional parameter to\nkeep the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["title"], "type": "object", "properties": {"title": {"type": "string", "description": "The product title.", "example": "Pair of socks"}, "code": {"type": "string", "description": "Optional product code, up to 40 characters.", "example": "PS-1"}, "description": {"type": "string", "description": "Optional product description.", "example": "Super-cool expensive socks!"}, "sales": {"type": "boolean", "description": "Indicates if you sale this item or not."}, "sale_value": {"type": "string", "description": "Default unit sale value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "sale_taxes": {"name": "sale_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of tax IDs that should apply by default when selling the item."}, "purchases": {"type": "boolean", "description": "Indicates if you purchase this item or not."}, "purchase_value": {"type": "string", "description": "Default unit purchase value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "30.00"}, "purchase_taxes": {"name": "purchase_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of tax IDs that should apply by default when purchasing the item."}, "manage": {"type": "boolean", "description": "Whether Elorus should manage the product's stock."}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["products"], "summary": "/v1.0/products/{id}/", "operationId": "products_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The product title.", "example": "Pair of socks"}, "code": {"type": "string", "description": "Optional product code, up to 40 characters.", "example": "PS-1"}, "description": {"type": "string", "description": "Optional product description.", "example": "Super-cool expensive socks!"}, "sales": {"type": "boolean", "description": "Indicates if you sale this item or not."}, "sale_value": {"type": "string", "description": "Default unit sale value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "sale_taxes": {"name": "sale_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of tax IDs that should apply by default when selling the item."}, "purchases": {"type": "boolean", "description": "Indicates if you purchase this item or not."}, "purchase_value": {"type": "string", "description": "Default unit purchase value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "30.00"}, "purchase_taxes": {"name": "purchase_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of tax IDs that should apply by default when purchasing the item."}, "manage": {"type": "boolean", "description": "Whether Elorus should manage the product's stock."}, "stock": {"type": "string", "description": "Automatically calculated stock. Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "13.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a product / service.\n---\nThe only difference between the\n[full update](#operation/products_update) and partial update\nendpoints, is that the latter will treat all parameters as optional.\nOmit any parameter to keep the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"title": {"type": "string", "description": "The product title.", "example": "Pair of socks"}, "code": {"type": "string", "description": "Optional product code, up to 40 characters.", "example": "PS-1"}, "description": {"type": "string", "description": "Optional product description.", "example": "Super-cool expensive socks!"}, "sales": {"type": "boolean", "description": "Indicates if you sale this item or not."}, "sale_value": {"type": "string", "description": "Default unit sale value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "sale_taxes": {"name": "sale_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of tax IDs that should apply by default when selling the item."}, "purchases": {"type": "boolean", "description": "Indicates if you purchase this item or not."}, "purchase_value": {"type": "string", "description": "Default unit purchase value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "30.00"}, "purchase_taxes": {"name": "purchase_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of tax IDs that should apply by default when purchasing the item."}, "manage": {"type": "boolean", "description": "Whether Elorus should manage the product's stock."}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["products"], "summary": "/v1.0/products/{id}/", "operationId": "products_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The product title.", "example": "Pair of socks"}, "code": {"type": "string", "description": "Optional product code, up to 40 characters.", "example": "PS-1"}, "description": {"type": "string", "description": "Optional product description.", "example": "Super-cool expensive socks!"}, "sales": {"type": "boolean", "description": "Indicates if you sale this item or not."}, "sale_value": {"type": "string", "description": "Default unit sale value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "sale_taxes": {"name": "sale_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of tax IDs that should apply by default when selling the item."}, "purchases": {"type": "boolean", "description": "Indicates if you purchase this item or not."}, "purchase_value": {"type": "string", "description": "Default unit purchase value (this is not currency-agnostic). Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "30.00"}, "purchase_taxes": {"name": "purchase_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of tax IDs that should apply by default when purchasing the item."}, "manage": {"type": "boolean", "description": "Whether Elorus should manage the product's stock."}, "stock": {"type": "string", "description": "Automatically calculated stock. Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "13.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a product / service.\n---\nIf you delete a product that is associated with an invoice line,\nthe invoice will be decoupled from the product.\nOther than that, the invoice line will be left\nintact and the product will be successfully deleted.\n\nThe same goes for any bills, credit notes etc. associated with\nthe product.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["products"], "summary": "/v1.0/products/{id}/", "operationId": "products_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/products/{id}/stock-history/": {"get": {"description": "Get the product / service stock history.\n---\nThis endpoint returns the complete list of stock\nchanges for the specified product / service. Each record\nin the response corresponds to an invoice, credit note,\npurchase invoice, purchase credit note or stock adjustment\nthat the product has been associated with.\n\nThe endpoint applies only to products with enabled stock management.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}], "tags": ["products"], "summary": "/v1.0/products/{id}/stock-history/", "operationId": "products_stock_history", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"product": {"type": "string", "description": "", "example": "9900000040000600"}, "record_id": {"type": "string", "description": "ID of the associated record.", "example": "6600000040000957"}, "record_type": {"type": "string", "description": "Type of the associated record. Can be either `invoice`, `creditnote`, `purchase`, `purchasecreditnote` or `stockadjustment`.", "example": "invoice"}, "representation": {"type": "string", "description": "Representation of the associated record as string.", "example": "Invoice #1"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "stock": {"type": "string", "description": "The stock change. Decimal rendered as string, with the `.` character used as a floating point. ", "example": "-2.00"}, "notes": {"type": "string", "description": "", "example": "Some notes"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/profile/": {"get": {"description": "Get user profile.\n---", "parameters": [{"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}], "tags": ["profile"], "summary": "/v1.0/profile/", "operationId": "profile_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"email": {"type": "string", "description": "When changing your email address, a new verification code will be sent to the new email address. You should verify the address within 10 days, otherwise your account will be suspended without any further notice."}, "first_name": {"type": "string", "description": "", "example": "John"}, "last_name": {"type": "string", "description": "", "example": "Doe"}, "phone_number": {"type": "string", "description": "", "example": "662-222-2222"}, "date_joined": {"type": "string", "description": " Timezone information is included.", "example": "2018-09-28T13:48:56.504916Z"}, "timezone": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`Africa/Abidjan` | Africa/Abidjan\n`Africa/Accra` | Africa/Accra\n`Africa/Addis_Ababa` | Africa/Addis_Ababa\n`Africa/Algiers` | Africa/Algiers\n`Africa/Asmara` | Africa/Asmara\n`Africa/Bamako` | Africa/Bamako\n`Africa/Bangui` | Africa/Bangui\n`Africa/Banjul` | Africa/Banjul\n`Africa/Bissau` | Africa/Bissau\n`Africa/Blantyre` | Africa/Blantyre\n`Africa/Brazzaville` | Africa/Brazzaville\n`Africa/Bujumbura` | Africa/Bujumbura\n`Africa/Cairo` | Africa/Cairo\n`Africa/Casablanca` | Africa/Casablanca\n`Africa/Ceuta` | Africa/Ceuta\n`Africa/Conakry` | Africa/Conakry\n`Africa/Dakar` | Africa/Dakar\n`Africa/Dar_es_Salaam` | Africa/Dar_es_Salaam\n`Africa/Djibouti` | Africa/Djibouti\n`Africa/Douala` | Africa/Douala\n`Africa/El_Aaiun` | Africa/El_Aaiun\n`Africa/Freetown` | Africa/Freetown\n`Africa/Gaborone` | Africa/Gaborone\n`Africa/Harare` | Africa/Harare\n`Africa/Johannesburg` | Africa/Johannesburg\n`Africa/Juba` | Africa/Juba\n`Africa/Kampala` | Africa/Kampala\n`Africa/Khartoum` | Africa/Khartoum\n`Africa/Kigali` | Africa/Kigali\n`Africa/Kinshasa` | Africa/Kinshasa\n`Africa/Lagos` | Africa/Lagos\n`Africa/Libreville` | Africa/Libreville\n`Africa/Lome` | Africa/Lome\n`Africa/Luanda` | Africa/Luanda\n`Africa/Lubumbashi` | Africa/Lubumbashi\n`Africa/Lusaka` | Africa/Lusaka\n`Africa/Malabo` | Africa/Malabo\n`Africa/Maputo` | Africa/Maputo\n`Africa/Maseru` | Africa/Maseru\n`Africa/Mbabane` | Africa/Mbabane\n`Africa/Mogadishu` | Africa/Mogadishu\n`Africa/Monrovia` | Africa/Monrovia\n`Africa/Nairobi` | Africa/Nairobi\n`Africa/Ndjamena` | Africa/Ndjamena\n`Africa/Niamey` | Africa/Niamey\n`Africa/Nouakchott` | Africa/Nouakchott\n`Africa/Ouagadougou` | Africa/Ouagadougou\n`Africa/Porto-Novo` | Africa/Porto-Novo\n`Africa/Sao_Tome` | Africa/Sao_Tome\n`Africa/Tripoli` | Africa/Tripoli\n`Africa/Tunis` | Africa/Tunis\n`Africa/Windhoek` | Africa/Windhoek\n`America/Adak` | America/Adak\n`America/Anchorage` | America/Anchorage\n`America/Anguilla` | America/Anguilla\n`America/Antigua` | America/Antigua\n`America/Araguaina` | America/Araguaina\n`America/Argentina/Buenos_Aires` | America/Argentina/Buenos_Aires\n`America/Argentina/Catamarca` | America/Argentina/Catamarca\n`America/Argentina/Cordoba` | America/Argentina/Cordoba\n`America/Argentina/Jujuy` | America/Argentina/Jujuy\n`America/Argentina/La_Rioja` | America/Argentina/La_Rioja\n`America/Argentina/Mendoza` | America/Argentina/Mendoza\n`America/Argentina/Rio_Gallegos` | America/Argentina/Rio_Gallegos\n`America/Argentina/Salta` | America/Argentina/Salta\n`America/Argentina/San_Juan` | America/Argentina/San_Juan\n`America/Argentina/San_Luis` | America/Argentina/San_Luis\n`America/Argentina/Tucuman` | America/Argentina/Tucuman\n`America/Argentina/Ushuaia` | America/Argentina/Ushuaia\n`America/Aruba` | America/Aruba\n`America/Asuncion` | America/Asuncion\n`America/Atikokan` | America/Atikokan\n`America/Bahia` | America/Bahia\n`America/Bahia_Banderas` | America/Bahia_Banderas\n`America/Barbados` | America/Barbados\n`America/Belem` | America/Belem\n`America/Belize` | America/Belize\n`America/Blanc-Sablon` | America/Blanc-Sablon\n`America/Boa_Vista` | America/Boa_Vista\n`America/Bogota` | America/Bogota\n`America/Boise` | America/Boise\n`America/Cambridge_Bay` | America/Cambridge_Bay\n`America/Campo_Grande` | America/Campo_Grande\n`America/Cancun` | America/Cancun\n`America/Caracas` | America/Caracas\n`America/Cayenne` | America/Cayenne\n`America/Cayman` | America/Cayman\n`America/Chicago` | America/Chicago\n`America/Chihuahua` | America/Chihuahua\n`America/Costa_Rica` | America/Costa_Rica\n`America/Creston` | America/Creston\n`America/Cuiaba` | America/Cuiaba\n`America/Curacao` | America/Curacao\n`America/Danmarkshavn` | America/Danmarkshavn\n`America/Dawson` | America/Dawson\n`America/Dawson_Creek` | America/Dawson_Creek\n`America/Denver` | America/Denver\n`America/Detroit` | America/Detroit\n`America/Dominica` | America/Dominica\n`America/Edmonton` | America/Edmonton\n`America/Eirunepe` | America/Eirunepe\n`America/El_Salvador` | America/El_Salvador\n`America/Fortaleza` | America/Fortaleza\n`America/Glace_Bay` | America/Glace_Bay\n`America/Godthab` | America/Godthab\n`America/Goose_Bay` | America/Goose_Bay\n`America/Grand_Turk` | America/Grand_Turk\n`America/Grenada` | America/Grenada\n`America/Guadeloupe` | America/Guadeloupe\n`America/Guatemala` | America/Guatemala\n`America/Guayaquil` | America/Guayaquil\n`America/Guyana` | America/Guyana\n`America/Halifax` | America/Halifax\n`America/Havana` | America/Havana\n`America/Hermosillo` | America/Hermosillo\n`America/Indiana/Indianapolis` | America/Indiana/Indianapolis\n`America/Indiana/Knox` | America/Indiana/Knox\n`America/Indiana/Marengo` | America/Indiana/Marengo\n`America/Indiana/Petersburg` | America/Indiana/Petersburg\n`America/Indiana/Tell_City` | America/Indiana/Tell_City\n`America/Indiana/Vevay` | America/Indiana/Vevay\n`America/Indiana/Vincennes` | America/Indiana/Vincennes\n`America/Indiana/Winamac` | America/Indiana/Winamac\n`America/Inuvik` | America/Inuvik\n`America/Iqaluit` | America/Iqaluit\n`America/Jamaica` | America/Jamaica\n`America/Juneau` | America/Juneau\n`America/Kentucky/Louisville` | America/Kentucky/Louisville\n`America/Kentucky/Monticello` | America/Kentucky/Monticello\n`America/Kralendijk` | America/Kralendijk\n`America/La_Paz` | America/La_Paz\n`America/Lima` | America/Lima\n`America/Los_Angeles` | America/Los_Angeles\n`America/Lower_Princes` | America/Lower_Princes\n`America/Maceio` | America/Maceio\n`America/Managua` | America/Managua\n`America/Manaus` | America/Manaus\n`America/Marigot` | America/Marigot\n`America/Martinique` | America/Martinique\n`America/Matamoros` | America/Matamoros\n`America/Mazatlan` | America/Mazatlan\n`America/Menominee` | America/Menominee\n`America/Merida` | America/Merida\n`America/Metlakatla` | America/Metlakatla\n`America/Mexico_City` | America/Mexico_City\n`America/Miquelon` | America/Miquelon\n`America/Moncton` | America/Moncton\n`America/Monterrey` | America/Monterrey\n`America/Montevideo` | America/Montevideo\n`America/Montreal` | America/Montreal\n`America/Montserrat` | America/Montserrat\n`America/Nassau` | America/Nassau\n`America/New_York` | America/New_York\n`America/Nipigon` | America/Nipigon\n`America/Nome` | America/Nome\n`America/Noronha` | America/Noronha\n`America/North_Dakota/Beulah` | America/North_Dakota/Beulah\n`America/North_Dakota/Center` | America/North_Dakota/Center\n`America/North_Dakota/New_Salem` | America/North_Dakota/New_Salem\n`America/Ojinaga` | America/Ojinaga\n`America/Panama` | America/Panama\n`America/Pangnirtung` | America/Pangnirtung\n`America/Paramaribo` | America/Paramaribo\n`America/Phoenix` | America/Phoenix\n`America/Port-au-Prince` | America/Port-au-Prince\n`America/Port_of_Spain` | America/Port_of_Spain\n`America/Porto_Velho` | America/Porto_Velho\n`America/Puerto_Rico` | America/Puerto_Rico\n`America/Rainy_River` | America/Rainy_River\n`America/Rankin_Inlet` | America/Rankin_Inlet\n`America/Recife` | America/Recife\n`America/Regina` | America/Regina\n`America/Resolute` | America/Resolute\n`America/Rio_Branco` | America/Rio_Branco\n`America/Santa_Isabel` | America/Santa_Isabel\n`America/Santarem` | America/Santarem\n`America/Santiago` | America/Santiago\n`America/Santo_Domingo` | America/Santo_Domingo\n`America/Sao_Paulo` | America/Sao_Paulo\n`America/Scoresbysund` | America/Scoresbysund\n`America/Sitka` | America/Sitka\n`America/St_Barthelemy` | America/St_Barthelemy\n`America/St_Johns` | America/St_Johns\n`America/St_Kitts` | America/St_Kitts\n`America/St_Lucia` | America/St_Lucia\n`America/St_Thomas` | America/St_Thomas\n`America/St_Vincent` | America/St_Vincent\n`America/Swift_Current` | America/Swift_Current\n`America/Tegucigalpa` | America/Tegucigalpa\n`America/Thule` | America/Thule\n`America/Thunder_Bay` | America/Thunder_Bay\n`America/Tijuana` | America/Tijuana\n`America/Toronto` | America/Toronto\n`America/Tortola` | America/Tortola\n`America/Vancouver` | America/Vancouver\n`America/Whitehorse` | America/Whitehorse\n`America/Winnipeg` | America/Winnipeg\n`America/Yakutat` | America/Yakutat\n`America/Yellowknife` | America/Yellowknife\n`Antarctica/Casey` | Antarctica/Casey\n`Antarctica/Davis` | Antarctica/Davis\n`Antarctica/DumontDUrville` | Antarctica/DumontDUrville\n`Antarctica/Macquarie` | Antarctica/Macquarie\n`Antarctica/Mawson` | Antarctica/Mawson\n`Antarctica/McMurdo` | Antarctica/McMurdo\n`Antarctica/Palmer` | Antarctica/Palmer\n`Antarctica/Rothera` | Antarctica/Rothera\n`Antarctica/Syowa` | Antarctica/Syowa\n`Antarctica/Troll` | Antarctica/Troll\n`Antarctica/Vostok` | Antarctica/Vostok\n`Arctic/Longyearbyen` | Arctic/Longyearbyen\n`Asia/Aden` | Asia/Aden\n`Asia/Almaty` | Asia/Almaty\n`Asia/Amman` | Asia/Amman\n`Asia/Anadyr` | Asia/Anadyr\n`Asia/Aqtau` | Asia/Aqtau\n`Asia/Aqtobe` | Asia/Aqtobe\n`Asia/Ashgabat` | Asia/Ashgabat\n`Asia/Baghdad` | Asia/Baghdad\n`Asia/Bahrain` | Asia/Bahrain\n`Asia/Baku` | Asia/Baku\n`Asia/Bangkok` | Asia/Bangkok\n`Asia/Beirut` | Asia/Beirut\n`Asia/Bishkek` | Asia/Bishkek\n`Asia/Brunei` | Asia/Brunei\n`Asia/Chita` | Asia/Chita\n`Asia/Choibalsan` | Asia/Choibalsan\n`Asia/Colombo` | Asia/Colombo\n`Asia/Damascus` | Asia/Damascus\n`Asia/Dhaka` | Asia/Dhaka\n`Asia/Dili` | Asia/Dili\n`Asia/Dubai` | Asia/Dubai\n`Asia/Dushanbe` | Asia/Dushanbe\n`Asia/Gaza` | Asia/Gaza\n`Asia/Hebron` | Asia/Hebron\n`Asia/Ho_Chi_Minh` | Asia/Ho_Chi_Minh\n`Asia/Hong_Kong` | Asia/Hong_Kong\n`Asia/Hovd` | Asia/Hovd\n`Asia/Irkutsk` | Asia/Irkutsk\n`Asia/Jakarta` | Asia/Jakarta\n`Asia/Jayapura` | Asia/Jayapura\n`Asia/Jerusalem` | Asia/Jerusalem\n`Asia/Kabul` | Asia/Kabul\n`Asia/Kamchatka` | Asia/Kamchatka\n`Asia/Karachi` | Asia/Karachi\n`Asia/Kathmandu` | Asia/Kathmandu\n`Asia/Khandyga` | Asia/Khandyga\n`Asia/Kolkata` | Asia/Kolkata\n`Asia/Krasnoyarsk` | Asia/Krasnoyarsk\n`Asia/Kuala_Lumpur` | Asia/Kuala_Lumpur\n`Asia/Kuching` | Asia/Kuching\n`Asia/Kuwait` | Asia/Kuwait\n`Asia/Macau` | Asia/Macau\n`Asia/Magadan` | Asia/Magadan\n`Asia/Makassar` | Asia/Makassar\n`Asia/Manila` | Asia/Manila\n`Asia/Muscat` | Asia/Muscat\n`Asia/Nicosia` | Asia/Nicosia\n`Asia/Novokuznetsk` | Asia/Novokuznetsk\n`Asia/Novosibirsk` | Asia/Novosibirsk\n`Asia/Omsk` | Asia/Omsk\n`Asia/Oral` | Asia/Oral\n`Asia/Phnom_Penh` | Asia/Phnom_Penh\n`Asia/Pontianak` | Asia/Pontianak\n`Asia/Pyongyang` | Asia/Pyongyang\n`Asia/Qatar` | Asia/Qatar\n`Asia/Qyzylorda` | Asia/Qyzylorda\n`Asia/Rangoon` | Asia/Rangoon\n`Asia/Riyadh` | Asia/Riyadh\n`Asia/Sakhalin` | Asia/Sakhalin\n`Asia/Samarkand` | Asia/Samarkand\n`Asia/Seoul` | Asia/Seoul\n`Asia/Shanghai` | Asia/Shanghai\n`Asia/Singapore` | Asia/Singapore\n`Asia/Srednekolymsk` | Asia/Srednekolymsk\n`Asia/Taipei` | Asia/Taipei\n`Asia/Tashkent` | Asia/Tashkent\n`Asia/Tbilisi` | Asia/Tbilisi\n`Asia/Tehran` | Asia/Tehran\n`Asia/Thimphu` | Asia/Thimphu\n`Asia/Tokyo` | Asia/Tokyo\n`Asia/Ulaanbaatar` | Asia/Ulaanbaatar\n`Asia/Urumqi` | Asia/Urumqi\n`Asia/Ust-Nera` | Asia/Ust-Nera\n`Asia/Vientiane` | Asia/Vientiane\n`Asia/Vladivostok` | Asia/Vladivostok\n`Asia/Yakutsk` | Asia/Yakutsk\n`Asia/Yekaterinburg` | Asia/Yekaterinburg\n`Asia/Yerevan` | Asia/Yerevan\n`Atlantic/Azores` | Atlantic/Azores\n`Atlantic/Bermuda` | Atlantic/Bermuda\n`Atlantic/Canary` | Atlantic/Canary\n`Atlantic/Cape_Verde` | Atlantic/Cape_Verde\n`Atlantic/Faroe` | Atlantic/Faroe\n`Atlantic/Madeira` | Atlantic/Madeira\n`Atlantic/Reykjavik` | Atlantic/Reykjavik\n`Atlantic/South_Georgia` | Atlantic/South_Georgia\n`Atlantic/St_Helena` | Atlantic/St_Helena\n`Atlantic/Stanley` | Atlantic/Stanley\n`Australia/Adelaide` | Australia/Adelaide\n`Australia/Brisbane` | Australia/Brisbane\n`Australia/Broken_Hill` | Australia/Broken_Hill\n`Australia/Currie` | Australia/Currie\n`Australia/Darwin` | Australia/Darwin\n`Australia/Eucla` | Australia/Eucla\n`Australia/Hobart` | Australia/Hobart\n`Australia/Lindeman` | Australia/Lindeman\n`Australia/Lord_Howe` | Australia/Lord_Howe\n`Australia/Melbourne` | Australia/Melbourne\n`Australia/Perth` | Australia/Perth\n`Australia/Sydney` | Australia/Sydney\n`Canada/Atlantic` | Canada/Atlantic\n`Canada/Central` | Canada/Central\n`Canada/Eastern` | Canada/Eastern\n`Canada/Mountain` | Canada/Mountain\n`Canada/Newfoundland` | Canada/Newfoundland\n`Canada/Pacific` | Canada/Pacific\n`Europe/Amsterdam` | Europe/Amsterdam\n`Europe/Andorra` | Europe/Andorra\n`Europe/Athens` | Europe/Athens\n`Europe/Belgrade` | Europe/Belgrade\n`Europe/Berlin` | Europe/Berlin\n`Europe/Bratislava` | Europe/Bratislava\n`Europe/Brussels` | Europe/Brussels\n`Europe/Bucharest` | Europe/Bucharest\n`Europe/Budapest` | Europe/Budapest\n`Europe/Busingen` | Europe/Busingen\n`Europe/Chisinau` | Europe/Chisinau\n`Europe/Copenhagen` | Europe/Copenhagen\n`Europe/Dublin` | Europe/Dublin\n`Europe/Gibraltar` | Europe/Gibraltar\n`Europe/Guernsey` | Europe/Guernsey\n`Europe/Helsinki` | Europe/Helsinki\n`Europe/Isle_of_Man` | Europe/Isle_of_Man\n`Europe/Istanbul` | Europe/Istanbul\n`Europe/Jersey` | Europe/Jersey\n`Europe/Kaliningrad` | Europe/Kaliningrad\n`Europe/Kiev` | Europe/Kiev\n`Europe/Lisbon` | Europe/Lisbon\n`Europe/Ljubljana` | Europe/Ljubljana\n`Europe/London` | Europe/London\n`Europe/Luxembourg` | Europe/Luxembourg\n`Europe/Madrid` | Europe/Madrid\n`Europe/Malta` | Europe/Malta\n`Europe/Mariehamn` | Europe/Mariehamn\n`Europe/Minsk` | Europe/Minsk\n`Europe/Monaco` | Europe/Monaco\n`Europe/Moscow` | Europe/Moscow\n`Europe/Oslo` | Europe/Oslo\n`Europe/Paris` | Europe/Paris\n`Europe/Podgorica` | Europe/Podgorica\n`Europe/Prague` | Europe/Prague\n`Europe/Riga` | Europe/Riga\n`Europe/Rome` | Europe/Rome\n`Europe/Samara` | Europe/Samara\n`Europe/San_Marino` | Europe/San_Marino\n`Europe/Sarajevo` | Europe/Sarajevo\n`Europe/Simferopol` | Europe/Simferopol\n`Europe/Skopje` | Europe/Skopje\n`Europe/Sofia` | Europe/Sofia\n`Europe/Stockholm` | Europe/Stockholm\n`Europe/Tallinn` | Europe/Tallinn\n`Europe/Tirane` | Europe/Tirane\n`Europe/Uzhgorod` | Europe/Uzhgorod\n`Europe/Vaduz` | Europe/Vaduz\n`Europe/Vatican` | Europe/Vatican\n`Europe/Vienna` | Europe/Vienna\n`Europe/Vilnius` | Europe/Vilnius\n`Europe/Volgograd` | Europe/Volgograd\n`Europe/Warsaw` | Europe/Warsaw\n`Europe/Zagreb` | Europe/Zagreb\n`Europe/Zaporozhye` | Europe/Zaporozhye\n`Europe/Zurich` | Europe/Zurich\n`GMT` | GMT\n`Indian/Antananarivo` | Indian/Antananarivo\n`Indian/Chagos` | Indian/Chagos\n`Indian/Christmas` | Indian/Christmas\n`Indian/Cocos` | Indian/Cocos\n`Indian/Comoro` | Indian/Comoro\n`Indian/Kerguelen` | Indian/Kerguelen\n`Indian/Mahe` | Indian/Mahe\n`Indian/Maldives` | Indian/Maldives\n`Indian/Mauritius` | Indian/Mauritius\n`Indian/Mayotte` | Indian/Mayotte\n`Indian/Reunion` | Indian/Reunion\n`Pacific/Apia` | Pacific/Apia\n`Pacific/Auckland` | Pacific/Auckland\n`Pacific/Bougainville` | Pacific/Bougainville\n`Pacific/Chatham` | Pacific/Chatham\n`Pacific/Chuuk` | Pacific/Chuuk\n`Pacific/Easter` | Pacific/Easter\n`Pacific/Efate` | Pacific/Efate\n`Pacific/Enderbury` | Pacific/Enderbury\n`Pacific/Fakaofo` | Pacific/Fakaofo\n`Pacific/Fiji` | Pacific/Fiji\n`Pacific/Funafuti` | Pacific/Funafuti\n`Pacific/Galapagos` | Pacific/Galapagos\n`Pacific/Gambier` | Pacific/Gambier\n`Pacific/Guadalcanal` | Pacific/Guadalcanal\n`Pacific/Guam` | Pacific/Guam\n`Pacific/Honolulu` | Pacific/Honolulu\n`Pacific/Johnston` | Pacific/Johnston\n`Pacific/Kiritimati` | Pacific/Kiritimati\n`Pacific/Kosrae` | Pacific/Kosrae\n`Pacific/Kwajalein` | Pacific/Kwajalein\n`Pacific/Majuro` | Pacific/Majuro\n`Pacific/Marquesas` | Pacific/Marquesas\n`Pacific/Midway` | Pacific/Midway\n`Pacific/Nauru` | Pacific/Nauru\n`Pacific/Niue` | Pacific/Niue\n`Pacific/Norfolk` | Pacific/Norfolk\n`Pacific/Noumea` | Pacific/Noumea\n`Pacific/Pago_Pago` | Pacific/Pago_Pago\n`Pacific/Palau` | Pacific/Palau\n`Pacific/Pitcairn` | Pacific/Pitcairn\n`Pacific/Pohnpei` | Pacific/Pohnpei\n`Pacific/Port_Moresby` | Pacific/Port_Moresby\n`Pacific/Rarotonga` | Pacific/Rarotonga\n`Pacific/Saipan` | Pacific/Saipan\n`Pacific/Tahiti` | Pacific/Tahiti\n`Pacific/Tarawa` | Pacific/Tarawa\n`Pacific/Tongatapu` | Pacific/Tongatapu\n`Pacific/Wake` | Pacific/Wake\n`Pacific/Wallis` | Pacific/Wallis\n`US/Alaska` | US/Alaska\n`US/Arizona` | US/Arizona\n`US/Central` | US/Central\n`US/Eastern` | US/Eastern\n`US/Hawaii` | US/Hawaii\n`US/Mountain` | US/Mountain\n`US/Pacific` | US/Pacific\n`UTC` | UTC\n</details>", "example": "America/Chicago"}, "language": {"type": "string", "description": "Choose the language you want Elorus to speak. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n</details>", "example": "en"}, "email_notifications": {"type": "boolean", "description": "Send me an email whenever a new notification is created."}, "first_name_translations": {"type": "object", "description": "How first name will appear when invoicing in other languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "John"}, "de": {"type": "string", "description": "The german translation.", "example": "Johann"}, "el": {"type": "string", "description": "The greek translation.", "example": "John"}, "en": {"type": "string", "description": "The english translation.", "example": "John"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "John"}, "es": {"type": "string", "description": "The spanish translation.", "example": "John"}, "fr": {"type": "string", "description": "The french translation.", "example": "John"}, "it": {"type": "string", "description": "The italian translation.", "example": "John"}}}, "last_name_translations": {"type": "object", "description": "How last name will appear when invoicing in other languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": ""}, "de": {"type": "string", "description": "The german translation.", "example": ""}, "el": {"type": "string", "description": "The greek translation.", "example": ""}, "en": {"type": "string", "description": "The english translation.", "example": ""}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": ""}, "es": {"type": "string", "description": "The spanish translation.", "example": ""}, "fr": {"type": "string", "description": "The french translation.", "example": ""}, "it": {"type": "string", "description": "The italian translation.", "example": ""}}}, "last_login": {"type": "string", "description": " Timezone information is included.", "example": "2018-09-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "put": {"description": "Update user profile.\n---", "parameters": [{"schema": {"required": ["email", "first_name", "last_name"], "type": "object", "properties": {"email": {"type": "string", "description": "When changing your email address, a new verification code will be sent to the new email address. You should verify the address within 10 days, otherwise your account will be suspended without any further notice."}, "first_name": {"type": "string", "description": "", "example": "John"}, "last_name": {"type": "string", "description": "", "example": "Doe"}, "phone_number": {"type": "string", "description": "", "example": "662-222-2222"}, "timezone": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`Africa/Abidjan` | Africa/Abidjan\n`Africa/Accra` | Africa/Accra\n`Africa/Addis_Ababa` | Africa/Addis_Ababa\n`Africa/Algiers` | Africa/Algiers\n`Africa/Asmara` | Africa/Asmara\n`Africa/Bamako` | Africa/Bamako\n`Africa/Bangui` | Africa/Bangui\n`Africa/Banjul` | Africa/Banjul\n`Africa/Bissau` | Africa/Bissau\n`Africa/Blantyre` | Africa/Blantyre\n`Africa/Brazzaville` | Africa/Brazzaville\n`Africa/Bujumbura` | Africa/Bujumbura\n`Africa/Cairo` | Africa/Cairo\n`Africa/Casablanca` | Africa/Casablanca\n`Africa/Ceuta` | Africa/Ceuta\n`Africa/Conakry` | Africa/Conakry\n`Africa/Dakar` | Africa/Dakar\n`Africa/Dar_es_Salaam` | Africa/Dar_es_Salaam\n`Africa/Djibouti` | Africa/Djibouti\n`Africa/Douala` | Africa/Douala\n`Africa/El_Aaiun` | Africa/El_Aaiun\n`Africa/Freetown` | Africa/Freetown\n`Africa/Gaborone` | Africa/Gaborone\n`Africa/Harare` | Africa/Harare\n`Africa/Johannesburg` | Africa/Johannesburg\n`Africa/Juba` | Africa/Juba\n`Africa/Kampala` | Africa/Kampala\n`Africa/Khartoum` | Africa/Khartoum\n`Africa/Kigali` | Africa/Kigali\n`Africa/Kinshasa` | Africa/Kinshasa\n`Africa/Lagos` | Africa/Lagos\n`Africa/Libreville` | Africa/Libreville\n`Africa/Lome` | Africa/Lome\n`Africa/Luanda` | Africa/Luanda\n`Africa/Lubumbashi` | Africa/Lubumbashi\n`Africa/Lusaka` | Africa/Lusaka\n`Africa/Malabo` | Africa/Malabo\n`Africa/Maputo` | Africa/Maputo\n`Africa/Maseru` | Africa/Maseru\n`Africa/Mbabane` | Africa/Mbabane\n`Africa/Mogadishu` | Africa/Mogadishu\n`Africa/Monrovia` | Africa/Monrovia\n`Africa/Nairobi` | Africa/Nairobi\n`Africa/Ndjamena` | Africa/Ndjamena\n`Africa/Niamey` | Africa/Niamey\n`Africa/Nouakchott` | Africa/Nouakchott\n`Africa/Ouagadougou` | Africa/Ouagadougou\n`Africa/Porto-Novo` | Africa/Porto-Novo\n`Africa/Sao_Tome` | Africa/Sao_Tome\n`Africa/Tripoli` | Africa/Tripoli\n`Africa/Tunis` | Africa/Tunis\n`Africa/Windhoek` | Africa/Windhoek\n`America/Adak` | America/Adak\n`America/Anchorage` | America/Anchorage\n`America/Anguilla` | America/Anguilla\n`America/Antigua` | America/Antigua\n`America/Araguaina` | America/Araguaina\n`America/Argentina/Buenos_Aires` | America/Argentina/Buenos_Aires\n`America/Argentina/Catamarca` | America/Argentina/Catamarca\n`America/Argentina/Cordoba` | America/Argentina/Cordoba\n`America/Argentina/Jujuy` | America/Argentina/Jujuy\n`America/Argentina/La_Rioja` | America/Argentina/La_Rioja\n`America/Argentina/Mendoza` | America/Argentina/Mendoza\n`America/Argentina/Rio_Gallegos` | America/Argentina/Rio_Gallegos\n`America/Argentina/Salta` | America/Argentina/Salta\n`America/Argentina/San_Juan` | America/Argentina/San_Juan\n`America/Argentina/San_Luis` | America/Argentina/San_Luis\n`America/Argentina/Tucuman` | America/Argentina/Tucuman\n`America/Argentina/Ushuaia` | America/Argentina/Ushuaia\n`America/Aruba` | America/Aruba\n`America/Asuncion` | America/Asuncion\n`America/Atikokan` | America/Atikokan\n`America/Bahia` | America/Bahia\n`America/Bahia_Banderas` | America/Bahia_Banderas\n`America/Barbados` | America/Barbados\n`America/Belem` | America/Belem\n`America/Belize` | America/Belize\n`America/Blanc-Sablon` | America/Blanc-Sablon\n`America/Boa_Vista` | America/Boa_Vista\n`America/Bogota` | America/Bogota\n`America/Boise` | America/Boise\n`America/Cambridge_Bay` | America/Cambridge_Bay\n`America/Campo_Grande` | America/Campo_Grande\n`America/Cancun` | America/Cancun\n`America/Caracas` | America/Caracas\n`America/Cayenne` | America/Cayenne\n`America/Cayman` | America/Cayman\n`America/Chicago` | America/Chicago\n`America/Chihuahua` | America/Chihuahua\n`America/Costa_Rica` | America/Costa_Rica\n`America/Creston` | America/Creston\n`America/Cuiaba` | America/Cuiaba\n`America/Curacao` | America/Curacao\n`America/Danmarkshavn` | America/Danmarkshavn\n`America/Dawson` | America/Dawson\n`America/Dawson_Creek` | America/Dawson_Creek\n`America/Denver` | America/Denver\n`America/Detroit` | America/Detroit\n`America/Dominica` | America/Dominica\n`America/Edmonton` | America/Edmonton\n`America/Eirunepe` | America/Eirunepe\n`America/El_Salvador` | America/El_Salvador\n`America/Fortaleza` | America/Fortaleza\n`America/Glace_Bay` | America/Glace_Bay\n`America/Godthab` | America/Godthab\n`America/Goose_Bay` | America/Goose_Bay\n`America/Grand_Turk` | America/Grand_Turk\n`America/Grenada` | America/Grenada\n`America/Guadeloupe` | America/Guadeloupe\n`America/Guatemala` | America/Guatemala\n`America/Guayaquil` | America/Guayaquil\n`America/Guyana` | America/Guyana\n`America/Halifax` | America/Halifax\n`America/Havana` | America/Havana\n`America/Hermosillo` | America/Hermosillo\n`America/Indiana/Indianapolis` | America/Indiana/Indianapolis\n`America/Indiana/Knox` | America/Indiana/Knox\n`America/Indiana/Marengo` | America/Indiana/Marengo\n`America/Indiana/Petersburg` | America/Indiana/Petersburg\n`America/Indiana/Tell_City` | America/Indiana/Tell_City\n`America/Indiana/Vevay` | America/Indiana/Vevay\n`America/Indiana/Vincennes` | America/Indiana/Vincennes\n`America/Indiana/Winamac` | America/Indiana/Winamac\n`America/Inuvik` | America/Inuvik\n`America/Iqaluit` | America/Iqaluit\n`America/Jamaica` | America/Jamaica\n`America/Juneau` | America/Juneau\n`America/Kentucky/Louisville` | America/Kentucky/Louisville\n`America/Kentucky/Monticello` | America/Kentucky/Monticello\n`America/Kralendijk` | America/Kralendijk\n`America/La_Paz` | America/La_Paz\n`America/Lima` | America/Lima\n`America/Los_Angeles` | America/Los_Angeles\n`America/Lower_Princes` | America/Lower_Princes\n`America/Maceio` | America/Maceio\n`America/Managua` | America/Managua\n`America/Manaus` | America/Manaus\n`America/Marigot` | America/Marigot\n`America/Martinique` | America/Martinique\n`America/Matamoros` | America/Matamoros\n`America/Mazatlan` | America/Mazatlan\n`America/Menominee` | America/Menominee\n`America/Merida` | America/Merida\n`America/Metlakatla` | America/Metlakatla\n`America/Mexico_City` | America/Mexico_City\n`America/Miquelon` | America/Miquelon\n`America/Moncton` | America/Moncton\n`America/Monterrey` | America/Monterrey\n`America/Montevideo` | America/Montevideo\n`America/Montreal` | America/Montreal\n`America/Montserrat` | America/Montserrat\n`America/Nassau` | America/Nassau\n`America/New_York` | America/New_York\n`America/Nipigon` | America/Nipigon\n`America/Nome` | America/Nome\n`America/Noronha` | America/Noronha\n`America/North_Dakota/Beulah` | America/North_Dakota/Beulah\n`America/North_Dakota/Center` | America/North_Dakota/Center\n`America/North_Dakota/New_Salem` | America/North_Dakota/New_Salem\n`America/Ojinaga` | America/Ojinaga\n`America/Panama` | America/Panama\n`America/Pangnirtung` | America/Pangnirtung\n`America/Paramaribo` | America/Paramaribo\n`America/Phoenix` | America/Phoenix\n`America/Port-au-Prince` | America/Port-au-Prince\n`America/Port_of_Spain` | America/Port_of_Spain\n`America/Porto_Velho` | America/Porto_Velho\n`America/Puerto_Rico` | America/Puerto_Rico\n`America/Rainy_River` | America/Rainy_River\n`America/Rankin_Inlet` | America/Rankin_Inlet\n`America/Recife` | America/Recife\n`America/Regina` | America/Regina\n`America/Resolute` | America/Resolute\n`America/Rio_Branco` | America/Rio_Branco\n`America/Santa_Isabel` | America/Santa_Isabel\n`America/Santarem` | America/Santarem\n`America/Santiago` | America/Santiago\n`America/Santo_Domingo` | America/Santo_Domingo\n`America/Sao_Paulo` | America/Sao_Paulo\n`America/Scoresbysund` | America/Scoresbysund\n`America/Sitka` | America/Sitka\n`America/St_Barthelemy` | America/St_Barthelemy\n`America/St_Johns` | America/St_Johns\n`America/St_Kitts` | America/St_Kitts\n`America/St_Lucia` | America/St_Lucia\n`America/St_Thomas` | America/St_Thomas\n`America/St_Vincent` | America/St_Vincent\n`America/Swift_Current` | America/Swift_Current\n`America/Tegucigalpa` | America/Tegucigalpa\n`America/Thule` | America/Thule\n`America/Thunder_Bay` | America/Thunder_Bay\n`America/Tijuana` | America/Tijuana\n`America/Toronto` | America/Toronto\n`America/Tortola` | America/Tortola\n`America/Vancouver` | America/Vancouver\n`America/Whitehorse` | America/Whitehorse\n`America/Winnipeg` | America/Winnipeg\n`America/Yakutat` | America/Yakutat\n`America/Yellowknife` | America/Yellowknife\n`Antarctica/Casey` | Antarctica/Casey\n`Antarctica/Davis` | Antarctica/Davis\n`Antarctica/DumontDUrville` | Antarctica/DumontDUrville\n`Antarctica/Macquarie` | Antarctica/Macquarie\n`Antarctica/Mawson` | Antarctica/Mawson\n`Antarctica/McMurdo` | Antarctica/McMurdo\n`Antarctica/Palmer` | Antarctica/Palmer\n`Antarctica/Rothera` | Antarctica/Rothera\n`Antarctica/Syowa` | Antarctica/Syowa\n`Antarctica/Troll` | Antarctica/Troll\n`Antarctica/Vostok` | Antarctica/Vostok\n`Arctic/Longyearbyen` | Arctic/Longyearbyen\n`Asia/Aden` | Asia/Aden\n`Asia/Almaty` | Asia/Almaty\n`Asia/Amman` | Asia/Amman\n`Asia/Anadyr` | Asia/Anadyr\n`Asia/Aqtau` | Asia/Aqtau\n`Asia/Aqtobe` | Asia/Aqtobe\n`Asia/Ashgabat` | Asia/Ashgabat\n`Asia/Baghdad` | Asia/Baghdad\n`Asia/Bahrain` | Asia/Bahrain\n`Asia/Baku` | Asia/Baku\n`Asia/Bangkok` | Asia/Bangkok\n`Asia/Beirut` | Asia/Beirut\n`Asia/Bishkek` | Asia/Bishkek\n`Asia/Brunei` | Asia/Brunei\n`Asia/Chita` | Asia/Chita\n`Asia/Choibalsan` | Asia/Choibalsan\n`Asia/Colombo` | Asia/Colombo\n`Asia/Damascus` | Asia/Damascus\n`Asia/Dhaka` | Asia/Dhaka\n`Asia/Dili` | Asia/Dili\n`Asia/Dubai` | Asia/Dubai\n`Asia/Dushanbe` | Asia/Dushanbe\n`Asia/Gaza` | Asia/Gaza\n`Asia/Hebron` | Asia/Hebron\n`Asia/Ho_Chi_Minh` | Asia/Ho_Chi_Minh\n`Asia/Hong_Kong` | Asia/Hong_Kong\n`Asia/Hovd` | Asia/Hovd\n`Asia/Irkutsk` | Asia/Irkutsk\n`Asia/Jakarta` | Asia/Jakarta\n`Asia/Jayapura` | Asia/Jayapura\n`Asia/Jerusalem` | Asia/Jerusalem\n`Asia/Kabul` | Asia/Kabul\n`Asia/Kamchatka` | Asia/Kamchatka\n`Asia/Karachi` | Asia/Karachi\n`Asia/Kathmandu` | Asia/Kathmandu\n`Asia/Khandyga` | Asia/Khandyga\n`Asia/Kolkata` | Asia/Kolkata\n`Asia/Krasnoyarsk` | Asia/Krasnoyarsk\n`Asia/Kuala_Lumpur` | Asia/Kuala_Lumpur\n`Asia/Kuching` | Asia/Kuching\n`Asia/Kuwait` | Asia/Kuwait\n`Asia/Macau` | Asia/Macau\n`Asia/Magadan` | Asia/Magadan\n`Asia/Makassar` | Asia/Makassar\n`Asia/Manila` | Asia/Manila\n`Asia/Muscat` | Asia/Muscat\n`Asia/Nicosia` | Asia/Nicosia\n`Asia/Novokuznetsk` | Asia/Novokuznetsk\n`Asia/Novosibirsk` | Asia/Novosibirsk\n`Asia/Omsk` | Asia/Omsk\n`Asia/Oral` | Asia/Oral\n`Asia/Phnom_Penh` | Asia/Phnom_Penh\n`Asia/Pontianak` | Asia/Pontianak\n`Asia/Pyongyang` | Asia/Pyongyang\n`Asia/Qatar` | Asia/Qatar\n`Asia/Qyzylorda` | Asia/Qyzylorda\n`Asia/Rangoon` | Asia/Rangoon\n`Asia/Riyadh` | Asia/Riyadh\n`Asia/Sakhalin` | Asia/Sakhalin\n`Asia/Samarkand` | Asia/Samarkand\n`Asia/Seoul` | Asia/Seoul\n`Asia/Shanghai` | Asia/Shanghai\n`Asia/Singapore` | Asia/Singapore\n`Asia/Srednekolymsk` | Asia/Srednekolymsk\n`Asia/Taipei` | Asia/Taipei\n`Asia/Tashkent` | Asia/Tashkent\n`Asia/Tbilisi` | Asia/Tbilisi\n`Asia/Tehran` | Asia/Tehran\n`Asia/Thimphu` | Asia/Thimphu\n`Asia/Tokyo` | Asia/Tokyo\n`Asia/Ulaanbaatar` | Asia/Ulaanbaatar\n`Asia/Urumqi` | Asia/Urumqi\n`Asia/Ust-Nera` | Asia/Ust-Nera\n`Asia/Vientiane` | Asia/Vientiane\n`Asia/Vladivostok` | Asia/Vladivostok\n`Asia/Yakutsk` | Asia/Yakutsk\n`Asia/Yekaterinburg` | Asia/Yekaterinburg\n`Asia/Yerevan` | Asia/Yerevan\n`Atlantic/Azores` | Atlantic/Azores\n`Atlantic/Bermuda` | Atlantic/Bermuda\n`Atlantic/Canary` | Atlantic/Canary\n`Atlantic/Cape_Verde` | Atlantic/Cape_Verde\n`Atlantic/Faroe` | Atlantic/Faroe\n`Atlantic/Madeira` | Atlantic/Madeira\n`Atlantic/Reykjavik` | Atlantic/Reykjavik\n`Atlantic/South_Georgia` | Atlantic/South_Georgia\n`Atlantic/St_Helena` | Atlantic/St_Helena\n`Atlantic/Stanley` | Atlantic/Stanley\n`Australia/Adelaide` | Australia/Adelaide\n`Australia/Brisbane` | Australia/Brisbane\n`Australia/Broken_Hill` | Australia/Broken_Hill\n`Australia/Currie` | Australia/Currie\n`Australia/Darwin` | Australia/Darwin\n`Australia/Eucla` | Australia/Eucla\n`Australia/Hobart` | Australia/Hobart\n`Australia/Lindeman` | Australia/Lindeman\n`Australia/Lord_Howe` | Australia/Lord_Howe\n`Australia/Melbourne` | Australia/Melbourne\n`Australia/Perth` | Australia/Perth\n`Australia/Sydney` | Australia/Sydney\n`Canada/Atlantic` | Canada/Atlantic\n`Canada/Central` | Canada/Central\n`Canada/Eastern` | Canada/Eastern\n`Canada/Mountain` | Canada/Mountain\n`Canada/Newfoundland` | Canada/Newfoundland\n`Canada/Pacific` | Canada/Pacific\n`Europe/Amsterdam` | Europe/Amsterdam\n`Europe/Andorra` | Europe/Andorra\n`Europe/Athens` | Europe/Athens\n`Europe/Belgrade` | Europe/Belgrade\n`Europe/Berlin` | Europe/Berlin\n`Europe/Bratislava` | Europe/Bratislava\n`Europe/Brussels` | Europe/Brussels\n`Europe/Bucharest` | Europe/Bucharest\n`Europe/Budapest` | Europe/Budapest\n`Europe/Busingen` | Europe/Busingen\n`Europe/Chisinau` | Europe/Chisinau\n`Europe/Copenhagen` | Europe/Copenhagen\n`Europe/Dublin` | Europe/Dublin\n`Europe/Gibraltar` | Europe/Gibraltar\n`Europe/Guernsey` | Europe/Guernsey\n`Europe/Helsinki` | Europe/Helsinki\n`Europe/Isle_of_Man` | Europe/Isle_of_Man\n`Europe/Istanbul` | Europe/Istanbul\n`Europe/Jersey` | Europe/Jersey\n`Europe/Kaliningrad` | Europe/Kaliningrad\n`Europe/Kiev` | Europe/Kiev\n`Europe/Lisbon` | Europe/Lisbon\n`Europe/Ljubljana` | Europe/Ljubljana\n`Europe/London` | Europe/London\n`Europe/Luxembourg` | Europe/Luxembourg\n`Europe/Madrid` | Europe/Madrid\n`Europe/Malta` | Europe/Malta\n`Europe/Mariehamn` | Europe/Mariehamn\n`Europe/Minsk` | Europe/Minsk\n`Europe/Monaco` | Europe/Monaco\n`Europe/Moscow` | Europe/Moscow\n`Europe/Oslo` | Europe/Oslo\n`Europe/Paris` | Europe/Paris\n`Europe/Podgorica` | Europe/Podgorica\n`Europe/Prague` | Europe/Prague\n`Europe/Riga` | Europe/Riga\n`Europe/Rome` | Europe/Rome\n`Europe/Samara` | Europe/Samara\n`Europe/San_Marino` | Europe/San_Marino\n`Europe/Sarajevo` | Europe/Sarajevo\n`Europe/Simferopol` | Europe/Simferopol\n`Europe/Skopje` | Europe/Skopje\n`Europe/Sofia` | Europe/Sofia\n`Europe/Stockholm` | Europe/Stockholm\n`Europe/Tallinn` | Europe/Tallinn\n`Europe/Tirane` | Europe/Tirane\n`Europe/Uzhgorod` | Europe/Uzhgorod\n`Europe/Vaduz` | Europe/Vaduz\n`Europe/Vatican` | Europe/Vatican\n`Europe/Vienna` | Europe/Vienna\n`Europe/Vilnius` | Europe/Vilnius\n`Europe/Volgograd` | Europe/Volgograd\n`Europe/Warsaw` | Europe/Warsaw\n`Europe/Zagreb` | Europe/Zagreb\n`Europe/Zaporozhye` | Europe/Zaporozhye\n`Europe/Zurich` | Europe/Zurich\n`GMT` | GMT\n`Indian/Antananarivo` | Indian/Antananarivo\n`Indian/Chagos` | Indian/Chagos\n`Indian/Christmas` | Indian/Christmas\n`Indian/Cocos` | Indian/Cocos\n`Indian/Comoro` | Indian/Comoro\n`Indian/Kerguelen` | Indian/Kerguelen\n`Indian/Mahe` | Indian/Mahe\n`Indian/Maldives` | Indian/Maldives\n`Indian/Mauritius` | Indian/Mauritius\n`Indian/Mayotte` | Indian/Mayotte\n`Indian/Reunion` | Indian/Reunion\n`Pacific/Apia` | Pacific/Apia\n`Pacific/Auckland` | Pacific/Auckland\n`Pacific/Bougainville` | Pacific/Bougainville\n`Pacific/Chatham` | Pacific/Chatham\n`Pacific/Chuuk` | Pacific/Chuuk\n`Pacific/Easter` | Pacific/Easter\n`Pacific/Efate` | Pacific/Efate\n`Pacific/Enderbury` | Pacific/Enderbury\n`Pacific/Fakaofo` | Pacific/Fakaofo\n`Pacific/Fiji` | Pacific/Fiji\n`Pacific/Funafuti` | Pacific/Funafuti\n`Pacific/Galapagos` | Pacific/Galapagos\n`Pacific/Gambier` | Pacific/Gambier\n`Pacific/Guadalcanal` | Pacific/Guadalcanal\n`Pacific/Guam` | Pacific/Guam\n`Pacific/Honolulu` | Pacific/Honolulu\n`Pacific/Johnston` | Pacific/Johnston\n`Pacific/Kiritimati` | Pacific/Kiritimati\n`Pacific/Kosrae` | Pacific/Kosrae\n`Pacific/Kwajalein` | Pacific/Kwajalein\n`Pacific/Majuro` | Pacific/Majuro\n`Pacific/Marquesas` | Pacific/Marquesas\n`Pacific/Midway` | Pacific/Midway\n`Pacific/Nauru` | Pacific/Nauru\n`Pacific/Niue` | Pacific/Niue\n`Pacific/Norfolk` | Pacific/Norfolk\n`Pacific/Noumea` | Pacific/Noumea\n`Pacific/Pago_Pago` | Pacific/Pago_Pago\n`Pacific/Palau` | Pacific/Palau\n`Pacific/Pitcairn` | Pacific/Pitcairn\n`Pacific/Pohnpei` | Pacific/Pohnpei\n`Pacific/Port_Moresby` | Pacific/Port_Moresby\n`Pacific/Rarotonga` | Pacific/Rarotonga\n`Pacific/Saipan` | Pacific/Saipan\n`Pacific/Tahiti` | Pacific/Tahiti\n`Pacific/Tarawa` | Pacific/Tarawa\n`Pacific/Tongatapu` | Pacific/Tongatapu\n`Pacific/Wake` | Pacific/Wake\n`Pacific/Wallis` | Pacific/Wallis\n`US/Alaska` | US/Alaska\n`US/Arizona` | US/Arizona\n`US/Central` | US/Central\n`US/Eastern` | US/Eastern\n`US/Hawaii` | US/Hawaii\n`US/Mountain` | US/Mountain\n`US/Pacific` | US/Pacific\n`UTC` | UTC\n</details>", "example": "America/Chicago"}, "language": {"type": "string", "description": "Choose the language you want Elorus to speak. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n</details>", "example": "en"}, "email_notifications": {"type": "boolean", "description": "Send me an email whenever a new notification is created."}, "first_name_translations": {"type": "object", "description": "How first name will appear when invoicing in other languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "John"}, "de": {"type": "string", "description": "The german translation.", "example": "Johann"}, "el": {"type": "string", "description": "The greek translation.", "example": "John"}, "en": {"type": "string", "description": "The english translation.", "example": "John"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "John"}, "es": {"type": "string", "description": "The spanish translation.", "example": "John"}, "fr": {"type": "string", "description": "The french translation.", "example": "John"}, "it": {"type": "string", "description": "The italian translation.", "example": "John"}}}, "last_name_translations": {"type": "object", "description": "How last name will appear when invoicing in other languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": ""}, "de": {"type": "string", "description": "The german translation.", "example": ""}, "el": {"type": "string", "description": "The greek translation.", "example": ""}, "en": {"type": "string", "description": "The english translation.", "example": ""}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": ""}, "es": {"type": "string", "description": "The spanish translation.", "example": ""}, "fr": {"type": "string", "description": "The french translation.", "example": ""}, "it": {"type": "string", "description": "The italian translation.", "example": ""}}}}}, "name": "data", "in": "body"}], "tags": ["profile"], "summary": "/v1.0/profile/", "operationId": "profile_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"email": {"type": "string", "description": "When changing your email address, a new verification code will be sent to the new email address. You should verify the address within 10 days, otherwise your account will be suspended without any further notice."}, "first_name": {"type": "string", "description": "", "example": "John"}, "last_name": {"type": "string", "description": "", "example": "Doe"}, "phone_number": {"type": "string", "description": "", "example": "662-222-2222"}, "date_joined": {"type": "string", "description": " Timezone information is included.", "example": "2018-09-28T13:48:56.504916Z"}, "timezone": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`Africa/Abidjan` | Africa/Abidjan\n`Africa/Accra` | Africa/Accra\n`Africa/Addis_Ababa` | Africa/Addis_Ababa\n`Africa/Algiers` | Africa/Algiers\n`Africa/Asmara` | Africa/Asmara\n`Africa/Bamako` | Africa/Bamako\n`Africa/Bangui` | Africa/Bangui\n`Africa/Banjul` | Africa/Banjul\n`Africa/Bissau` | Africa/Bissau\n`Africa/Blantyre` | Africa/Blantyre\n`Africa/Brazzaville` | Africa/Brazzaville\n`Africa/Bujumbura` | Africa/Bujumbura\n`Africa/Cairo` | Africa/Cairo\n`Africa/Casablanca` | Africa/Casablanca\n`Africa/Ceuta` | Africa/Ceuta\n`Africa/Conakry` | Africa/Conakry\n`Africa/Dakar` | Africa/Dakar\n`Africa/Dar_es_Salaam` | Africa/Dar_es_Salaam\n`Africa/Djibouti` | Africa/Djibouti\n`Africa/Douala` | Africa/Douala\n`Africa/El_Aaiun` | Africa/El_Aaiun\n`Africa/Freetown` | Africa/Freetown\n`Africa/Gaborone` | Africa/Gaborone\n`Africa/Harare` | Africa/Harare\n`Africa/Johannesburg` | Africa/Johannesburg\n`Africa/Juba` | Africa/Juba\n`Africa/Kampala` | Africa/Kampala\n`Africa/Khartoum` | Africa/Khartoum\n`Africa/Kigali` | Africa/Kigali\n`Africa/Kinshasa` | Africa/Kinshasa\n`Africa/Lagos` | Africa/Lagos\n`Africa/Libreville` | Africa/Libreville\n`Africa/Lome` | Africa/Lome\n`Africa/Luanda` | Africa/Luanda\n`Africa/Lubumbashi` | Africa/Lubumbashi\n`Africa/Lusaka` | Africa/Lusaka\n`Africa/Malabo` | Africa/Malabo\n`Africa/Maputo` | Africa/Maputo\n`Africa/Maseru` | Africa/Maseru\n`Africa/Mbabane` | Africa/Mbabane\n`Africa/Mogadishu` | Africa/Mogadishu\n`Africa/Monrovia` | Africa/Monrovia\n`Africa/Nairobi` | Africa/Nairobi\n`Africa/Ndjamena` | Africa/Ndjamena\n`Africa/Niamey` | Africa/Niamey\n`Africa/Nouakchott` | Africa/Nouakchott\n`Africa/Ouagadougou` | Africa/Ouagadougou\n`Africa/Porto-Novo` | Africa/Porto-Novo\n`Africa/Sao_Tome` | Africa/Sao_Tome\n`Africa/Tripoli` | Africa/Tripoli\n`Africa/Tunis` | Africa/Tunis\n`Africa/Windhoek` | Africa/Windhoek\n`America/Adak` | America/Adak\n`America/Anchorage` | America/Anchorage\n`America/Anguilla` | America/Anguilla\n`America/Antigua` | America/Antigua\n`America/Araguaina` | America/Araguaina\n`America/Argentina/Buenos_Aires` | America/Argentina/Buenos_Aires\n`America/Argentina/Catamarca` | America/Argentina/Catamarca\n`America/Argentina/Cordoba` | America/Argentina/Cordoba\n`America/Argentina/Jujuy` | America/Argentina/Jujuy\n`America/Argentina/La_Rioja` | America/Argentina/La_Rioja\n`America/Argentina/Mendoza` | America/Argentina/Mendoza\n`America/Argentina/Rio_Gallegos` | America/Argentina/Rio_Gallegos\n`America/Argentina/Salta` | America/Argentina/Salta\n`America/Argentina/San_Juan` | America/Argentina/San_Juan\n`America/Argentina/San_Luis` | America/Argentina/San_Luis\n`America/Argentina/Tucuman` | America/Argentina/Tucuman\n`America/Argentina/Ushuaia` | America/Argentina/Ushuaia\n`America/Aruba` | America/Aruba\n`America/Asuncion` | America/Asuncion\n`America/Atikokan` | America/Atikokan\n`America/Bahia` | America/Bahia\n`America/Bahia_Banderas` | America/Bahia_Banderas\n`America/Barbados` | America/Barbados\n`America/Belem` | America/Belem\n`America/Belize` | America/Belize\n`America/Blanc-Sablon` | America/Blanc-Sablon\n`America/Boa_Vista` | America/Boa_Vista\n`America/Bogota` | America/Bogota\n`America/Boise` | America/Boise\n`America/Cambridge_Bay` | America/Cambridge_Bay\n`America/Campo_Grande` | America/Campo_Grande\n`America/Cancun` | America/Cancun\n`America/Caracas` | America/Caracas\n`America/Cayenne` | America/Cayenne\n`America/Cayman` | America/Cayman\n`America/Chicago` | America/Chicago\n`America/Chihuahua` | America/Chihuahua\n`America/Costa_Rica` | America/Costa_Rica\n`America/Creston` | America/Creston\n`America/Cuiaba` | America/Cuiaba\n`America/Curacao` | America/Curacao\n`America/Danmarkshavn` | America/Danmarkshavn\n`America/Dawson` | America/Dawson\n`America/Dawson_Creek` | America/Dawson_Creek\n`America/Denver` | America/Denver\n`America/Detroit` | America/Detroit\n`America/Dominica` | America/Dominica\n`America/Edmonton` | America/Edmonton\n`America/Eirunepe` | America/Eirunepe\n`America/El_Salvador` | America/El_Salvador\n`America/Fortaleza` | America/Fortaleza\n`America/Glace_Bay` | America/Glace_Bay\n`America/Godthab` | America/Godthab\n`America/Goose_Bay` | America/Goose_Bay\n`America/Grand_Turk` | America/Grand_Turk\n`America/Grenada` | America/Grenada\n`America/Guadeloupe` | America/Guadeloupe\n`America/Guatemala` | America/Guatemala\n`America/Guayaquil` | America/Guayaquil\n`America/Guyana` | America/Guyana\n`America/Halifax` | America/Halifax\n`America/Havana` | America/Havana\n`America/Hermosillo` | America/Hermosillo\n`America/Indiana/Indianapolis` | America/Indiana/Indianapolis\n`America/Indiana/Knox` | America/Indiana/Knox\n`America/Indiana/Marengo` | America/Indiana/Marengo\n`America/Indiana/Petersburg` | America/Indiana/Petersburg\n`America/Indiana/Tell_City` | America/Indiana/Tell_City\n`America/Indiana/Vevay` | America/Indiana/Vevay\n`America/Indiana/Vincennes` | America/Indiana/Vincennes\n`America/Indiana/Winamac` | America/Indiana/Winamac\n`America/Inuvik` | America/Inuvik\n`America/Iqaluit` | America/Iqaluit\n`America/Jamaica` | America/Jamaica\n`America/Juneau` | America/Juneau\n`America/Kentucky/Louisville` | America/Kentucky/Louisville\n`America/Kentucky/Monticello` | America/Kentucky/Monticello\n`America/Kralendijk` | America/Kralendijk\n`America/La_Paz` | America/La_Paz\n`America/Lima` | America/Lima\n`America/Los_Angeles` | America/Los_Angeles\n`America/Lower_Princes` | America/Lower_Princes\n`America/Maceio` | America/Maceio\n`America/Managua` | America/Managua\n`America/Manaus` | America/Manaus\n`America/Marigot` | America/Marigot\n`America/Martinique` | America/Martinique\n`America/Matamoros` | America/Matamoros\n`America/Mazatlan` | America/Mazatlan\n`America/Menominee` | America/Menominee\n`America/Merida` | America/Merida\n`America/Metlakatla` | America/Metlakatla\n`America/Mexico_City` | America/Mexico_City\n`America/Miquelon` | America/Miquelon\n`America/Moncton` | America/Moncton\n`America/Monterrey` | America/Monterrey\n`America/Montevideo` | America/Montevideo\n`America/Montreal` | America/Montreal\n`America/Montserrat` | America/Montserrat\n`America/Nassau` | America/Nassau\n`America/New_York` | America/New_York\n`America/Nipigon` | America/Nipigon\n`America/Nome` | America/Nome\n`America/Noronha` | America/Noronha\n`America/North_Dakota/Beulah` | America/North_Dakota/Beulah\n`America/North_Dakota/Center` | America/North_Dakota/Center\n`America/North_Dakota/New_Salem` | America/North_Dakota/New_Salem\n`America/Ojinaga` | America/Ojinaga\n`America/Panama` | America/Panama\n`America/Pangnirtung` | America/Pangnirtung\n`America/Paramaribo` | America/Paramaribo\n`America/Phoenix` | America/Phoenix\n`America/Port-au-Prince` | America/Port-au-Prince\n`America/Port_of_Spain` | America/Port_of_Spain\n`America/Porto_Velho` | America/Porto_Velho\n`America/Puerto_Rico` | America/Puerto_Rico\n`America/Rainy_River` | America/Rainy_River\n`America/Rankin_Inlet` | America/Rankin_Inlet\n`America/Recife` | America/Recife\n`America/Regina` | America/Regina\n`America/Resolute` | America/Resolute\n`America/Rio_Branco` | America/Rio_Branco\n`America/Santa_Isabel` | America/Santa_Isabel\n`America/Santarem` | America/Santarem\n`America/Santiago` | America/Santiago\n`America/Santo_Domingo` | America/Santo_Domingo\n`America/Sao_Paulo` | America/Sao_Paulo\n`America/Scoresbysund` | America/Scoresbysund\n`America/Sitka` | America/Sitka\n`America/St_Barthelemy` | America/St_Barthelemy\n`America/St_Johns` | America/St_Johns\n`America/St_Kitts` | America/St_Kitts\n`America/St_Lucia` | America/St_Lucia\n`America/St_Thomas` | America/St_Thomas\n`America/St_Vincent` | America/St_Vincent\n`America/Swift_Current` | America/Swift_Current\n`America/Tegucigalpa` | America/Tegucigalpa\n`America/Thule` | America/Thule\n`America/Thunder_Bay` | America/Thunder_Bay\n`America/Tijuana` | America/Tijuana\n`America/Toronto` | America/Toronto\n`America/Tortola` | America/Tortola\n`America/Vancouver` | America/Vancouver\n`America/Whitehorse` | America/Whitehorse\n`America/Winnipeg` | America/Winnipeg\n`America/Yakutat` | America/Yakutat\n`America/Yellowknife` | America/Yellowknife\n`Antarctica/Casey` | Antarctica/Casey\n`Antarctica/Davis` | Antarctica/Davis\n`Antarctica/DumontDUrville` | Antarctica/DumontDUrville\n`Antarctica/Macquarie` | Antarctica/Macquarie\n`Antarctica/Mawson` | Antarctica/Mawson\n`Antarctica/McMurdo` | Antarctica/McMurdo\n`Antarctica/Palmer` | Antarctica/Palmer\n`Antarctica/Rothera` | Antarctica/Rothera\n`Antarctica/Syowa` | Antarctica/Syowa\n`Antarctica/Troll` | Antarctica/Troll\n`Antarctica/Vostok` | Antarctica/Vostok\n`Arctic/Longyearbyen` | Arctic/Longyearbyen\n`Asia/Aden` | Asia/Aden\n`Asia/Almaty` | Asia/Almaty\n`Asia/Amman` | Asia/Amman\n`Asia/Anadyr` | Asia/Anadyr\n`Asia/Aqtau` | Asia/Aqtau\n`Asia/Aqtobe` | Asia/Aqtobe\n`Asia/Ashgabat` | Asia/Ashgabat\n`Asia/Baghdad` | Asia/Baghdad\n`Asia/Bahrain` | Asia/Bahrain\n`Asia/Baku` | Asia/Baku\n`Asia/Bangkok` | Asia/Bangkok\n`Asia/Beirut` | Asia/Beirut\n`Asia/Bishkek` | Asia/Bishkek\n`Asia/Brunei` | Asia/Brunei\n`Asia/Chita` | Asia/Chita\n`Asia/Choibalsan` | Asia/Choibalsan\n`Asia/Colombo` | Asia/Colombo\n`Asia/Damascus` | Asia/Damascus\n`Asia/Dhaka` | Asia/Dhaka\n`Asia/Dili` | Asia/Dili\n`Asia/Dubai` | Asia/Dubai\n`Asia/Dushanbe` | Asia/Dushanbe\n`Asia/Gaza` | Asia/Gaza\n`Asia/Hebron` | Asia/Hebron\n`Asia/Ho_Chi_Minh` | Asia/Ho_Chi_Minh\n`Asia/Hong_Kong` | Asia/Hong_Kong\n`Asia/Hovd` | Asia/Hovd\n`Asia/Irkutsk` | Asia/Irkutsk\n`Asia/Jakarta` | Asia/Jakarta\n`Asia/Jayapura` | Asia/Jayapura\n`Asia/Jerusalem` | Asia/Jerusalem\n`Asia/Kabul` | Asia/Kabul\n`Asia/Kamchatka` | Asia/Kamchatka\n`Asia/Karachi` | Asia/Karachi\n`Asia/Kathmandu` | Asia/Kathmandu\n`Asia/Khandyga` | Asia/Khandyga\n`Asia/Kolkata` | Asia/Kolkata\n`Asia/Krasnoyarsk` | Asia/Krasnoyarsk\n`Asia/Kuala_Lumpur` | Asia/Kuala_Lumpur\n`Asia/Kuching` | Asia/Kuching\n`Asia/Kuwait` | Asia/Kuwait\n`Asia/Macau` | Asia/Macau\n`Asia/Magadan` | Asia/Magadan\n`Asia/Makassar` | Asia/Makassar\n`Asia/Manila` | Asia/Manila\n`Asia/Muscat` | Asia/Muscat\n`Asia/Nicosia` | Asia/Nicosia\n`Asia/Novokuznetsk` | Asia/Novokuznetsk\n`Asia/Novosibirsk` | Asia/Novosibirsk\n`Asia/Omsk` | Asia/Omsk\n`Asia/Oral` | Asia/Oral\n`Asia/Phnom_Penh` | Asia/Phnom_Penh\n`Asia/Pontianak` | Asia/Pontianak\n`Asia/Pyongyang` | Asia/Pyongyang\n`Asia/Qatar` | Asia/Qatar\n`Asia/Qyzylorda` | Asia/Qyzylorda\n`Asia/Rangoon` | Asia/Rangoon\n`Asia/Riyadh` | Asia/Riyadh\n`Asia/Sakhalin` | Asia/Sakhalin\n`Asia/Samarkand` | Asia/Samarkand\n`Asia/Seoul` | Asia/Seoul\n`Asia/Shanghai` | Asia/Shanghai\n`Asia/Singapore` | Asia/Singapore\n`Asia/Srednekolymsk` | Asia/Srednekolymsk\n`Asia/Taipei` | Asia/Taipei\n`Asia/Tashkent` | Asia/Tashkent\n`Asia/Tbilisi` | Asia/Tbilisi\n`Asia/Tehran` | Asia/Tehran\n`Asia/Thimphu` | Asia/Thimphu\n`Asia/Tokyo` | Asia/Tokyo\n`Asia/Ulaanbaatar` | Asia/Ulaanbaatar\n`Asia/Urumqi` | Asia/Urumqi\n`Asia/Ust-Nera` | Asia/Ust-Nera\n`Asia/Vientiane` | Asia/Vientiane\n`Asia/Vladivostok` | Asia/Vladivostok\n`Asia/Yakutsk` | Asia/Yakutsk\n`Asia/Yekaterinburg` | Asia/Yekaterinburg\n`Asia/Yerevan` | Asia/Yerevan\n`Atlantic/Azores` | Atlantic/Azores\n`Atlantic/Bermuda` | Atlantic/Bermuda\n`Atlantic/Canary` | Atlantic/Canary\n`Atlantic/Cape_Verde` | Atlantic/Cape_Verde\n`Atlantic/Faroe` | Atlantic/Faroe\n`Atlantic/Madeira` | Atlantic/Madeira\n`Atlantic/Reykjavik` | Atlantic/Reykjavik\n`Atlantic/South_Georgia` | Atlantic/South_Georgia\n`Atlantic/St_Helena` | Atlantic/St_Helena\n`Atlantic/Stanley` | Atlantic/Stanley\n`Australia/Adelaide` | Australia/Adelaide\n`Australia/Brisbane` | Australia/Brisbane\n`Australia/Broken_Hill` | Australia/Broken_Hill\n`Australia/Currie` | Australia/Currie\n`Australia/Darwin` | Australia/Darwin\n`Australia/Eucla` | Australia/Eucla\n`Australia/Hobart` | Australia/Hobart\n`Australia/Lindeman` | Australia/Lindeman\n`Australia/Lord_Howe` | Australia/Lord_Howe\n`Australia/Melbourne` | Australia/Melbourne\n`Australia/Perth` | Australia/Perth\n`Australia/Sydney` | Australia/Sydney\n`Canada/Atlantic` | Canada/Atlantic\n`Canada/Central` | Canada/Central\n`Canada/Eastern` | Canada/Eastern\n`Canada/Mountain` | Canada/Mountain\n`Canada/Newfoundland` | Canada/Newfoundland\n`Canada/Pacific` | Canada/Pacific\n`Europe/Amsterdam` | Europe/Amsterdam\n`Europe/Andorra` | Europe/Andorra\n`Europe/Athens` | Europe/Athens\n`Europe/Belgrade` | Europe/Belgrade\n`Europe/Berlin` | Europe/Berlin\n`Europe/Bratislava` | Europe/Bratislava\n`Europe/Brussels` | Europe/Brussels\n`Europe/Bucharest` | Europe/Bucharest\n`Europe/Budapest` | Europe/Budapest\n`Europe/Busingen` | Europe/Busingen\n`Europe/Chisinau` | Europe/Chisinau\n`Europe/Copenhagen` | Europe/Copenhagen\n`Europe/Dublin` | Europe/Dublin\n`Europe/Gibraltar` | Europe/Gibraltar\n`Europe/Guernsey` | Europe/Guernsey\n`Europe/Helsinki` | Europe/Helsinki\n`Europe/Isle_of_Man` | Europe/Isle_of_Man\n`Europe/Istanbul` | Europe/Istanbul\n`Europe/Jersey` | Europe/Jersey\n`Europe/Kaliningrad` | Europe/Kaliningrad\n`Europe/Kiev` | Europe/Kiev\n`Europe/Lisbon` | Europe/Lisbon\n`Europe/Ljubljana` | Europe/Ljubljana\n`Europe/London` | Europe/London\n`Europe/Luxembourg` | Europe/Luxembourg\n`Europe/Madrid` | Europe/Madrid\n`Europe/Malta` | Europe/Malta\n`Europe/Mariehamn` | Europe/Mariehamn\n`Europe/Minsk` | Europe/Minsk\n`Europe/Monaco` | Europe/Monaco\n`Europe/Moscow` | Europe/Moscow\n`Europe/Oslo` | Europe/Oslo\n`Europe/Paris` | Europe/Paris\n`Europe/Podgorica` | Europe/Podgorica\n`Europe/Prague` | Europe/Prague\n`Europe/Riga` | Europe/Riga\n`Europe/Rome` | Europe/Rome\n`Europe/Samara` | Europe/Samara\n`Europe/San_Marino` | Europe/San_Marino\n`Europe/Sarajevo` | Europe/Sarajevo\n`Europe/Simferopol` | Europe/Simferopol\n`Europe/Skopje` | Europe/Skopje\n`Europe/Sofia` | Europe/Sofia\n`Europe/Stockholm` | Europe/Stockholm\n`Europe/Tallinn` | Europe/Tallinn\n`Europe/Tirane` | Europe/Tirane\n`Europe/Uzhgorod` | Europe/Uzhgorod\n`Europe/Vaduz` | Europe/Vaduz\n`Europe/Vatican` | Europe/Vatican\n`Europe/Vienna` | Europe/Vienna\n`Europe/Vilnius` | Europe/Vilnius\n`Europe/Volgograd` | Europe/Volgograd\n`Europe/Warsaw` | Europe/Warsaw\n`Europe/Zagreb` | Europe/Zagreb\n`Europe/Zaporozhye` | Europe/Zaporozhye\n`Europe/Zurich` | Europe/Zurich\n`GMT` | GMT\n`Indian/Antananarivo` | Indian/Antananarivo\n`Indian/Chagos` | Indian/Chagos\n`Indian/Christmas` | Indian/Christmas\n`Indian/Cocos` | Indian/Cocos\n`Indian/Comoro` | Indian/Comoro\n`Indian/Kerguelen` | Indian/Kerguelen\n`Indian/Mahe` | Indian/Mahe\n`Indian/Maldives` | Indian/Maldives\n`Indian/Mauritius` | Indian/Mauritius\n`Indian/Mayotte` | Indian/Mayotte\n`Indian/Reunion` | Indian/Reunion\n`Pacific/Apia` | Pacific/Apia\n`Pacific/Auckland` | Pacific/Auckland\n`Pacific/Bougainville` | Pacific/Bougainville\n`Pacific/Chatham` | Pacific/Chatham\n`Pacific/Chuuk` | Pacific/Chuuk\n`Pacific/Easter` | Pacific/Easter\n`Pacific/Efate` | Pacific/Efate\n`Pacific/Enderbury` | Pacific/Enderbury\n`Pacific/Fakaofo` | Pacific/Fakaofo\n`Pacific/Fiji` | Pacific/Fiji\n`Pacific/Funafuti` | Pacific/Funafuti\n`Pacific/Galapagos` | Pacific/Galapagos\n`Pacific/Gambier` | Pacific/Gambier\n`Pacific/Guadalcanal` | Pacific/Guadalcanal\n`Pacific/Guam` | Pacific/Guam\n`Pacific/Honolulu` | Pacific/Honolulu\n`Pacific/Johnston` | Pacific/Johnston\n`Pacific/Kiritimati` | Pacific/Kiritimati\n`Pacific/Kosrae` | Pacific/Kosrae\n`Pacific/Kwajalein` | Pacific/Kwajalein\n`Pacific/Majuro` | Pacific/Majuro\n`Pacific/Marquesas` | Pacific/Marquesas\n`Pacific/Midway` | Pacific/Midway\n`Pacific/Nauru` | Pacific/Nauru\n`Pacific/Niue` | Pacific/Niue\n`Pacific/Norfolk` | Pacific/Norfolk\n`Pacific/Noumea` | Pacific/Noumea\n`Pacific/Pago_Pago` | Pacific/Pago_Pago\n`Pacific/Palau` | Pacific/Palau\n`Pacific/Pitcairn` | Pacific/Pitcairn\n`Pacific/Pohnpei` | Pacific/Pohnpei\n`Pacific/Port_Moresby` | Pacific/Port_Moresby\n`Pacific/Rarotonga` | Pacific/Rarotonga\n`Pacific/Saipan` | Pacific/Saipan\n`Pacific/Tahiti` | Pacific/Tahiti\n`Pacific/Tarawa` | Pacific/Tarawa\n`Pacific/Tongatapu` | Pacific/Tongatapu\n`Pacific/Wake` | Pacific/Wake\n`Pacific/Wallis` | Pacific/Wallis\n`US/Alaska` | US/Alaska\n`US/Arizona` | US/Arizona\n`US/Central` | US/Central\n`US/Eastern` | US/Eastern\n`US/Hawaii` | US/Hawaii\n`US/Mountain` | US/Mountain\n`US/Pacific` | US/Pacific\n`UTC` | UTC\n</details>", "example": "America/Chicago"}, "language": {"type": "string", "description": "Choose the language you want Elorus to speak. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n</details>", "example": "en"}, "email_notifications": {"type": "boolean", "description": "Send me an email whenever a new notification is created."}, "first_name_translations": {"type": "object", "description": "How first name will appear when invoicing in other languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "John"}, "de": {"type": "string", "description": "The german translation.", "example": "Johann"}, "el": {"type": "string", "description": "The greek translation.", "example": "John"}, "en": {"type": "string", "description": "The english translation.", "example": "John"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "John"}, "es": {"type": "string", "description": "The spanish translation.", "example": "John"}, "fr": {"type": "string", "description": "The french translation.", "example": "John"}, "it": {"type": "string", "description": "The italian translation.", "example": "John"}}}, "last_name_translations": {"type": "object", "description": "How last name will appear when invoicing in other languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": ""}, "de": {"type": "string", "description": "The german translation.", "example": ""}, "el": {"type": "string", "description": "The greek translation.", "example": ""}, "en": {"type": "string", "description": "The english translation.", "example": ""}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": ""}, "es": {"type": "string", "description": "The spanish translation.", "example": ""}, "fr": {"type": "string", "description": "The french translation.", "example": ""}, "it": {"type": "string", "description": "The italian translation.", "example": ""}}}, "last_login": {"type": "string", "description": " Timezone information is included.", "example": "2018-09-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update user profile.\n---", "parameters": [{"schema": {"type": "object", "properties": {"email": {"type": "string", "description": "When changing your email address, a new verification code will be sent to the new email address. You should verify the address within 10 days, otherwise your account will be suspended without any further notice."}, "first_name": {"type": "string", "description": "", "example": "John"}, "last_name": {"type": "string", "description": "", "example": "Doe"}, "phone_number": {"type": "string", "description": "", "example": "662-222-2222"}, "timezone": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`Africa/Abidjan` | Africa/Abidjan\n`Africa/Accra` | Africa/Accra\n`Africa/Addis_Ababa` | Africa/Addis_Ababa\n`Africa/Algiers` | Africa/Algiers\n`Africa/Asmara` | Africa/Asmara\n`Africa/Bamako` | Africa/Bamako\n`Africa/Bangui` | Africa/Bangui\n`Africa/Banjul` | Africa/Banjul\n`Africa/Bissau` | Africa/Bissau\n`Africa/Blantyre` | Africa/Blantyre\n`Africa/Brazzaville` | Africa/Brazzaville\n`Africa/Bujumbura` | Africa/Bujumbura\n`Africa/Cairo` | Africa/Cairo\n`Africa/Casablanca` | Africa/Casablanca\n`Africa/Ceuta` | Africa/Ceuta\n`Africa/Conakry` | Africa/Conakry\n`Africa/Dakar` | Africa/Dakar\n`Africa/Dar_es_Salaam` | Africa/Dar_es_Salaam\n`Africa/Djibouti` | Africa/Djibouti\n`Africa/Douala` | Africa/Douala\n`Africa/El_Aaiun` | Africa/El_Aaiun\n`Africa/Freetown` | Africa/Freetown\n`Africa/Gaborone` | Africa/Gaborone\n`Africa/Harare` | Africa/Harare\n`Africa/Johannesburg` | Africa/Johannesburg\n`Africa/Juba` | Africa/Juba\n`Africa/Kampala` | Africa/Kampala\n`Africa/Khartoum` | Africa/Khartoum\n`Africa/Kigali` | Africa/Kigali\n`Africa/Kinshasa` | Africa/Kinshasa\n`Africa/Lagos` | Africa/Lagos\n`Africa/Libreville` | Africa/Libreville\n`Africa/Lome` | Africa/Lome\n`Africa/Luanda` | Africa/Luanda\n`Africa/Lubumbashi` | Africa/Lubumbashi\n`Africa/Lusaka` | Africa/Lusaka\n`Africa/Malabo` | Africa/Malabo\n`Africa/Maputo` | Africa/Maputo\n`Africa/Maseru` | Africa/Maseru\n`Africa/Mbabane` | Africa/Mbabane\n`Africa/Mogadishu` | Africa/Mogadishu\n`Africa/Monrovia` | Africa/Monrovia\n`Africa/Nairobi` | Africa/Nairobi\n`Africa/Ndjamena` | Africa/Ndjamena\n`Africa/Niamey` | Africa/Niamey\n`Africa/Nouakchott` | Africa/Nouakchott\n`Africa/Ouagadougou` | Africa/Ouagadougou\n`Africa/Porto-Novo` | Africa/Porto-Novo\n`Africa/Sao_Tome` | Africa/Sao_Tome\n`Africa/Tripoli` | Africa/Tripoli\n`Africa/Tunis` | Africa/Tunis\n`Africa/Windhoek` | Africa/Windhoek\n`America/Adak` | America/Adak\n`America/Anchorage` | America/Anchorage\n`America/Anguilla` | America/Anguilla\n`America/Antigua` | America/Antigua\n`America/Araguaina` | America/Araguaina\n`America/Argentina/Buenos_Aires` | America/Argentina/Buenos_Aires\n`America/Argentina/Catamarca` | America/Argentina/Catamarca\n`America/Argentina/Cordoba` | America/Argentina/Cordoba\n`America/Argentina/Jujuy` | America/Argentina/Jujuy\n`America/Argentina/La_Rioja` | America/Argentina/La_Rioja\n`America/Argentina/Mendoza` | America/Argentina/Mendoza\n`America/Argentina/Rio_Gallegos` | America/Argentina/Rio_Gallegos\n`America/Argentina/Salta` | America/Argentina/Salta\n`America/Argentina/San_Juan` | America/Argentina/San_Juan\n`America/Argentina/San_Luis` | America/Argentina/San_Luis\n`America/Argentina/Tucuman` | America/Argentina/Tucuman\n`America/Argentina/Ushuaia` | America/Argentina/Ushuaia\n`America/Aruba` | America/Aruba\n`America/Asuncion` | America/Asuncion\n`America/Atikokan` | America/Atikokan\n`America/Bahia` | America/Bahia\n`America/Bahia_Banderas` | America/Bahia_Banderas\n`America/Barbados` | America/Barbados\n`America/Belem` | America/Belem\n`America/Belize` | America/Belize\n`America/Blanc-Sablon` | America/Blanc-Sablon\n`America/Boa_Vista` | America/Boa_Vista\n`America/Bogota` | America/Bogota\n`America/Boise` | America/Boise\n`America/Cambridge_Bay` | America/Cambridge_Bay\n`America/Campo_Grande` | America/Campo_Grande\n`America/Cancun` | America/Cancun\n`America/Caracas` | America/Caracas\n`America/Cayenne` | America/Cayenne\n`America/Cayman` | America/Cayman\n`America/Chicago` | America/Chicago\n`America/Chihuahua` | America/Chihuahua\n`America/Costa_Rica` | America/Costa_Rica\n`America/Creston` | America/Creston\n`America/Cuiaba` | America/Cuiaba\n`America/Curacao` | America/Curacao\n`America/Danmarkshavn` | America/Danmarkshavn\n`America/Dawson` | America/Dawson\n`America/Dawson_Creek` | America/Dawson_Creek\n`America/Denver` | America/Denver\n`America/Detroit` | America/Detroit\n`America/Dominica` | America/Dominica\n`America/Edmonton` | America/Edmonton\n`America/Eirunepe` | America/Eirunepe\n`America/El_Salvador` | America/El_Salvador\n`America/Fortaleza` | America/Fortaleza\n`America/Glace_Bay` | America/Glace_Bay\n`America/Godthab` | America/Godthab\n`America/Goose_Bay` | America/Goose_Bay\n`America/Grand_Turk` | America/Grand_Turk\n`America/Grenada` | America/Grenada\n`America/Guadeloupe` | America/Guadeloupe\n`America/Guatemala` | America/Guatemala\n`America/Guayaquil` | America/Guayaquil\n`America/Guyana` | America/Guyana\n`America/Halifax` | America/Halifax\n`America/Havana` | America/Havana\n`America/Hermosillo` | America/Hermosillo\n`America/Indiana/Indianapolis` | America/Indiana/Indianapolis\n`America/Indiana/Knox` | America/Indiana/Knox\n`America/Indiana/Marengo` | America/Indiana/Marengo\n`America/Indiana/Petersburg` | America/Indiana/Petersburg\n`America/Indiana/Tell_City` | America/Indiana/Tell_City\n`America/Indiana/Vevay` | America/Indiana/Vevay\n`America/Indiana/Vincennes` | America/Indiana/Vincennes\n`America/Indiana/Winamac` | America/Indiana/Winamac\n`America/Inuvik` | America/Inuvik\n`America/Iqaluit` | America/Iqaluit\n`America/Jamaica` | America/Jamaica\n`America/Juneau` | America/Juneau\n`America/Kentucky/Louisville` | America/Kentucky/Louisville\n`America/Kentucky/Monticello` | America/Kentucky/Monticello\n`America/Kralendijk` | America/Kralendijk\n`America/La_Paz` | America/La_Paz\n`America/Lima` | America/Lima\n`America/Los_Angeles` | America/Los_Angeles\n`America/Lower_Princes` | America/Lower_Princes\n`America/Maceio` | America/Maceio\n`America/Managua` | America/Managua\n`America/Manaus` | America/Manaus\n`America/Marigot` | America/Marigot\n`America/Martinique` | America/Martinique\n`America/Matamoros` | America/Matamoros\n`America/Mazatlan` | America/Mazatlan\n`America/Menominee` | America/Menominee\n`America/Merida` | America/Merida\n`America/Metlakatla` | America/Metlakatla\n`America/Mexico_City` | America/Mexico_City\n`America/Miquelon` | America/Miquelon\n`America/Moncton` | America/Moncton\n`America/Monterrey` | America/Monterrey\n`America/Montevideo` | America/Montevideo\n`America/Montreal` | America/Montreal\n`America/Montserrat` | America/Montserrat\n`America/Nassau` | America/Nassau\n`America/New_York` | America/New_York\n`America/Nipigon` | America/Nipigon\n`America/Nome` | America/Nome\n`America/Noronha` | America/Noronha\n`America/North_Dakota/Beulah` | America/North_Dakota/Beulah\n`America/North_Dakota/Center` | America/North_Dakota/Center\n`America/North_Dakota/New_Salem` | America/North_Dakota/New_Salem\n`America/Ojinaga` | America/Ojinaga\n`America/Panama` | America/Panama\n`America/Pangnirtung` | America/Pangnirtung\n`America/Paramaribo` | America/Paramaribo\n`America/Phoenix` | America/Phoenix\n`America/Port-au-Prince` | America/Port-au-Prince\n`America/Port_of_Spain` | America/Port_of_Spain\n`America/Porto_Velho` | America/Porto_Velho\n`America/Puerto_Rico` | America/Puerto_Rico\n`America/Rainy_River` | America/Rainy_River\n`America/Rankin_Inlet` | America/Rankin_Inlet\n`America/Recife` | America/Recife\n`America/Regina` | America/Regina\n`America/Resolute` | America/Resolute\n`America/Rio_Branco` | America/Rio_Branco\n`America/Santa_Isabel` | America/Santa_Isabel\n`America/Santarem` | America/Santarem\n`America/Santiago` | America/Santiago\n`America/Santo_Domingo` | America/Santo_Domingo\n`America/Sao_Paulo` | America/Sao_Paulo\n`America/Scoresbysund` | America/Scoresbysund\n`America/Sitka` | America/Sitka\n`America/St_Barthelemy` | America/St_Barthelemy\n`America/St_Johns` | America/St_Johns\n`America/St_Kitts` | America/St_Kitts\n`America/St_Lucia` | America/St_Lucia\n`America/St_Thomas` | America/St_Thomas\n`America/St_Vincent` | America/St_Vincent\n`America/Swift_Current` | America/Swift_Current\n`America/Tegucigalpa` | America/Tegucigalpa\n`America/Thule` | America/Thule\n`America/Thunder_Bay` | America/Thunder_Bay\n`America/Tijuana` | America/Tijuana\n`America/Toronto` | America/Toronto\n`America/Tortola` | America/Tortola\n`America/Vancouver` | America/Vancouver\n`America/Whitehorse` | America/Whitehorse\n`America/Winnipeg` | America/Winnipeg\n`America/Yakutat` | America/Yakutat\n`America/Yellowknife` | America/Yellowknife\n`Antarctica/Casey` | Antarctica/Casey\n`Antarctica/Davis` | Antarctica/Davis\n`Antarctica/DumontDUrville` | Antarctica/DumontDUrville\n`Antarctica/Macquarie` | Antarctica/Macquarie\n`Antarctica/Mawson` | Antarctica/Mawson\n`Antarctica/McMurdo` | Antarctica/McMurdo\n`Antarctica/Palmer` | Antarctica/Palmer\n`Antarctica/Rothera` | Antarctica/Rothera\n`Antarctica/Syowa` | Antarctica/Syowa\n`Antarctica/Troll` | Antarctica/Troll\n`Antarctica/Vostok` | Antarctica/Vostok\n`Arctic/Longyearbyen` | Arctic/Longyearbyen\n`Asia/Aden` | Asia/Aden\n`Asia/Almaty` | Asia/Almaty\n`Asia/Amman` | Asia/Amman\n`Asia/Anadyr` | Asia/Anadyr\n`Asia/Aqtau` | Asia/Aqtau\n`Asia/Aqtobe` | Asia/Aqtobe\n`Asia/Ashgabat` | Asia/Ashgabat\n`Asia/Baghdad` | Asia/Baghdad\n`Asia/Bahrain` | Asia/Bahrain\n`Asia/Baku` | Asia/Baku\n`Asia/Bangkok` | Asia/Bangkok\n`Asia/Beirut` | Asia/Beirut\n`Asia/Bishkek` | Asia/Bishkek\n`Asia/Brunei` | Asia/Brunei\n`Asia/Chita` | Asia/Chita\n`Asia/Choibalsan` | Asia/Choibalsan\n`Asia/Colombo` | Asia/Colombo\n`Asia/Damascus` | Asia/Damascus\n`Asia/Dhaka` | Asia/Dhaka\n`Asia/Dili` | Asia/Dili\n`Asia/Dubai` | Asia/Dubai\n`Asia/Dushanbe` | Asia/Dushanbe\n`Asia/Gaza` | Asia/Gaza\n`Asia/Hebron` | Asia/Hebron\n`Asia/Ho_Chi_Minh` | Asia/Ho_Chi_Minh\n`Asia/Hong_Kong` | Asia/Hong_Kong\n`Asia/Hovd` | Asia/Hovd\n`Asia/Irkutsk` | Asia/Irkutsk\n`Asia/Jakarta` | Asia/Jakarta\n`Asia/Jayapura` | Asia/Jayapura\n`Asia/Jerusalem` | Asia/Jerusalem\n`Asia/Kabul` | Asia/Kabul\n`Asia/Kamchatka` | Asia/Kamchatka\n`Asia/Karachi` | Asia/Karachi\n`Asia/Kathmandu` | Asia/Kathmandu\n`Asia/Khandyga` | Asia/Khandyga\n`Asia/Kolkata` | Asia/Kolkata\n`Asia/Krasnoyarsk` | Asia/Krasnoyarsk\n`Asia/Kuala_Lumpur` | Asia/Kuala_Lumpur\n`Asia/Kuching` | Asia/Kuching\n`Asia/Kuwait` | Asia/Kuwait\n`Asia/Macau` | Asia/Macau\n`Asia/Magadan` | Asia/Magadan\n`Asia/Makassar` | Asia/Makassar\n`Asia/Manila` | Asia/Manila\n`Asia/Muscat` | Asia/Muscat\n`Asia/Nicosia` | Asia/Nicosia\n`Asia/Novokuznetsk` | Asia/Novokuznetsk\n`Asia/Novosibirsk` | Asia/Novosibirsk\n`Asia/Omsk` | Asia/Omsk\n`Asia/Oral` | Asia/Oral\n`Asia/Phnom_Penh` | Asia/Phnom_Penh\n`Asia/Pontianak` | Asia/Pontianak\n`Asia/Pyongyang` | Asia/Pyongyang\n`Asia/Qatar` | Asia/Qatar\n`Asia/Qyzylorda` | Asia/Qyzylorda\n`Asia/Rangoon` | Asia/Rangoon\n`Asia/Riyadh` | Asia/Riyadh\n`Asia/Sakhalin` | Asia/Sakhalin\n`Asia/Samarkand` | Asia/Samarkand\n`Asia/Seoul` | Asia/Seoul\n`Asia/Shanghai` | Asia/Shanghai\n`Asia/Singapore` | Asia/Singapore\n`Asia/Srednekolymsk` | Asia/Srednekolymsk\n`Asia/Taipei` | Asia/Taipei\n`Asia/Tashkent` | Asia/Tashkent\n`Asia/Tbilisi` | Asia/Tbilisi\n`Asia/Tehran` | Asia/Tehran\n`Asia/Thimphu` | Asia/Thimphu\n`Asia/Tokyo` | Asia/Tokyo\n`Asia/Ulaanbaatar` | Asia/Ulaanbaatar\n`Asia/Urumqi` | Asia/Urumqi\n`Asia/Ust-Nera` | Asia/Ust-Nera\n`Asia/Vientiane` | Asia/Vientiane\n`Asia/Vladivostok` | Asia/Vladivostok\n`Asia/Yakutsk` | Asia/Yakutsk\n`Asia/Yekaterinburg` | Asia/Yekaterinburg\n`Asia/Yerevan` | Asia/Yerevan\n`Atlantic/Azores` | Atlantic/Azores\n`Atlantic/Bermuda` | Atlantic/Bermuda\n`Atlantic/Canary` | Atlantic/Canary\n`Atlantic/Cape_Verde` | Atlantic/Cape_Verde\n`Atlantic/Faroe` | Atlantic/Faroe\n`Atlantic/Madeira` | Atlantic/Madeira\n`Atlantic/Reykjavik` | Atlantic/Reykjavik\n`Atlantic/South_Georgia` | Atlantic/South_Georgia\n`Atlantic/St_Helena` | Atlantic/St_Helena\n`Atlantic/Stanley` | Atlantic/Stanley\n`Australia/Adelaide` | Australia/Adelaide\n`Australia/Brisbane` | Australia/Brisbane\n`Australia/Broken_Hill` | Australia/Broken_Hill\n`Australia/Currie` | Australia/Currie\n`Australia/Darwin` | Australia/Darwin\n`Australia/Eucla` | Australia/Eucla\n`Australia/Hobart` | Australia/Hobart\n`Australia/Lindeman` | Australia/Lindeman\n`Australia/Lord_Howe` | Australia/Lord_Howe\n`Australia/Melbourne` | Australia/Melbourne\n`Australia/Perth` | Australia/Perth\n`Australia/Sydney` | Australia/Sydney\n`Canada/Atlantic` | Canada/Atlantic\n`Canada/Central` | Canada/Central\n`Canada/Eastern` | Canada/Eastern\n`Canada/Mountain` | Canada/Mountain\n`Canada/Newfoundland` | Canada/Newfoundland\n`Canada/Pacific` | Canada/Pacific\n`Europe/Amsterdam` | Europe/Amsterdam\n`Europe/Andorra` | Europe/Andorra\n`Europe/Athens` | Europe/Athens\n`Europe/Belgrade` | Europe/Belgrade\n`Europe/Berlin` | Europe/Berlin\n`Europe/Bratislava` | Europe/Bratislava\n`Europe/Brussels` | Europe/Brussels\n`Europe/Bucharest` | Europe/Bucharest\n`Europe/Budapest` | Europe/Budapest\n`Europe/Busingen` | Europe/Busingen\n`Europe/Chisinau` | Europe/Chisinau\n`Europe/Copenhagen` | Europe/Copenhagen\n`Europe/Dublin` | Europe/Dublin\n`Europe/Gibraltar` | Europe/Gibraltar\n`Europe/Guernsey` | Europe/Guernsey\n`Europe/Helsinki` | Europe/Helsinki\n`Europe/Isle_of_Man` | Europe/Isle_of_Man\n`Europe/Istanbul` | Europe/Istanbul\n`Europe/Jersey` | Europe/Jersey\n`Europe/Kaliningrad` | Europe/Kaliningrad\n`Europe/Kiev` | Europe/Kiev\n`Europe/Lisbon` | Europe/Lisbon\n`Europe/Ljubljana` | Europe/Ljubljana\n`Europe/London` | Europe/London\n`Europe/Luxembourg` | Europe/Luxembourg\n`Europe/Madrid` | Europe/Madrid\n`Europe/Malta` | Europe/Malta\n`Europe/Mariehamn` | Europe/Mariehamn\n`Europe/Minsk` | Europe/Minsk\n`Europe/Monaco` | Europe/Monaco\n`Europe/Moscow` | Europe/Moscow\n`Europe/Oslo` | Europe/Oslo\n`Europe/Paris` | Europe/Paris\n`Europe/Podgorica` | Europe/Podgorica\n`Europe/Prague` | Europe/Prague\n`Europe/Riga` | Europe/Riga\n`Europe/Rome` | Europe/Rome\n`Europe/Samara` | Europe/Samara\n`Europe/San_Marino` | Europe/San_Marino\n`Europe/Sarajevo` | Europe/Sarajevo\n`Europe/Simferopol` | Europe/Simferopol\n`Europe/Skopje` | Europe/Skopje\n`Europe/Sofia` | Europe/Sofia\n`Europe/Stockholm` | Europe/Stockholm\n`Europe/Tallinn` | Europe/Tallinn\n`Europe/Tirane` | Europe/Tirane\n`Europe/Uzhgorod` | Europe/Uzhgorod\n`Europe/Vaduz` | Europe/Vaduz\n`Europe/Vatican` | Europe/Vatican\n`Europe/Vienna` | Europe/Vienna\n`Europe/Vilnius` | Europe/Vilnius\n`Europe/Volgograd` | Europe/Volgograd\n`Europe/Warsaw` | Europe/Warsaw\n`Europe/Zagreb` | Europe/Zagreb\n`Europe/Zaporozhye` | Europe/Zaporozhye\n`Europe/Zurich` | Europe/Zurich\n`GMT` | GMT\n`Indian/Antananarivo` | Indian/Antananarivo\n`Indian/Chagos` | Indian/Chagos\n`Indian/Christmas` | Indian/Christmas\n`Indian/Cocos` | Indian/Cocos\n`Indian/Comoro` | Indian/Comoro\n`Indian/Kerguelen` | Indian/Kerguelen\n`Indian/Mahe` | Indian/Mahe\n`Indian/Maldives` | Indian/Maldives\n`Indian/Mauritius` | Indian/Mauritius\n`Indian/Mayotte` | Indian/Mayotte\n`Indian/Reunion` | Indian/Reunion\n`Pacific/Apia` | Pacific/Apia\n`Pacific/Auckland` | Pacific/Auckland\n`Pacific/Bougainville` | Pacific/Bougainville\n`Pacific/Chatham` | Pacific/Chatham\n`Pacific/Chuuk` | Pacific/Chuuk\n`Pacific/Easter` | Pacific/Easter\n`Pacific/Efate` | Pacific/Efate\n`Pacific/Enderbury` | Pacific/Enderbury\n`Pacific/Fakaofo` | Pacific/Fakaofo\n`Pacific/Fiji` | Pacific/Fiji\n`Pacific/Funafuti` | Pacific/Funafuti\n`Pacific/Galapagos` | Pacific/Galapagos\n`Pacific/Gambier` | Pacific/Gambier\n`Pacific/Guadalcanal` | Pacific/Guadalcanal\n`Pacific/Guam` | Pacific/Guam\n`Pacific/Honolulu` | Pacific/Honolulu\n`Pacific/Johnston` | Pacific/Johnston\n`Pacific/Kiritimati` | Pacific/Kiritimati\n`Pacific/Kosrae` | Pacific/Kosrae\n`Pacific/Kwajalein` | Pacific/Kwajalein\n`Pacific/Majuro` | Pacific/Majuro\n`Pacific/Marquesas` | Pacific/Marquesas\n`Pacific/Midway` | Pacific/Midway\n`Pacific/Nauru` | Pacific/Nauru\n`Pacific/Niue` | Pacific/Niue\n`Pacific/Norfolk` | Pacific/Norfolk\n`Pacific/Noumea` | Pacific/Noumea\n`Pacific/Pago_Pago` | Pacific/Pago_Pago\n`Pacific/Palau` | Pacific/Palau\n`Pacific/Pitcairn` | Pacific/Pitcairn\n`Pacific/Pohnpei` | Pacific/Pohnpei\n`Pacific/Port_Moresby` | Pacific/Port_Moresby\n`Pacific/Rarotonga` | Pacific/Rarotonga\n`Pacific/Saipan` | Pacific/Saipan\n`Pacific/Tahiti` | Pacific/Tahiti\n`Pacific/Tarawa` | Pacific/Tarawa\n`Pacific/Tongatapu` | Pacific/Tongatapu\n`Pacific/Wake` | Pacific/Wake\n`Pacific/Wallis` | Pacific/Wallis\n`US/Alaska` | US/Alaska\n`US/Arizona` | US/Arizona\n`US/Central` | US/Central\n`US/Eastern` | US/Eastern\n`US/Hawaii` | US/Hawaii\n`US/Mountain` | US/Mountain\n`US/Pacific` | US/Pacific\n`UTC` | UTC\n</details>", "example": "America/Chicago"}, "language": {"type": "string", "description": "Choose the language you want Elorus to speak. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n</details>", "example": "en"}, "email_notifications": {"type": "boolean", "description": "Send me an email whenever a new notification is created."}, "first_name_translations": {"type": "object", "description": "How first name will appear when invoicing in other languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "John"}, "de": {"type": "string", "description": "The german translation.", "example": "Johann"}, "el": {"type": "string", "description": "The greek translation.", "example": "John"}, "en": {"type": "string", "description": "The english translation.", "example": "John"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "John"}, "es": {"type": "string", "description": "The spanish translation.", "example": "John"}, "fr": {"type": "string", "description": "The french translation.", "example": "John"}, "it": {"type": "string", "description": "The italian translation.", "example": "John"}}}, "last_name_translations": {"type": "object", "description": "How last name will appear when invoicing in other languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": ""}, "de": {"type": "string", "description": "The german translation.", "example": ""}, "el": {"type": "string", "description": "The greek translation.", "example": ""}, "en": {"type": "string", "description": "The english translation.", "example": ""}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": ""}, "es": {"type": "string", "description": "The spanish translation.", "example": ""}, "fr": {"type": "string", "description": "The french translation.", "example": ""}, "it": {"type": "string", "description": "The italian translation.", "example": ""}}}}}, "name": "data", "in": "body"}], "tags": ["profile"], "summary": "/v1.0/profile/", "operationId": "profile_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"email": {"type": "string", "description": "When changing your email address, a new verification code will be sent to the new email address. You should verify the address within 10 days, otherwise your account will be suspended without any further notice."}, "first_name": {"type": "string", "description": "", "example": "John"}, "last_name": {"type": "string", "description": "", "example": "Doe"}, "phone_number": {"type": "string", "description": "", "example": "662-222-2222"}, "date_joined": {"type": "string", "description": " Timezone information is included.", "example": "2018-09-28T13:48:56.504916Z"}, "timezone": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`Africa/Abidjan` | Africa/Abidjan\n`Africa/Accra` | Africa/Accra\n`Africa/Addis_Ababa` | Africa/Addis_Ababa\n`Africa/Algiers` | Africa/Algiers\n`Africa/Asmara` | Africa/Asmara\n`Africa/Bamako` | Africa/Bamako\n`Africa/Bangui` | Africa/Bangui\n`Africa/Banjul` | Africa/Banjul\n`Africa/Bissau` | Africa/Bissau\n`Africa/Blantyre` | Africa/Blantyre\n`Africa/Brazzaville` | Africa/Brazzaville\n`Africa/Bujumbura` | Africa/Bujumbura\n`Africa/Cairo` | Africa/Cairo\n`Africa/Casablanca` | Africa/Casablanca\n`Africa/Ceuta` | Africa/Ceuta\n`Africa/Conakry` | Africa/Conakry\n`Africa/Dakar` | Africa/Dakar\n`Africa/Dar_es_Salaam` | Africa/Dar_es_Salaam\n`Africa/Djibouti` | Africa/Djibouti\n`Africa/Douala` | Africa/Douala\n`Africa/El_Aaiun` | Africa/El_Aaiun\n`Africa/Freetown` | Africa/Freetown\n`Africa/Gaborone` | Africa/Gaborone\n`Africa/Harare` | Africa/Harare\n`Africa/Johannesburg` | Africa/Johannesburg\n`Africa/Juba` | Africa/Juba\n`Africa/Kampala` | Africa/Kampala\n`Africa/Khartoum` | Africa/Khartoum\n`Africa/Kigali` | Africa/Kigali\n`Africa/Kinshasa` | Africa/Kinshasa\n`Africa/Lagos` | Africa/Lagos\n`Africa/Libreville` | Africa/Libreville\n`Africa/Lome` | Africa/Lome\n`Africa/Luanda` | Africa/Luanda\n`Africa/Lubumbashi` | Africa/Lubumbashi\n`Africa/Lusaka` | Africa/Lusaka\n`Africa/Malabo` | Africa/Malabo\n`Africa/Maputo` | Africa/Maputo\n`Africa/Maseru` | Africa/Maseru\n`Africa/Mbabane` | Africa/Mbabane\n`Africa/Mogadishu` | Africa/Mogadishu\n`Africa/Monrovia` | Africa/Monrovia\n`Africa/Nairobi` | Africa/Nairobi\n`Africa/Ndjamena` | Africa/Ndjamena\n`Africa/Niamey` | Africa/Niamey\n`Africa/Nouakchott` | Africa/Nouakchott\n`Africa/Ouagadougou` | Africa/Ouagadougou\n`Africa/Porto-Novo` | Africa/Porto-Novo\n`Africa/Sao_Tome` | Africa/Sao_Tome\n`Africa/Tripoli` | Africa/Tripoli\n`Africa/Tunis` | Africa/Tunis\n`Africa/Windhoek` | Africa/Windhoek\n`America/Adak` | America/Adak\n`America/Anchorage` | America/Anchorage\n`America/Anguilla` | America/Anguilla\n`America/Antigua` | America/Antigua\n`America/Araguaina` | America/Araguaina\n`America/Argentina/Buenos_Aires` | America/Argentina/Buenos_Aires\n`America/Argentina/Catamarca` | America/Argentina/Catamarca\n`America/Argentina/Cordoba` | America/Argentina/Cordoba\n`America/Argentina/Jujuy` | America/Argentina/Jujuy\n`America/Argentina/La_Rioja` | America/Argentina/La_Rioja\n`America/Argentina/Mendoza` | America/Argentina/Mendoza\n`America/Argentina/Rio_Gallegos` | America/Argentina/Rio_Gallegos\n`America/Argentina/Salta` | America/Argentina/Salta\n`America/Argentina/San_Juan` | America/Argentina/San_Juan\n`America/Argentina/San_Luis` | America/Argentina/San_Luis\n`America/Argentina/Tucuman` | America/Argentina/Tucuman\n`America/Argentina/Ushuaia` | America/Argentina/Ushuaia\n`America/Aruba` | America/Aruba\n`America/Asuncion` | America/Asuncion\n`America/Atikokan` | America/Atikokan\n`America/Bahia` | America/Bahia\n`America/Bahia_Banderas` | America/Bahia_Banderas\n`America/Barbados` | America/Barbados\n`America/Belem` | America/Belem\n`America/Belize` | America/Belize\n`America/Blanc-Sablon` | America/Blanc-Sablon\n`America/Boa_Vista` | America/Boa_Vista\n`America/Bogota` | America/Bogota\n`America/Boise` | America/Boise\n`America/Cambridge_Bay` | America/Cambridge_Bay\n`America/Campo_Grande` | America/Campo_Grande\n`America/Cancun` | America/Cancun\n`America/Caracas` | America/Caracas\n`America/Cayenne` | America/Cayenne\n`America/Cayman` | America/Cayman\n`America/Chicago` | America/Chicago\n`America/Chihuahua` | America/Chihuahua\n`America/Costa_Rica` | America/Costa_Rica\n`America/Creston` | America/Creston\n`America/Cuiaba` | America/Cuiaba\n`America/Curacao` | America/Curacao\n`America/Danmarkshavn` | America/Danmarkshavn\n`America/Dawson` | America/Dawson\n`America/Dawson_Creek` | America/Dawson_Creek\n`America/Denver` | America/Denver\n`America/Detroit` | America/Detroit\n`America/Dominica` | America/Dominica\n`America/Edmonton` | America/Edmonton\n`America/Eirunepe` | America/Eirunepe\n`America/El_Salvador` | America/El_Salvador\n`America/Fortaleza` | America/Fortaleza\n`America/Glace_Bay` | America/Glace_Bay\n`America/Godthab` | America/Godthab\n`America/Goose_Bay` | America/Goose_Bay\n`America/Grand_Turk` | America/Grand_Turk\n`America/Grenada` | America/Grenada\n`America/Guadeloupe` | America/Guadeloupe\n`America/Guatemala` | America/Guatemala\n`America/Guayaquil` | America/Guayaquil\n`America/Guyana` | America/Guyana\n`America/Halifax` | America/Halifax\n`America/Havana` | America/Havana\n`America/Hermosillo` | America/Hermosillo\n`America/Indiana/Indianapolis` | America/Indiana/Indianapolis\n`America/Indiana/Knox` | America/Indiana/Knox\n`America/Indiana/Marengo` | America/Indiana/Marengo\n`America/Indiana/Petersburg` | America/Indiana/Petersburg\n`America/Indiana/Tell_City` | America/Indiana/Tell_City\n`America/Indiana/Vevay` | America/Indiana/Vevay\n`America/Indiana/Vincennes` | America/Indiana/Vincennes\n`America/Indiana/Winamac` | America/Indiana/Winamac\n`America/Inuvik` | America/Inuvik\n`America/Iqaluit` | America/Iqaluit\n`America/Jamaica` | America/Jamaica\n`America/Juneau` | America/Juneau\n`America/Kentucky/Louisville` | America/Kentucky/Louisville\n`America/Kentucky/Monticello` | America/Kentucky/Monticello\n`America/Kralendijk` | America/Kralendijk\n`America/La_Paz` | America/La_Paz\n`America/Lima` | America/Lima\n`America/Los_Angeles` | America/Los_Angeles\n`America/Lower_Princes` | America/Lower_Princes\n`America/Maceio` | America/Maceio\n`America/Managua` | America/Managua\n`America/Manaus` | America/Manaus\n`America/Marigot` | America/Marigot\n`America/Martinique` | America/Martinique\n`America/Matamoros` | America/Matamoros\n`America/Mazatlan` | America/Mazatlan\n`America/Menominee` | America/Menominee\n`America/Merida` | America/Merida\n`America/Metlakatla` | America/Metlakatla\n`America/Mexico_City` | America/Mexico_City\n`America/Miquelon` | America/Miquelon\n`America/Moncton` | America/Moncton\n`America/Monterrey` | America/Monterrey\n`America/Montevideo` | America/Montevideo\n`America/Montreal` | America/Montreal\n`America/Montserrat` | America/Montserrat\n`America/Nassau` | America/Nassau\n`America/New_York` | America/New_York\n`America/Nipigon` | America/Nipigon\n`America/Nome` | America/Nome\n`America/Noronha` | America/Noronha\n`America/North_Dakota/Beulah` | America/North_Dakota/Beulah\n`America/North_Dakota/Center` | America/North_Dakota/Center\n`America/North_Dakota/New_Salem` | America/North_Dakota/New_Salem\n`America/Ojinaga` | America/Ojinaga\n`America/Panama` | America/Panama\n`America/Pangnirtung` | America/Pangnirtung\n`America/Paramaribo` | America/Paramaribo\n`America/Phoenix` | America/Phoenix\n`America/Port-au-Prince` | America/Port-au-Prince\n`America/Port_of_Spain` | America/Port_of_Spain\n`America/Porto_Velho` | America/Porto_Velho\n`America/Puerto_Rico` | America/Puerto_Rico\n`America/Rainy_River` | America/Rainy_River\n`America/Rankin_Inlet` | America/Rankin_Inlet\n`America/Recife` | America/Recife\n`America/Regina` | America/Regina\n`America/Resolute` | America/Resolute\n`America/Rio_Branco` | America/Rio_Branco\n`America/Santa_Isabel` | America/Santa_Isabel\n`America/Santarem` | America/Santarem\n`America/Santiago` | America/Santiago\n`America/Santo_Domingo` | America/Santo_Domingo\n`America/Sao_Paulo` | America/Sao_Paulo\n`America/Scoresbysund` | America/Scoresbysund\n`America/Sitka` | America/Sitka\n`America/St_Barthelemy` | America/St_Barthelemy\n`America/St_Johns` | America/St_Johns\n`America/St_Kitts` | America/St_Kitts\n`America/St_Lucia` | America/St_Lucia\n`America/St_Thomas` | America/St_Thomas\n`America/St_Vincent` | America/St_Vincent\n`America/Swift_Current` | America/Swift_Current\n`America/Tegucigalpa` | America/Tegucigalpa\n`America/Thule` | America/Thule\n`America/Thunder_Bay` | America/Thunder_Bay\n`America/Tijuana` | America/Tijuana\n`America/Toronto` | America/Toronto\n`America/Tortola` | America/Tortola\n`America/Vancouver` | America/Vancouver\n`America/Whitehorse` | America/Whitehorse\n`America/Winnipeg` | America/Winnipeg\n`America/Yakutat` | America/Yakutat\n`America/Yellowknife` | America/Yellowknife\n`Antarctica/Casey` | Antarctica/Casey\n`Antarctica/Davis` | Antarctica/Davis\n`Antarctica/DumontDUrville` | Antarctica/DumontDUrville\n`Antarctica/Macquarie` | Antarctica/Macquarie\n`Antarctica/Mawson` | Antarctica/Mawson\n`Antarctica/McMurdo` | Antarctica/McMurdo\n`Antarctica/Palmer` | Antarctica/Palmer\n`Antarctica/Rothera` | Antarctica/Rothera\n`Antarctica/Syowa` | Antarctica/Syowa\n`Antarctica/Troll` | Antarctica/Troll\n`Antarctica/Vostok` | Antarctica/Vostok\n`Arctic/Longyearbyen` | Arctic/Longyearbyen\n`Asia/Aden` | Asia/Aden\n`Asia/Almaty` | Asia/Almaty\n`Asia/Amman` | Asia/Amman\n`Asia/Anadyr` | Asia/Anadyr\n`Asia/Aqtau` | Asia/Aqtau\n`Asia/Aqtobe` | Asia/Aqtobe\n`Asia/Ashgabat` | Asia/Ashgabat\n`Asia/Baghdad` | Asia/Baghdad\n`Asia/Bahrain` | Asia/Bahrain\n`Asia/Baku` | Asia/Baku\n`Asia/Bangkok` | Asia/Bangkok\n`Asia/Beirut` | Asia/Beirut\n`Asia/Bishkek` | Asia/Bishkek\n`Asia/Brunei` | Asia/Brunei\n`Asia/Chita` | Asia/Chita\n`Asia/Choibalsan` | Asia/Choibalsan\n`Asia/Colombo` | Asia/Colombo\n`Asia/Damascus` | Asia/Damascus\n`Asia/Dhaka` | Asia/Dhaka\n`Asia/Dili` | Asia/Dili\n`Asia/Dubai` | Asia/Dubai\n`Asia/Dushanbe` | Asia/Dushanbe\n`Asia/Gaza` | Asia/Gaza\n`Asia/Hebron` | Asia/Hebron\n`Asia/Ho_Chi_Minh` | Asia/Ho_Chi_Minh\n`Asia/Hong_Kong` | Asia/Hong_Kong\n`Asia/Hovd` | Asia/Hovd\n`Asia/Irkutsk` | Asia/Irkutsk\n`Asia/Jakarta` | Asia/Jakarta\n`Asia/Jayapura` | Asia/Jayapura\n`Asia/Jerusalem` | Asia/Jerusalem\n`Asia/Kabul` | Asia/Kabul\n`Asia/Kamchatka` | Asia/Kamchatka\n`Asia/Karachi` | Asia/Karachi\n`Asia/Kathmandu` | Asia/Kathmandu\n`Asia/Khandyga` | Asia/Khandyga\n`Asia/Kolkata` | Asia/Kolkata\n`Asia/Krasnoyarsk` | Asia/Krasnoyarsk\n`Asia/Kuala_Lumpur` | Asia/Kuala_Lumpur\n`Asia/Kuching` | Asia/Kuching\n`Asia/Kuwait` | Asia/Kuwait\n`Asia/Macau` | Asia/Macau\n`Asia/Magadan` | Asia/Magadan\n`Asia/Makassar` | Asia/Makassar\n`Asia/Manila` | Asia/Manila\n`Asia/Muscat` | Asia/Muscat\n`Asia/Nicosia` | Asia/Nicosia\n`Asia/Novokuznetsk` | Asia/Novokuznetsk\n`Asia/Novosibirsk` | Asia/Novosibirsk\n`Asia/Omsk` | Asia/Omsk\n`Asia/Oral` | Asia/Oral\n`Asia/Phnom_Penh` | Asia/Phnom_Penh\n`Asia/Pontianak` | Asia/Pontianak\n`Asia/Pyongyang` | Asia/Pyongyang\n`Asia/Qatar` | Asia/Qatar\n`Asia/Qyzylorda` | Asia/Qyzylorda\n`Asia/Rangoon` | Asia/Rangoon\n`Asia/Riyadh` | Asia/Riyadh\n`Asia/Sakhalin` | Asia/Sakhalin\n`Asia/Samarkand` | Asia/Samarkand\n`Asia/Seoul` | Asia/Seoul\n`Asia/Shanghai` | Asia/Shanghai\n`Asia/Singapore` | Asia/Singapore\n`Asia/Srednekolymsk` | Asia/Srednekolymsk\n`Asia/Taipei` | Asia/Taipei\n`Asia/Tashkent` | Asia/Tashkent\n`Asia/Tbilisi` | Asia/Tbilisi\n`Asia/Tehran` | Asia/Tehran\n`Asia/Thimphu` | Asia/Thimphu\n`Asia/Tokyo` | Asia/Tokyo\n`Asia/Ulaanbaatar` | Asia/Ulaanbaatar\n`Asia/Urumqi` | Asia/Urumqi\n`Asia/Ust-Nera` | Asia/Ust-Nera\n`Asia/Vientiane` | Asia/Vientiane\n`Asia/Vladivostok` | Asia/Vladivostok\n`Asia/Yakutsk` | Asia/Yakutsk\n`Asia/Yekaterinburg` | Asia/Yekaterinburg\n`Asia/Yerevan` | Asia/Yerevan\n`Atlantic/Azores` | Atlantic/Azores\n`Atlantic/Bermuda` | Atlantic/Bermuda\n`Atlantic/Canary` | Atlantic/Canary\n`Atlantic/Cape_Verde` | Atlantic/Cape_Verde\n`Atlantic/Faroe` | Atlantic/Faroe\n`Atlantic/Madeira` | Atlantic/Madeira\n`Atlantic/Reykjavik` | Atlantic/Reykjavik\n`Atlantic/South_Georgia` | Atlantic/South_Georgia\n`Atlantic/St_Helena` | Atlantic/St_Helena\n`Atlantic/Stanley` | Atlantic/Stanley\n`Australia/Adelaide` | Australia/Adelaide\n`Australia/Brisbane` | Australia/Brisbane\n`Australia/Broken_Hill` | Australia/Broken_Hill\n`Australia/Currie` | Australia/Currie\n`Australia/Darwin` | Australia/Darwin\n`Australia/Eucla` | Australia/Eucla\n`Australia/Hobart` | Australia/Hobart\n`Australia/Lindeman` | Australia/Lindeman\n`Australia/Lord_Howe` | Australia/Lord_Howe\n`Australia/Melbourne` | Australia/Melbourne\n`Australia/Perth` | Australia/Perth\n`Australia/Sydney` | Australia/Sydney\n`Canada/Atlantic` | Canada/Atlantic\n`Canada/Central` | Canada/Central\n`Canada/Eastern` | Canada/Eastern\n`Canada/Mountain` | Canada/Mountain\n`Canada/Newfoundland` | Canada/Newfoundland\n`Canada/Pacific` | Canada/Pacific\n`Europe/Amsterdam` | Europe/Amsterdam\n`Europe/Andorra` | Europe/Andorra\n`Europe/Athens` | Europe/Athens\n`Europe/Belgrade` | Europe/Belgrade\n`Europe/Berlin` | Europe/Berlin\n`Europe/Bratislava` | Europe/Bratislava\n`Europe/Brussels` | Europe/Brussels\n`Europe/Bucharest` | Europe/Bucharest\n`Europe/Budapest` | Europe/Budapest\n`Europe/Busingen` | Europe/Busingen\n`Europe/Chisinau` | Europe/Chisinau\n`Europe/Copenhagen` | Europe/Copenhagen\n`Europe/Dublin` | Europe/Dublin\n`Europe/Gibraltar` | Europe/Gibraltar\n`Europe/Guernsey` | Europe/Guernsey\n`Europe/Helsinki` | Europe/Helsinki\n`Europe/Isle_of_Man` | Europe/Isle_of_Man\n`Europe/Istanbul` | Europe/Istanbul\n`Europe/Jersey` | Europe/Jersey\n`Europe/Kaliningrad` | Europe/Kaliningrad\n`Europe/Kiev` | Europe/Kiev\n`Europe/Lisbon` | Europe/Lisbon\n`Europe/Ljubljana` | Europe/Ljubljana\n`Europe/London` | Europe/London\n`Europe/Luxembourg` | Europe/Luxembourg\n`Europe/Madrid` | Europe/Madrid\n`Europe/Malta` | Europe/Malta\n`Europe/Mariehamn` | Europe/Mariehamn\n`Europe/Minsk` | Europe/Minsk\n`Europe/Monaco` | Europe/Monaco\n`Europe/Moscow` | Europe/Moscow\n`Europe/Oslo` | Europe/Oslo\n`Europe/Paris` | Europe/Paris\n`Europe/Podgorica` | Europe/Podgorica\n`Europe/Prague` | Europe/Prague\n`Europe/Riga` | Europe/Riga\n`Europe/Rome` | Europe/Rome\n`Europe/Samara` | Europe/Samara\n`Europe/San_Marino` | Europe/San_Marino\n`Europe/Sarajevo` | Europe/Sarajevo\n`Europe/Simferopol` | Europe/Simferopol\n`Europe/Skopje` | Europe/Skopje\n`Europe/Sofia` | Europe/Sofia\n`Europe/Stockholm` | Europe/Stockholm\n`Europe/Tallinn` | Europe/Tallinn\n`Europe/Tirane` | Europe/Tirane\n`Europe/Uzhgorod` | Europe/Uzhgorod\n`Europe/Vaduz` | Europe/Vaduz\n`Europe/Vatican` | Europe/Vatican\n`Europe/Vienna` | Europe/Vienna\n`Europe/Vilnius` | Europe/Vilnius\n`Europe/Volgograd` | Europe/Volgograd\n`Europe/Warsaw` | Europe/Warsaw\n`Europe/Zagreb` | Europe/Zagreb\n`Europe/Zaporozhye` | Europe/Zaporozhye\n`Europe/Zurich` | Europe/Zurich\n`GMT` | GMT\n`Indian/Antananarivo` | Indian/Antananarivo\n`Indian/Chagos` | Indian/Chagos\n`Indian/Christmas` | Indian/Christmas\n`Indian/Cocos` | Indian/Cocos\n`Indian/Comoro` | Indian/Comoro\n`Indian/Kerguelen` | Indian/Kerguelen\n`Indian/Mahe` | Indian/Mahe\n`Indian/Maldives` | Indian/Maldives\n`Indian/Mauritius` | Indian/Mauritius\n`Indian/Mayotte` | Indian/Mayotte\n`Indian/Reunion` | Indian/Reunion\n`Pacific/Apia` | Pacific/Apia\n`Pacific/Auckland` | Pacific/Auckland\n`Pacific/Bougainville` | Pacific/Bougainville\n`Pacific/Chatham` | Pacific/Chatham\n`Pacific/Chuuk` | Pacific/Chuuk\n`Pacific/Easter` | Pacific/Easter\n`Pacific/Efate` | Pacific/Efate\n`Pacific/Enderbury` | Pacific/Enderbury\n`Pacific/Fakaofo` | Pacific/Fakaofo\n`Pacific/Fiji` | Pacific/Fiji\n`Pacific/Funafuti` | Pacific/Funafuti\n`Pacific/Galapagos` | Pacific/Galapagos\n`Pacific/Gambier` | Pacific/Gambier\n`Pacific/Guadalcanal` | Pacific/Guadalcanal\n`Pacific/Guam` | Pacific/Guam\n`Pacific/Honolulu` | Pacific/Honolulu\n`Pacific/Johnston` | Pacific/Johnston\n`Pacific/Kiritimati` | Pacific/Kiritimati\n`Pacific/Kosrae` | Pacific/Kosrae\n`Pacific/Kwajalein` | Pacific/Kwajalein\n`Pacific/Majuro` | Pacific/Majuro\n`Pacific/Marquesas` | Pacific/Marquesas\n`Pacific/Midway` | Pacific/Midway\n`Pacific/Nauru` | Pacific/Nauru\n`Pacific/Niue` | Pacific/Niue\n`Pacific/Norfolk` | Pacific/Norfolk\n`Pacific/Noumea` | Pacific/Noumea\n`Pacific/Pago_Pago` | Pacific/Pago_Pago\n`Pacific/Palau` | Pacific/Palau\n`Pacific/Pitcairn` | Pacific/Pitcairn\n`Pacific/Pohnpei` | Pacific/Pohnpei\n`Pacific/Port_Moresby` | Pacific/Port_Moresby\n`Pacific/Rarotonga` | Pacific/Rarotonga\n`Pacific/Saipan` | Pacific/Saipan\n`Pacific/Tahiti` | Pacific/Tahiti\n`Pacific/Tarawa` | Pacific/Tarawa\n`Pacific/Tongatapu` | Pacific/Tongatapu\n`Pacific/Wake` | Pacific/Wake\n`Pacific/Wallis` | Pacific/Wallis\n`US/Alaska` | US/Alaska\n`US/Arizona` | US/Arizona\n`US/Central` | US/Central\n`US/Eastern` | US/Eastern\n`US/Hawaii` | US/Hawaii\n`US/Mountain` | US/Mountain\n`US/Pacific` | US/Pacific\n`UTC` | UTC\n</details>", "example": "America/Chicago"}, "language": {"type": "string", "description": "Choose the language you want Elorus to speak. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n</details>", "example": "en"}, "email_notifications": {"type": "boolean", "description": "Send me an email whenever a new notification is created."}, "first_name_translations": {"type": "object", "description": "How first name will appear when invoicing in other languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "John"}, "de": {"type": "string", "description": "The german translation.", "example": "Johann"}, "el": {"type": "string", "description": "The greek translation.", "example": "John"}, "en": {"type": "string", "description": "The english translation.", "example": "John"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "John"}, "es": {"type": "string", "description": "The spanish translation.", "example": "John"}, "fr": {"type": "string", "description": "The french translation.", "example": "John"}, "it": {"type": "string", "description": "The italian translation.", "example": "John"}}}, "last_name_translations": {"type": "object", "description": "How last name will appear when invoicing in other languages.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": ""}, "de": {"type": "string", "description": "The german translation.", "example": ""}, "el": {"type": "string", "description": "The greek translation.", "example": ""}, "en": {"type": "string", "description": "The english translation.", "example": ""}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": ""}, "es": {"type": "string", "description": "The spanish translation.", "example": ""}, "fr": {"type": "string", "description": "The french translation.", "example": ""}, "it": {"type": "string", "description": "The italian translation.", "example": ""}}}, "last_login": {"type": "string", "description": " Timezone information is included.", "example": "2018-09-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/purchasecreditnotes/": {"get": {"description": "Get the list of supplier credits.\n---\nThe response does not include all the supplier credit details.\nTo retrieve more information about a specific record, use the\n[single supplier credit](#operation/purchasecreditnotes_read)\nendpoint.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `supplier__display_name`, `notes`, `items__description`."}, {"required": false, "type": "string", "name": "draft", "in": "query", "description": "Optionally filter by draft status. Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "fpaid", "in": "query", "description": "Optionally filter on whether the invoice is paid or not. Can be either `yes` or `no`."}, {"required": false, "type": "string", "name": "is_void", "in": "query", "description": "Optionally filter by void status. Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "supplier", "in": "query", "description": "Optionally filter by supplier ID."}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `date`, `supplier__display_name`, `total`, `initial`, `net`, `draft`, `paid`, `payable`. Prepend a `-` to denote reverse ordering (e.g `-date`)."}, {"required": false, "type": "string", "name": "period_from", "in": "query", "description": "Optionally filter results from a date onwards.Must be used with the `period_to` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}, {"required": false, "type": "string", "name": "period_to", "in": "query", "description": "Optionally filter results from a date backwards.Must be used with the `period_from` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}], "tags": ["purchasecreditnotes"], "summary": "/v1.0/purchasecreditnotes/", "operationId": "purchasecreditnotes_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n</details>", "example": "paid"}, "series_number": {"type": "string", "description": "", "example": "ABC111"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Credit note #ABC111"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new supplier credit.\n---\nTo create a new supplier credit, you must first specify the supplier.\nIf you do not specify a the currency code, the supplier's\ndefault currency will have a higher priority than your base currency.\n\n#### Supplier credit lines & amounts\nThe supplier credit's initial, net and total amount will\nbe calculated automatically and their values will depend\non the calculator mode and the line items.\n\nWhen it comes to the supplier credit's lines, you may associate each\nline with an [inventory product](#tag/products). In this case you can\nomit the `description`, `measurement unit` and `value` fields\nto have them copied over form product record.\nOnce again, if you choose to explicitly specify any of these fields,\nyou end up overriding the default values of the product record.\n\nRemember that if you do not care about the details,\nyou can always just send the total amounts in a single line.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["supplier", "calculator_mode", "items", "withholding_taxes"], "type": "object", "properties": {"draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "series_number": {"type": "string", "description": "", "example": "ABC111"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"items": {"type": "string", "description": ""}, "type": "array", "description": "A list of the applied tax IDs.", "example": ["6600230050000705"]}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "required": true, "type": "array", "name": "items", "description": "Line items of a supplier credit."}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["purchasecreditnotes"], "summary": "/v1.0/purchasecreditnotes/", "operationId": "purchasecreditnotes_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n</details>", "example": "paid"}, "series_number": {"type": "string", "description": "", "example": "ABC111"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Credit note #ABC111"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of a supplier credit."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/purchasecreditnotes/{id}/": {"get": {"description": "Get a single supplier credit.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["purchasecreditnotes"], "summary": "/v1.0/purchasecreditnotes/{id}/", "operationId": "purchasecreditnotes_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n</details>", "example": "paid"}, "series_number": {"type": "string", "description": "", "example": "ABC111"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Credit note #ABC111"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of a supplier credit."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a supplier credit.\n---\nYou must send all required fields for the record to be\nsuccessfully updated. You may only modify draft supplier credits. To\nupdate issued supplier credits, you should first mark them\nas draft via the [partial update\nendpoint](#operation/purchasecreditnotes_partial_update).\n\nTo update the line items, the endpoint expects that you send\na complete list of the new items. For existing lines\nyou must send over their IDs (as returned by the\n[retrieve endpoint](#operation/purchasecreditnotes_read))\nalong with any possible changes. If there exist any lines whose\nIDs are not sent, they will be deleted. Accordingly, lines for which\nyou send no ID will result in creating new items.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["supplier", "calculator_mode", "items", "withholding_taxes"], "type": "object", "properties": {"draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "series_number": {"type": "string", "description": "", "example": "ABC111"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"items": {"type": "string", "description": ""}, "type": "array", "description": "A list of the applied tax IDs.", "example": ["6600230050000705"]}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "required": true, "type": "array", "name": "items", "description": "Line items of a supplier credit."}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["purchasecreditnotes"], "summary": "/v1.0/purchasecreditnotes/{id}/", "operationId": "purchasecreditnotes_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n</details>", "example": "paid"}, "series_number": {"type": "string", "description": "", "example": "ABC111"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Credit note #ABC111"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of a supplier credit."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a supplier credit.\n---\nUse this action to update the private notes or change the status.\nSince this method does not affect the line items\nand values you can always use it regardless the supplier credit status.\nOn the other hand, the\n[full update action](#operation/purchasecreditnotes_update)\nis only available when the supplier credit is in draft mode.\n\nPlease not that you cannot mark void supplier credits as draft, unless\nyou [un-void](#operation/purchasecreditnotes_mark_void) them first.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["purchasecreditnotes"], "summary": "/v1.0/purchasecreditnotes/{id}/", "operationId": "purchasecreditnotes_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n</details>", "example": "paid"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Credit note #ABC111"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a supplier credit.\n---\nNote that you cannot delete supplier credits marked as issued\n(i.e. the `draft` field is set to `false`).", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["purchasecreditnotes"], "summary": "/v1.0/purchasecreditnotes/{id}/", "operationId": "purchasecreditnotes_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/purchasecreditnotes/{id}/void/": {"put": {"description": "Mark as void / Un-Void\n---\nMark the document as void or convert it from void back to issued.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"void": {"type": "boolean", "description": "Whether to void or un-void the document.If not sent, `true` will be assumed."}}}, "name": "data", "in": "body"}], "tags": ["purchasecreditnotes"], "summary": "/v1.0/purchasecreditnotes/{id}/void/", "operationId": "purchasecreditnotes_mark_void", "consumes": ["application/json"], "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/purchasecreditnotes/{parent_pk}/attachments/": {"get": {"description": "Get the list of attachments.\n---\nThe list of attachments for the specified record.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}], "tags": ["purchasecreditnotes"], "summary": "/v1.0/purchasecreditnotes/{parent_pk}/attachments/", "operationId": "purchasecreditnotes_attachments_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new attachment.\n---\nAdds a new attachment to the specified record.\nThe actual attachment file must be sent within the request body.\n**Incoming data must be encoded as `multipart/form-data`**.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}, {"required": true, "type": "string", "name": "file", "in": "formData", "description": "The actual file data"}], "tags": ["purchasecreditnotes"], "summary": "/v1.0/purchasecreditnotes/{parent_pk}/attachments/", "operationId": "purchasecreditnotes_attachments_create", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/purchasecreditnotes/{parent_pk}/attachments/{id}/": {"get": {"description": "Get a single attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["purchasecreditnotes"], "summary": "/v1.0/purchasecreditnotes/{parent_pk}/attachments/{id}/", "operationId": "purchasecreditnotes_attachments_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "patch": {"description": "Partially update an attachment.\n---\nYou may change the attachment title but you cannot\nreplace the actual file. **Incoming data\nmust be encoded as `multipart/form-data`.**", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}], "tags": ["purchasecreditnotes"], "summary": "/v1.0/purchasecreditnotes/{parent_pk}/attachments/{id}/", "operationId": "purchasecreditnotes_attachments_partial_update", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete an attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["purchasecreditnotes"], "summary": "/v1.0/purchasecreditnotes/{parent_pk}/attachments/{id}/", "operationId": "purchasecreditnotes_attachments_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/purchasecreditnotes/{parent_pk}/attachments/{id}/file/": {"get": {"description": "Get the actual attachment file.\n---\nThis endpoint may return a `307` redirect response.\nTo retrieve the file you should follow the redirection.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["purchasecreditnotes"], "summary": "/v1.0/purchasecreditnotes/{parent_pk}/attachments/{id}/file/", "operationId": "purchasecreditnotes_attachments_file", "responses": {"200": {"description": "Success"}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/purchases/": {"get": {"description": "Get the list of bills.\n---\nThe response does not include all the bill details.\nTo retrieve more information about a specific bill, use\nthe [single bill](#operation/purchases_read) endpoint.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `supplier__display_name`, `notes`, `items__description`."}, {"required": false, "type": "string", "name": "draft", "in": "query", "description": "Optionally filter by draft status. Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "fpaid", "in": "query", "description": "Optionally filter on whether the invoice is paid or not. Can be either `yes` or `no`."}, {"required": false, "type": "string", "name": "is_void", "in": "query", "description": "Optionally filter by void status. Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "overdue", "in": "query", "description": "Optionally filter by whether the invoice is overdue or not. Can be either `yes` or `no`."}, {"required": false, "type": "string", "name": "supplier", "in": "query", "description": "Optionally filter by supplier ID."}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `date`, `supplier__display_name`, `total`, `initial`, `net`, `draft`, `paid`, `payable`, `due_date`. Prepend a `-` to denote reverse ordering (e.g `-date`)."}, {"required": false, "type": "string", "name": "period_from", "in": "query", "description": "Optionally filter results from a date onwards.Must be used with the `period_to` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}, {"required": false, "type": "string", "name": "period_to", "in": "query", "description": "Optionally filter results from a date backwards.Must be used with the `period_from` parameter, otherwise it won't have any effect. Date must be in the form of `YYYY-mm-dd`."}], "tags": ["purchases"], "summary": "/v1.0/purchases/", "operationId": "purchases_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>", "example": "paid"}, "series_number": {"type": "string", "description": "", "example": "ABC111"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Invoice #ABC111"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "Expected payment date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "recurring": {"type": "string", "description": "ID of the recurring record that created this document (if any).", "example": "9900000040000900"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new bill.\n---\nTo create a new bill, you must first specify the supplier.\nIf you do not specify a the currency code, the supplier's\ndefault currency will have a higher priority than your base currency.\n\n#### Bill lines & amounts\nThe bill's initial, net and total amount will be calculated\nautomatically and their values will depend on the calculator\nmode and the line items.\n\nWhen it comes to the bill lines, you may associate each\nline with an [inventory product](#tag/products). In this case you can\nomit the `description`, `measurement unit` and `value` fields\nto have them copied over form product record.\nOnce again, if you choose to explicitly specify any of these fields,\nyou end up overriding the default values of the product record.\n\nRemember that if you do not care about the invoice details,\nyou can always just send the total amounts in a single line.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["supplier", "calculator_mode", "items", "withholding_taxes"], "type": "object", "properties": {"draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "series_number": {"type": "string", "description": "", "example": "ABC111"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "Expected payment date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"items": {"type": "string", "description": ""}, "type": "array", "description": "A list of the applied tax IDs.", "example": ["6600230050000705"]}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "required": true, "type": "array", "name": "items", "description": "Line items of a bill."}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["purchases"], "summary": "/v1.0/purchases/", "operationId": "purchases_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>", "example": "paid"}, "series_number": {"type": "string", "description": "", "example": "ABC111"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Invoice #ABC111"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "Expected payment date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of a bill."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "recurring": {"type": "string", "description": "ID of the recurring record that created this document (if any).", "example": "9900000040000900"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/purchases/{id}/": {"get": {"description": "Get a single bill.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["purchases"], "summary": "/v1.0/purchases/{id}/", "operationId": "purchases_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>", "example": "paid"}, "series_number": {"type": "string", "description": "", "example": "ABC111"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Invoice #ABC111"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "Expected payment date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of a bill."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "recurring": {"type": "string", "description": "ID of the recurring record that created this document (if any).", "example": "9900000040000900"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a bill.\n---\nYou must send all required fields for the record to be\nsuccessfully updated. You may only modify draft bills. To\nupdate issued bills, you should first mark them as draft\nvia the [partial update endpoint](#operation/purchases_partial_update).\n\nTo update the line items, the endpoint expects that you send\na complete list of the new items. For existing lines\nyou must send over their IDs (as returned by the\n[retrieve endpoint](#operation/purchases_read))\nalong with any possible changes. If there exist any lines whose\nIDs are not sent, they will be deleted. Accordingly, lines for which\nyou send no ID will result in creating new items.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["supplier", "calculator_mode", "items", "withholding_taxes"], "type": "object", "properties": {"draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "series_number": {"type": "string", "description": "", "example": "ABC111"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "Expected payment date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"items": {"type": "string", "description": ""}, "type": "array", "description": "A list of the applied tax IDs.", "example": ["6600230050000705"]}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "required": true, "type": "array", "name": "items", "description": "Line items of a bill."}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["purchases"], "summary": "/v1.0/purchases/{id}/", "operationId": "purchases_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>", "example": "paid"}, "series_number": {"type": "string", "description": "", "example": "ABC111"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Invoice #ABC111"}, "date": {"type": "string", "description": "The issue date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "due_date": {"type": "string", "description": "Expected payment date. Date is in the form of `YYYY-mm-dd`.", "example": "2018-11-25"}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of a bill."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "paid": {"type": "string", "description": "Total paid amount. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "recurring": {"type": "string", "description": "ID of the recurring record that created this document (if any).", "example": "9900000040000900"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a bill.\n---\nUse this action to update the private notes or change the status.\nSince this method does not modify the line items\nand amounts you can always use it regardless the bill status.\nOn the other hand, the\n[full update action](#operation/purchases_update) is only applicable\nto draft bills.\n\nPlease not that you cannot mark void bills as draft, unless\nyou [un-void](#operation/purchases_mark_void) them first.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["purchases"], "summary": "/v1.0/purchases/{id}/", "operationId": "purchases_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "draft": {"type": "boolean", "description": "If `true` the document is considered to be a work in progress.", "example": false}, "status": {"type": "string", "description": "Automatically generated status. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`draft` | Draft\n`issued` | Issued\n`partial` | Partially paid\n`paid` | Paid\n`void` | Void\n`overdue` | Overdue\n</details>", "example": "paid"}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "Invoice #ABC111"}, "notes": {"type": "string", "description": "These notes are private.", "example": "Some notes"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a bill.\n---\nNote that you cannot delete bills marked as issued\n(i.e. the `draft` field is set to `false`).", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["purchases"], "summary": "/v1.0/purchases/{id}/", "operationId": "purchases_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/purchases/{id}/void/": {"put": {"description": "Mark as void / Un-Void\n---\nMark the document as void or convert it from void back to issued.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"void": {"type": "boolean", "description": "Whether to void or un-void the document.If not sent, `true` will be assumed."}}}, "name": "data", "in": "body"}], "tags": ["purchases"], "summary": "/v1.0/purchases/{id}/void/", "operationId": "purchases_mark_void", "consumes": ["application/json"], "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/purchases/{parent_pk}/attachments/": {"get": {"description": "Get the list of attachments.\n---\nThe list of attachments for the specified record.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}], "tags": ["purchases"], "summary": "/v1.0/purchases/{parent_pk}/attachments/", "operationId": "purchases_attachments_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new attachment.\n---\nAdds a new attachment to the specified record.\nThe actual attachment file must be sent within the request body.\n**Incoming data must be encoded as `multipart/form-data`**.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}, {"required": true, "type": "string", "name": "file", "in": "formData", "description": "The actual file data"}], "tags": ["purchases"], "summary": "/v1.0/purchases/{parent_pk}/attachments/", "operationId": "purchases_attachments_create", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/purchases/{parent_pk}/attachments/{id}/": {"get": {"description": "Get a single attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["purchases"], "summary": "/v1.0/purchases/{parent_pk}/attachments/{id}/", "operationId": "purchases_attachments_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "patch": {"description": "Partially update an attachment.\n---\nYou may change the attachment title but you cannot\nreplace the actual file. **Incoming data\nmust be encoded as `multipart/form-data`.**", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name."}], "tags": ["purchases"], "summary": "/v1.0/purchases/{parent_pk}/attachments/{id}/", "operationId": "purchases_attachments_partial_update", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "Internal title, to help you easily identify the attachment. This is not the same as the actual file name.", "example": "Attachment title"}, "file_url": {"type": "string", "description": "URL to access the attachment file", "example": "//url-to-access-the-file/"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete an attachment.\n---", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["purchases"], "summary": "/v1.0/purchases/{parent_pk}/attachments/{id}/", "operationId": "purchases_attachments_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/purchases/{parent_pk}/attachments/{id}/file/": {"get": {"description": "Get the actual attachment file.\n---\nThis endpoint may return a `307` redirect response.\nTo retrieve the file you should follow the redirection.", "parameters": [{"required": true, "type": "string", "name": "parent_pk", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["purchases"], "summary": "/v1.0/purchases/{parent_pk}/attachments/{id}/file/", "operationId": "purchases_attachments_file", "responses": {"200": {"description": "Success"}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/recurringcashreceipts/": {"get": {"description": "Get the list of recurring payments received.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `title`, `contact__display_name`."}, {"required": false, "type": "string", "name": "contact", "in": "query", "description": "Optionally filter by contact ID."}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `start_datetime`, `end_datetime`, `amount`, `contact__display_name`. Prepend a `-` to denote reverse ordering (e.g `-start_datetime`)."}], "tags": ["recurringcashreceipts"], "summary": "/v1.0/recurringcashreceipts/", "operationId": "recurringcashreceipts_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "transaction_type": {"type": "string", "description": "Read-only field, always returns `dp`.", "example": "dp"}, "title": {"type": "string", "description": "Short description / reason.", "example": "My recurring income"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1000.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new recurring payment received.\n----\nYou must specify the\n[recurring schedule](#tag/recurringcashreceipts) as well as the details\nof the generated payments. As far as the schedule is concerned,\nyou may leave the `end_datetime` field blank to run the recurring\nprocedure forever.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["amount", "contact"], "type": "object", "properties": {"start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "title": {"type": "string", "description": "Short description / reason.", "example": "My recurring income"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1000.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["recurringcashreceipts"], "summary": "/v1.0/recurringcashreceipts/", "operationId": "recurringcashreceipts_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "transaction_type": {"type": "string", "description": "Read-only field, always returns `dp`.", "example": "dp"}, "title": {"type": "string", "description": "Short description / reason.", "example": "My recurring income"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1000.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/recurringcashreceipts/{id}/": {"get": {"description": "Get a single recurring payment received.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["recurringcashreceipts"], "summary": "/v1.0/recurringcashreceipts/{id}/", "operationId": "recurringcashreceipts_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "transaction_type": {"type": "string", "description": "Read-only field, always returns `dp`.", "example": "dp"}, "title": {"type": "string", "description": "Short description / reason.", "example": "My recurring income"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1000.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a recurring payment received.\n---\nYou must send all required fields for the record to be\nsuccessfully updated.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["amount", "contact"], "type": "object", "properties": {"start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "title": {"type": "string", "description": "Short description / reason.", "example": "My recurring income"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1000.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["recurringcashreceipts"], "summary": "/v1.0/recurringcashreceipts/{id}/", "operationId": "recurringcashreceipts_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "transaction_type": {"type": "string", "description": "Read-only field, always returns `dp`.", "example": "dp"}, "title": {"type": "string", "description": "Short description / reason.", "example": "My recurring income"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1000.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a recurring payment received.\n---\nThe only difference between full & partial update is that the latter\nwill treat all parameters as optional. You may omit any parameter\nin order to keep the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "title": {"type": "string", "description": "Short description / reason.", "example": "My recurring income"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1000.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["recurringcashreceipts"], "summary": "/v1.0/recurringcashreceipts/{id}/", "operationId": "recurringcashreceipts_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "transaction_type": {"type": "string", "description": "Read-only field, always returns `dp`.", "example": "dp"}, "title": {"type": "string", "description": "Short description / reason.", "example": "My recurring income"}, "amount": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "1000.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "contact": {"type": "string", "description": "ID of the associated contact.", "example": "3300000040000100"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a recurring payment received.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["recurringcashreceipts"], "summary": "/v1.0/recurringcashreceipts/{id}/", "operationId": "recurringcashreceipts_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/recurringinvoices/": {"get": {"description": "Get the list of recurring invoices.\n---\nThe response does not include all the recurring invoice details.\nTo retrieve more information about a specific recurring invoice, use\nthe [single recurring invoice](#operation/recurringinvoices_read)\nendpoint.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `client__display_name`, `documenttype__title`, `series__name`, `items__title`, `items__description`."}, {"required": false, "type": "string", "name": "documenttype", "in": "query", "description": "Optionally filter by document type ID."}, {"required": false, "type": "string", "name": "series", "in": "query", "description": "Optionally filter by the numbering sequence ID."}, {"required": false, "type": "string", "name": "draft", "in": "query", "description": "Optionally filter by draft status. Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "client", "in": "query", "description": "Optionally filter by client ID."}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `start_datetime`, `end_datetime`, `series__name`, `documenttype__title`, `client__display_name`, `total`, `payable`, `initial`, `net`, `draft`. Prepend a `-` to denote reverse ordering (e.g `-start_datetime`)."}], "tags": ["recurringinvoices"], "summary": "/v1.0/recurringinvoices/", "operationId": "recurringinvoices_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": "When should the first invoice be created. Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency's interval. Please see the [recurring schedule](#tag/recurringinvoices) for more information.", "example": 1}, "period": {"type": "string", "description": "The recurring frequency's period. Please see the [recurring schedule](#tag/recurringinvoices) for more information. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "When should the last invoice be created. Leave this blank for the recurring schedule to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "When was the last invoice created. Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "When will the next invoice be created. Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "documenttype": {"type": "string", "description": "ID of the created invoice's document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the created invoice's sales series.", "example": "4400000040000456"}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "The client name as it will appear on the PDF.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "theme": {"type": "string", "description": "ID of the template that will be used to render the created invoices.", "example": "1100000022000129"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new recurring invoice.\n---\nYou must specify the\n[recurring schedule](#tag/recurringinvoices) as well as the details\nof the generated invoices. As far as the schedule is concerned,\nyou may leave the `end_datetime` field blank to run the recurring\nprocedure forever.\n\nTo better understand how the invoice fields work, you might want\nto have a look at the\n[invoice's create endpoint](#operation/invoices_create) as well.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["documenttype", "client", "calculator_mode", "items", "withholding_taxes", "theme"], "type": "object", "properties": {"start_datetime": {"type": "string", "description": "When should the first invoice be created. Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency's interval. Please see the [recurring schedule](#tag/recurringinvoices) for more information.", "example": 1}, "period": {"type": "string", "description": "The recurring frequency's period. Please see the [recurring schedule](#tag/recurringinvoices) for more information. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "When should the last invoice be created. Leave this blank for the recurring schedule to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "documenttype": {"type": "string", "description": "ID of the created invoice's document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the created invoice's sales series.", "example": "4400000040000456"}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If not provided, the client name will be retrieved from the specified client contact", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"items": {"type": "string", "description": ""}, "type": "array", "description": "A list of the applied tax IDs.", "example": ["6600230050000705"]}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "required": true, "type": "array", "name": "items", "description": "Line items of an invoice."}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "theme": {"type": "string", "description": "ID of the template that will be used to render the created invoices.", "example": "1100000022000129"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["recurringinvoices"], "summary": "/v1.0/recurringinvoices/", "operationId": "recurringinvoices_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": "When should the first invoice be created. Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency's interval. Please see the [recurring schedule](#tag/recurringinvoices) for more information.", "example": 1}, "period": {"type": "string", "description": "The recurring frequency's period. Please see the [recurring schedule](#tag/recurringinvoices) for more information. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "When should the last invoice be created. Leave this blank for the recurring schedule to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "When was the last invoice created. Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "When will the next invoice be created. Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "documenttype": {"type": "string", "description": "ID of the created invoice's document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the created invoice's sales series.", "example": "4400000040000456"}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If not provided, the client name will be retrieved from the specified client contact", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of an invoice."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "theme": {"type": "string", "description": "ID of the template that will be used to render the created invoices.", "example": "1100000022000129"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/recurringinvoices/{id}/": {"get": {"description": "Get a single recurring invoice.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["recurringinvoices"], "summary": "/v1.0/recurringinvoices/{id}/", "operationId": "recurringinvoices_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": "When should the first invoice be created. Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency's interval. Please see the [recurring schedule](#tag/recurringinvoices) for more information.", "example": 1}, "period": {"type": "string", "description": "The recurring frequency's period. Please see the [recurring schedule](#tag/recurringinvoices) for more information. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "When should the last invoice be created. Leave this blank for the recurring schedule to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "When was the last invoice created. Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "When will the next invoice be created. Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "documenttype": {"type": "string", "description": "ID of the created invoice's document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the created invoice's sales series.", "example": "4400000040000456"}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If not provided, the client name will be retrieved from the specified client contact", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of an invoice."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "theme": {"type": "string", "description": "ID of the template that will be used to render the created invoices.", "example": "1100000022000129"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a recurring invoice.\n---\nYou must send all required fields for the record to be\nsuccessfully updated.\n\nWhen changing the invoice client, all client fields will be updated\nbased on the new contact record, unless you explicitly\nspecify their values.\n\nTo update the line items, the endpoint expects that you send\na complete list of the new items. For existing lines\nyou must send over their IDs (as returned by the\n[retrieve endpoint](#operation/recurringinvoices_read))\nalong with any possible changes. If there exist any lines whose\nIDs are not sent, they will be deleted. Accordingly, lines for which\nyou send no ID will result in creating new items.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["documenttype", "client", "calculator_mode", "items", "withholding_taxes", "theme"], "type": "object", "properties": {"start_datetime": {"type": "string", "description": "When should the first invoice be created. Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency's interval. Please see the [recurring schedule](#tag/recurringinvoices) for more information.", "example": 1}, "period": {"type": "string", "description": "The recurring frequency's period. Please see the [recurring schedule](#tag/recurringinvoices) for more information. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "When should the last invoice be created. Leave this blank for the recurring schedule to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "documenttype": {"type": "string", "description": "ID of the created invoice's document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the created invoice's sales series.", "example": "4400000040000456"}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If not provided, the client name will be retrieved from the specified client contact", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"items": {"type": "string", "description": ""}, "type": "array", "description": "A list of the applied tax IDs.", "example": ["6600230050000705"]}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "required": true, "type": "array", "name": "items", "description": "Line items of an invoice."}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "theme": {"type": "string", "description": "ID of the template that will be used to render the created invoices.", "example": "1100000022000129"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["recurringinvoices"], "summary": "/v1.0/recurringinvoices/{id}/", "operationId": "recurringinvoices_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": "When should the first invoice be created. Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency's interval. Please see the [recurring schedule](#tag/recurringinvoices) for more information.", "example": 1}, "period": {"type": "string", "description": "The recurring frequency's period. Please see the [recurring schedule](#tag/recurringinvoices) for more information. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "When should the last invoice be created. Leave this blank for the recurring schedule to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "When was the last invoice created. Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "When will the next invoice be created. Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "documenttype": {"type": "string", "description": "ID of the created invoice's document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the created invoice's sales series.", "example": "4400000040000456"}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If not provided, the client name will be retrieved from the specified client contact", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "title": {"type": "string", "description": "If not provided it will be retrieved from the related product.", "example": "Pair of socks"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of an invoice."}, "initial": {"type": "string", "description": "Total initial value, before any discount is applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Total net value, before any taxes are applied. Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "theme": {"type": "string", "description": "ID of the template that will be used to render the created invoices.", "example": "1100000022000129"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a recurring invoice.\n---\nYou may partially change the recurring schedule, the client and\nthe invoice properties. However, the invoice line items and amounts\ncannot be modified via this endpoint.\n\nIf you change the client ID and the rest of the client fields\nare omitted, their values will also be updated based on\nthe new client's contact record. For example,\nif you do not explicitly specify the\n`client_email` parameter, it will be automatically\ninitialized from the specified contact record.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"start_datetime": {"type": "string", "description": "When should the first invoice be created. Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency's interval. Please see the [recurring schedule](#tag/recurringinvoices) for more information.", "example": 1}, "period": {"type": "string", "description": "The recurring frequency's period. Please see the [recurring schedule](#tag/recurringinvoices) for more information. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "When should the last invoice be created. Leave this blank for the recurring schedule to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "documenttype": {"type": "string", "description": "ID of the created invoice's document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the created invoice's sales series.", "example": "4400000040000456"}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If you change the client and do not specify the field, the client name will be retrieved from the specified client contact.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "theme": {"type": "string", "description": "ID of the template that will be used to render the created invoices.", "example": "1100000022000129"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["recurringinvoices"], "summary": "/v1.0/recurringinvoices/{id}/", "operationId": "recurringinvoices_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": "When should the first invoice be created. Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency's interval. Please see the [recurring schedule](#tag/recurringinvoices) for more information.", "example": 1}, "period": {"type": "string", "description": "The recurring frequency's period. Please see the [recurring schedule](#tag/recurringinvoices) for more information. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "When should the last invoice be created. Leave this blank for the recurring schedule to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "When was the last invoice created. Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "When will the next invoice be created. Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "documenttype": {"type": "string", "description": "ID of the created invoice's document type.", "example": "4400000040000123"}, "series": {"type": "string", "description": "ID of the created invoice's sales series.", "example": "4400000040000456"}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "client": {"type": "string", "description": "ID of the associated client.", "example": "3300000040000100"}, "client_display_name": {"type": "string", "description": "If you change the client and do not specify the field, the client name will be retrieved from the specified client contact.", "example": "Acme Inc."}, "client_address": {"type": "string", "description": "The client billing address, as it will appear on the PDF.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "client_shipping_address": {"type": "string", "description": "The client shipping address, as it will appear on the PDF.", "example": ""}, "client_profession": {"type": "string", "description": "The client profession, as it will appear on the PDF.", "example": ""}, "client_vat_number": {"type": "string", "description": "The client tax ID, as it will appear on the PDF.", "example": ""}, "client_tax_office": {"type": "string", "description": "Only available to organizations based in Greece. See the <a href=\"#tax-office\">tax office</a> data type One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`1129` | Agiou Dimitriou\n`8221` | Agiou Nikolaou\n`1136` | Agion Anargiron\n`1552` | Agriniou\n`1101` | A' Athinon\n`1104` | D' Athinon\n`1106` | ST' Athinon\n`1112` | IB' Athinon\n`1113` | IG' Athinon\n`1114` | ID' Athinon\n`1117` | IZ' Athinon\n`1159` | F.A.E. Athinon\n`1137` | Aigaleo\n`2311` | Aigiou\n`5211` | Aleksandroupolis\n`2411` | Amaliadas\n`1135` | Amarousiou\n`4233` | Ampelokipon\n`1912` | Amfissas\n`9311` | Argostoliou\n`2111` | Argous\n`6111` | Artas\n`1302` | Axarnon\n`4112` | Veroias\n`3321` | Volou\n`1152` | Vyronos\n`1179` | Galatsiou\n`4621` | Giannitson\n`1139` | Glifadas\n`4521` | Grevenon\n`5111` | Dramas\n`4631` | Edessas\n`1303` | Elefsinas\n`9111` | Zakinthou\n`6211` | Igoumenitsas\n`1173` | Ilioupolis\n`8110` | Irakliou\n`4211` | A' Thessalonikis\n`4214` | D' Thessalonikis\n`4215` | E' Thessalonikis\n`4216` | ST' Thessalonikis\n`4217` | Z' Thessalonikis\n`4228` | H' Thessalonikis\n`4224` | F.A.E. Thessalonikis\n`1411` | Thivon\n`7121` | Thiras\n`6311` | Ioanninon\n`4234` | Ionias Thessalonikis\n`5321` | Kavalas\n`4232` | Kalamarias\n`2711` | Kalamatas\n`1130` | Kallitheas\n`3111` | Karditsas\n`1611` | Karpenisiou\n`4311` | Kastorias\n`4711` | Katerinis\n`1125` | Katoikon Eksoterikou\n`9211` | Kerkiras\n`1153` | Kifisias\n`4411` | Kilkis\n`4541` | Kozanis\n`5511` | Komotinis\n`2513` | Korinthou\n`1304` | Koropiou\n`1722` | Kimis\n`7531` | Ko\n`1832` | Lamias\n`3231` | Larisas\n`4222` | Lagada\n`9421` | Lefkadas\n`1421` | Livadias\n`1118` | Megalon Epixeiriseon\n`1531` | Mesologiou\n`1211` | Moschatou\n`7172` | Mikonou\n`7231` | Mitilinis\n`3323` | N. Ionias Volou\n`1145` | N. Irakleiou\n`7151` | Naksou\n`2131` | Nafpliou\n`1131` | Neas Ionias\n`1132` | Neas Smyrnis\n`4923` | Neon Moudanion\n`1220` | Nikaias\n`5411` | Ksanthis\n`5231` | Orestiadas\n`1133` | Palaiou Falirou\n`1312` | Pallinis\n`7161` | Parou\n`2331` | A' Patron\n`2334` | G' Patron\n`1201` | A' Peiraia\n`1203` | G' Peiraia\n`1204` | D' Peiraia\n`1205` | E' Peiraia\n`1207` | Ploion Peiraia\n`1206` | F.A.E. Peiraia\n`1138` | A' Peristeriou\n`1157` | B' Peristeriou\n`4922` | Polygirou\n`6411` | Prevezas\n`4531` | Ptolemaidas\n`2412` | Pirgou\n`8341` | Rethimnou\n`7542` | Rodou\n`7322` | Samou\n`5621` | Serron\n`2632` | Spartis\n`7171` | Sirou\n`3412` | Trikalon\n`2231` | Tripolis\n`4812` | Florinas\n`1134` | Chalandriou\n`1732` | Chalkidas\n`8431` | Chanion\n`7411` | Chiou\n`1151` | Cholargou\n`1175` | Psixikou\n`1116` | IST' Athinon\n`5341` | Eleftheroupolis\n`8111` | A' Irakliou\n`8112` | A' Irakliou (Moiron)\n`3232` | B'-G' Larisas\n`3233` | G' Larisas\n`5611` | A' Serron\n</details>"}, "client_contact_person": {"type": "string", "description": "The client's contact person, as it will appear on the PDF.", "example": "John Doe"}, "client_phone_number": {"type": "string", "description": "The client phone number, as it will appear on the PDF.", "example": "662-222-2222"}, "client_email": {"type": "string", "description": "The client email address, as it will appear on the PDF.", "example": "john@doe.com"}, "theme": {"type": "string", "description": "ID of the template that will be used to render the created invoices.", "example": "1100000022000129"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a recurring invoice.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["recurringinvoices"], "summary": "/v1.0/recurringinvoices/{id}/", "operationId": "recurringinvoices_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/recurringpurchases/": {"get": {"description": "Get the list of recurring bills.\n---\nThe response does not include all the recurring bill details.\nTo retrieve more information about a specific record, use\nthe [single recurring bill](#operation/recurringpurchases_read)\nendpoint.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `supplier__display_name`, `items__description`."}, {"required": false, "type": "string", "name": "draft", "in": "query", "description": "Optionally filter by draft status. Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "supplier", "in": "query", "description": "Optionally filter by supplier ID."}, {"required": false, "type": "string", "name": "currency_code", "in": "query", "description": "Optionally filter by currency code."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `start_datetime`, `end_datetime`, `supplier__display_name`, `total`, `payable`, `initial`, `net`, `draft`. Prepend a `-` to denote reverse ordering (e.g `-start_datetime`)."}], "tags": ["recurringpurchases"], "summary": "/v1.0/recurringpurchases/", "operationId": "recurringpurchases_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "initial": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new recurring bill.\n---\nYou must specify the\n[recurring schedule](#tag/recurringpurchases) as well as the details\nof the generated bills. As far as the schedule is concerned,\nyou may leave the `end_datetime` field blank to run the recurring\nprocedure forever.\n\nTo better understand how the bill fields work, you might want\nto have a look at the\n[bill's create endpoint](#operation/purchases_create) as well.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["supplier", "calculator_mode", "items", "withholding_taxes"], "type": "object", "properties": {"start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"items": {"type": "string", "description": ""}, "type": "array", "description": "A list of the applied tax IDs.", "example": ["6600230050000705"]}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "required": true, "type": "array", "name": "items", "description": "Line items of a bill."}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["recurringpurchases"], "summary": "/v1.0/recurringpurchases/", "operationId": "recurringpurchases_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of a bill."}, "initial": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/recurringpurchases/{id}/": {"get": {"description": "Get a single recurring bill.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["recurringpurchases"], "summary": "/v1.0/recurringpurchases/{id}/", "operationId": "recurringpurchases_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of a bill."}, "initial": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a recurring bill.\n---\nYou must send all required fields for the record to be\nsuccessfully updated.\n\nTo update the line items, the endpoint expects that you send\na complete list of the new items. For existing lines\nyou must send over their IDs (as returned by the\n[retrieve endpoint](#operation/recurringpurchases_read))\nalong with any possible changes. If there exist any lines whose\nIDs are not sent, they will be deleted. Accordingly, lines for which\nyou send no ID will result in creating new items.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["supplier", "calculator_mode", "items", "withholding_taxes"], "type": "object", "properties": {"start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"items": {"type": "string", "description": ""}, "type": "array", "description": "A list of the applied tax IDs.", "example": ["6600230050000705"]}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "required": true, "type": "array", "name": "items", "description": "Line items of a bill."}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["recurringpurchases"], "summary": "/v1.0/recurringpurchases/{id}/", "operationId": "recurringpurchases_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "calculator_mode": {"type": "string", "description": "Automatically calculate / correct document values based on the specified calculation mode. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`initial` | Tax exclusive\n`total` | Tax inclusive\n</details>", "example": "initial"}, "items": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "description": {"type": "string", "description": "", "example": "Super-cool expensive socks!"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "unit_value": {"type": "string", "description": "Used in the \"initial\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "40.00"}, "unit_discount": {"type": "string", "description": "Absolute value, not percentage. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "0.00"}, "taxes": {"name": "taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000705"], "description": "A list of the applied tax IDs."}, "unit_total": {"type": "string", "description": "Used in the \"total\" calculation mode. Decimal rendered as string, with the `.` character used as a floating point. Up to 5 decimal places.", "example": "50.00"}, "item_net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "unit_measure": {"type": "integer", "description": "Measurement unit. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Item\n`1` | Service\n`24` | Package\n`25` | Box\n`2` | Square millimetre\n`3` | Square centimetre\n`4` | Square metre\n`5` | Square kilometre\n`6` | Millimetre\n`7` | Centimetre\n`8` | Metre\n`9` | Kilometre\n`10` | Millilitre\n`11` | Litre\n`26` | Cubic metre\n`12` | Milligram\n`13` | Gram\n`14` | Kilogram\n`15` | Ton\n`16` | Minute\n`17` | Hour\n`18` | Month\n`19` | Year\n`20` | Man-Hour\n`21` | Man-Day\n`22` | Man-Month\n`23` | Kilowatt hour\n</details>", "example": 14}}}, "type": "array", "description": "Line items of a bill."}, "initial": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "net": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "80.00"}, "total": {"type": "string", "description": "Automatically calculated amount. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "withholding_taxes": {"name": "withholding_taxes", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["6600230050000704"], "description": "A list of withholding tax IDs to be applied. In case no withholding taxes are applied, pass an empty list."}, "payable": {"type": "string", "description": "Total payable amount. Automatically calculated amount. This amount may differ from the total amount in case withholding taxes have been applied. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places.", "example": "100.00"}, "currency_code": {"type": "string", "description": "If not specified, this is set to the organization's base currency code. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`EUR` | Euro (EUR)\n`GBP` | GB Pound (GBP)\n`USD` | US Dollar (USD)\n`AFN` | Afghani (AFN)\n`DZD` | Algerian Dinar (DZD)\n`ARS` | Argentine Peso (ARS)\n`AMD` | Armenian Dram (AMD)\n`AWG` | Aruban Florin (AWG)\n`AUD` | Australian Dollar (AUD)\n`AZN` | Azerbaijanian Manat (AZN)\n`BSD` | Bahamian Dollar (BSD)\n`BHD` | Bahraini Dinar (BHD)\n`THB` | Baht (THB)\n`PAB` | Balboa (PAB)\n`BBD` | Barbados Dollar (BBD)\n`BYR` | Belarussian Ruble (BYR)\n`BZD` | Belize Dollar (BZD)\n`BMD` | Bermudian Dollar(Bermuda Dollar) (BMD)\n`VEF` | Bolivar Fuerte (VEF)\n`BOB` | Boliviano (BOB)\n`BRL` | Brazilian Real (BRL)\n`BND` | Brunei Dollar (BND)\n`BGN` | Bulgarian Lev (BGN)\n`BIF` | Burundi Franc (BIF)\n`CAD` | Canadian Dollar (CAD)\n`CVE` | Cape Verde Escudo (CVE)\n`KYD` | Cayman Islands Dollar (KYD)\n`GHS` | Cedi (GHS)\n`XOF` | CFA Franc BCEAO (XOF)\n`XAF` | CFA Franc BEAC (XAF)\n`XPF` | CFP Franc (XPF)\n`CLP` | Chilean Peso (CLP)\n`COP` | Colombian Peso (COP)\n`KMF` | Comoro Franc (KMF)\n`BAM` | Convertible Marks (BAM)\n`NIO` | Cordoba Oro (NIO)\n`CRC` | Costa Rican Colon (CRC)\n`HRK` | Croatian Kuna (HRK)\n`CUC` | Cuba Convertible Peso (CUC)\n`CUP` | Cuban Peso (CUP)\n`CZK` | Czech Koruna (CZK)\n`GMD` | Dalasi (GMD)\n`DKK` | Danish Krone (DKK)\n`MKD` | Denar (MKD)\n`DJF` | Djibouti Franc (DJF)\n`STD` | Dobra (STD)\n`DOP` | Dominican Peso (DOP)\n`VND` | Dong (VND)\n`XCD` | East Caribbean Dollar (XCD)\n`EGP` | Egyptian Pound (EGP)\n`ETB` | Ethiopian Birr (ETB)\n`FKP` | Falkland Islands Pound (FKP)\n`FJD` | Fiji Dollar (FJD)\n`HUF` | Forint (HUF)\n`CDF` | Franc Congolais (CDF)\n`GIP` | Gibraltar Pound (GIP)\n`HTG` | Gourde (HTG)\n`PYG` | Guarani (PYG)\n`GNF` | Guinea Franc (GNF)\n`GYD` | Guyana Dollar (GYD)\n`HKD` | Hong Kong Dollar (HKD)\n`UAH` | Hryvnia (UAH)\n`ISK` | Iceland Krona (ISK)\n`INR` | Indian Rupee (INR)\n`IRR` | Iranian Rial (IRR)\n`IQD` | Iraqi Dinar (IQD)\n`JMD` | Jamaican Dollar (JMD)\n`JOD` | Jordanian Dinar (JOD)\n`KES` | Kenyan Shilling (KES)\n`PGK` | Kina (PGK)\n`LAK` | Kip (LAK)\n`KWD` | Kuwaiti Dinar (KWD)\n`MWK` | Kwacha (MWK)\n`AOA` | Kwanza (AOA)\n`MMK` | Kyat (MMK)\n`GEL` | Lari (GEL)\n`LBP` | Lebanese Pound (LBP)\n`ALL` | Lek (ALL)\n`HNL` | Lempira (HNL)\n`SLL` | Leone (SLL)\n`LRD` | Liberian Dollar (LRD)\n`LYD` | Libyan Dinar (LYD)\n`SZL` | Lilangeni (SZL)\n`LSL` | Loti (LSL)\n`MGA` | Malagascy Ariary (MGA)\n`MYR` | Malaysian Ringgit (MYR)\n`MUR` | Mauritius Rupee (MUR)\n`MXN` | Mexican Peso (MXN)\n`MXV` | Mexican Unidad de Inversion(UID) (MXV)\n`MDL` | Moldovan Leu (MDL)\n`MAD` | Moroccan Dirham (MAD)\n`MZN` | Mozambique Metical (MZN)\n`BOV` | Mvdol (BOV)\n`NGN` | Naira (NGN)\n`ERN` | Nakfa (ERN)\n`NAD` | Namibian Dollar (NAD)\n`NPR` | Nepalese Rupee (NPR)\n`ANG` | Netherlands Antillian Guilder (ANG)\n`ILS` | New Israeli Sheqel (ILS)\n`RON` | Romanian Leu (RON)\n`TWD` | New Taiwan Dollar (TWD)\n`TRY` | Turkish Lira (TRY)\n`NZD` | New Zealand Dollar (NZD)\n`BTN` | Ngultrum (BTN)\n`KPW` | North Korean Won (KPW)\n`NOK` | Norwegian Krone (NOK)\n`PEN` | Nuevo Sol (PEN)\n`MRO` | Ouguiya (MRO)\n`TOP` | Paanga (TOP)\n`PKR` | Pakistan Rupee (PKR)\n`MOP` | Pataca (MOP)\n`UYU` | Peso Uruguayo (UYU)\n`PHP` | Philippine Peso (PHP)\n`BWP` | Pula (BWP)\n`QAR` | Qatari Rial (QAR)\n`GTQ` | Quetzal (GTQ)\n`ZAR` | Rand (ZAR)\n`OMR` | Rial Omani (OMR)\n`KHR` | Riel (KHR)\n`MVR` | Rufiyaa (MVR)\n`IDR` | Rupiah (IDR)\n`RUB` | Russian Ruble (RUB)\n`RWF` | Rwanda Franc (RWF)\n`XDR` | SDR (XDR)\n`SHP` | Saint Helena Pound (SHP)\n`SAR` | Saudi Riyal (SAR)\n`RSD` | Serbian Dinar (RSD)\n`SCR` | Seychelles Rupee (SCR)\n`SGD` | Singapore Dollar (SGD)\n`SBD` | Solomon Islands Dollar (SBD)\n`KGS` | Som (KGS)\n`SOS` | Somali Shilling (SOS)\n`TJS` | Somoni (TJS)\n`LKR` | Sri Lanka Rupee (LKR)\n`SDG` | Sudanese Pound (SDG)\n`SRD` | Surinam Dollar (SRD)\n`SEK` | Swedish Krona (SEK)\n`CHF` | Swiss Franc (CHF)\n`SYP` | Syrian Pound (SYP)\n`BDT` | Taka (BDT)\n`WST` | Tala (WST)\n`TZS` | Tanzanian Shilling (TZS)\n`KZT` | Tenge (KZT)\n`TTD` | Trinidad and Tobago Dollar (TTD)\n`MNT` | Tugrik (MNT)\n`TND` | Tunisian Dinar (TND)\n`TMT` | Turkmenistan New Manat (TMT)\n`AED` | UAE Dirham (AED)\n`UGX` | Uganda Shilling (UGX)\n`COU` | Unidad de Valor Real (COU)\n`CLF` | Unidades de formento (CLF)\n`UYI` | Uruguay Peso en Unidades Indexadas (UYI)\n`UZS` | Uzbekistan Sum (UZS)\n`VUV` | Vatu (VUV)\n`CHE` | WIR Euro (CHE)\n`CHW` | WIR Franc (CHW)\n`KRW` | Won (KRW)\n`YER` | Yemeni Rial (YER)\n`JPY` | Yen (JPY)\n`CNY` | Yuan Renminbi (CNY)\n`ZMW` | Zambian Kwacha (ZMW)\n`ZWL` | Zimbabwe Dollar (ZWL)\n`PLN` | Zloty (PLN)\n`BTC` | Bitcoin (BTC)\n</details>", "example": "USD"}, "exchange_rate": {"type": "string", "description": "Comes into effect when the currency of the transaction is different than the base currency. Will always equal 1.00 for the base currency. Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "1.000000"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a recurring bill.\n---\nYou may partially change the recurring schedule, the supplier and\nthe bill properties. However, the line items\nand amounts cannot be modified via this endpoint.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "required": false, "type": "array", "name": "trackingcategories", "description": "An optional list of tracking categories to classify this record."}}}, "name": "data", "in": "body"}], "tags": ["recurringpurchases"], "summary": "/v1.0/recurringpurchases/{id}/", "operationId": "recurringpurchases_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "start_datetime": {"type": "string", "description": " Timezone information is included.", "example": "2019-01-01T06:00:00Z"}, "interval": {"type": "integer", "description": "The recurring frequency.", "example": 1}, "period": {"type": "string", "description": "The frequency's interval. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`days` | Days\n`weeks` | Weeks\n`months` | Months\n</details>", "example": "months"}, "end_datetime": {"type": "string", "description": "Leave it blank to never expire. Timezone information is included.", "example": "2020-01-01T06:00:00Z"}, "last_execution": {"type": "string", "description": "Automatically calculated datetime. Timezone information is included.", "example": "2019-03-01T06:00:00Z"}, "next_execution": {"type": "string", "description": "Automatically calculated datetime.", "example": "2019-04-01T06:00:00Z"}, "paused": {"type": "boolean", "description": "While the record is paused new records will not be created.", "example": false}, "representation": {"type": "string", "description": "Automatically generated representation string.", "example": "01/01/19, every 1 months"}, "draft": {"type": "boolean", "description": "Whether the generated documents will be in draft mode.", "example": false}, "due_days": {"type": "integer", "description": "Days after the issue date, that a commercial document will be considered overdue. This affects the commercial document's <em>due date</em>. You may leave the field blank if you do not want to apply credit."}, "supplier": {"type": "string", "description": "ID of the associated supplier.", "example": "3300000040000100"}, "trackingcategories": {"items": {"type": "object", "properties": {"trackingcategory": {"type": "string", "description": "ID of the associated tracking category.", "example": "7000230020000553"}, "option": {"type": "string", "description": "The selected option of the tracking category.", "example": "My custom tag"}}}, "type": "array", "description": "An optional list of tracking categories to classify this record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a recurring bill.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["recurringpurchases"], "summary": "/v1.0/recurringpurchases/{id}/", "operationId": "recurringpurchases_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/reminders/": {"get": {"description": "Get the list of reminders.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `subject`, `message`."}, {"required": false, "type": "string", "name": "audience", "in": "query", "description": "Optional filter."}, {"required": false, "type": "string", "name": "application", "in": "query", "description": "Optionally filter by application, i.e. the types of records that the reminder tracks. One of `sales`, `purchases`, `cashreceipts`,`cashpayments` or `productorservice`."}, {"required": false, "type": "string", "name": "active", "in": "query", "description": "Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `subject`, `audience`, `application`, `type`, `active`. Prepend a `-` to denote reverse ordering (e.g `-subject`)."}], "tags": ["reminders"], "summary": "/v1.0/reminders/", "operationId": "reminders_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "audience": {"type": "string", "description": "Reminders may be sent to clients, as well as your own team members. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`user` | My team\n`client` | Client\n`both` | Both my team & the client\n</details>", "example": "client"}, "application": {"type": "string", "description": "Whether this reminder applies to invoices, estimates, recurring invoices etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`invoice` | Invoices\n`contact` | Clients\n`recurringinvoice` | Recurring invoices\n`estimate` | Estimates\n`purchase` | Bills\n</details>", "example": "invoice"}, "type": {"type": "string", "description": "Whether the reminder is for an overdue invoice, or a client amount due etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`document_overdue` | Overdue reminder\n`document_due_date_approaching` | About to become overdue\n`document_issued` | Issued reminder\n`estimate_issued` | Pending estimates\n`client_due` | Client amount due\n`client_overdue` | Client amount overdue\n`recurring_issued` | About to be issued\n`recurring_expires` | About to expire\n</details>", "example": "document_overdue"}, "message": {"type": "string", "description": "The message body. You may use variables to insert dynamic data to the message. Please consult the web application for the full list of the available variable names.", "example": "Hello %CNAME%, visit %PERMALINK% to pay for the invoice."}, "subject": {"type": "string", "description": "The message subject. You may use variables to insert dynamic data to the subject. Please consult the web application for the full list of the available variable names.", "example": "Outstanding payment %DUE% for %DOCUMENTNAME%"}, "user_channels": {"name": "user_channels", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`email` | Email\n`slack` | Slack\n</details>"}, "required": false, "type": "array", "example": ["slack", "email"], "description": "Clients will always receive reminders via email. If the reminder is sent to the team members (`audience` is set to `user` or `both`, it can be delivered via `email`, `slack` or both."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "options": {"type": "object", "properties": {"amount": {"type": "string", "description": "The threshold above which the reminder will be sent. For example, when sending reminders for outstanding invoices, the message will be sent only if the outstanding amount is higher than the specified value. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places."}, "number_of_days": {"type": "integer", "description": "Number of days after which the message will be sent. For example, when sending reminders for outstanding invoices, the message will be sent X days after the invoice has gone overdue."}, "language": {"type": "string", "description": "When working with clients abroad, you may want to send different reminders based on their language. Use this filter to limit the resulting records based on the language (e.g. send only for invoices issued in Italian). This field is optional. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}}, "description": "The rules based on which the reminder is being sent."}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new reminder.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["audience", "application", "type", "options", "message", "subject"], "type": "object", "properties": {"active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "audience": {"type": "string", "description": "Reminders may be sent to clients, as well as your own team members. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`user` | My team\n`client` | Client\n`both` | Both my team & the client\n</details>", "example": "client"}, "application": {"type": "string", "description": "Whether this reminder applies to invoices, estimates, recurring invoices etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`invoice` | Invoices\n`contact` | Clients\n`recurringinvoice` | Recurring invoices\n`estimate` | Estimates\n`purchase` | Bills\n</details>", "example": "invoice"}, "type": {"type": "string", "description": "Whether the reminder is for an overdue invoice, or a client amount due etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`document_overdue` | Overdue reminder\n`document_due_date_approaching` | About to become overdue\n`document_issued` | Issued reminder\n`estimate_issued` | Pending estimates\n`client_due` | Client amount due\n`client_overdue` | Client amount overdue\n`recurring_issued` | About to be issued\n`recurring_expires` | About to expire\n</details>", "example": "document_overdue"}, "options": {"type": "object", "description": "The rules based on which the reminder is being sent.", "properties": {"amount": {"type": "string", "description": "The threshold above which the reminder will be sent. For example, when sending reminders for outstanding invoices, the message will be sent only if the outstanding amount is higher than the specified value. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places."}, "number_of_days": {"type": "integer", "description": "Number of days after which the message will be sent. For example, when sending reminders for outstanding invoices, the message will be sent X days after the invoice has gone overdue."}, "language": {"type": "string", "description": "When working with clients abroad, you may want to send different reminders based on their language. Use this filter to limit the resulting records based on the language (e.g. send only for invoices issued in Italian). This field is optional. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}}}, "message": {"type": "string", "description": "The message body. You may use variables to insert dynamic data to the message. Please consult the web application for the full list of the available variable names.", "example": "Hello %CNAME%, visit %PERMALINK% to pay for the invoice."}, "subject": {"type": "string", "description": "The message subject. You may use variables to insert dynamic data to the subject. Please consult the web application for the full list of the available variable names.", "example": "Outstanding payment %DUE% for %DOCUMENTNAME%"}, "user_channels": {"name": "user_channels", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`email` | Email\n`slack` | Slack\n</details>"}, "required": false, "type": "array", "example": ["slack", "email"], "description": "Clients will always receive reminders via email. If the reminder is sent to the team members (`audience` is set to `user` or `both`, it can be delivered via `email`, `slack` or both."}}}, "name": "data", "in": "body"}], "tags": ["reminders"], "summary": "/v1.0/reminders/", "operationId": "reminders_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "audience": {"type": "string", "description": "Reminders may be sent to clients, as well as your own team members. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`user` | My team\n`client` | Client\n`both` | Both my team & the client\n</details>", "example": "client"}, "application": {"type": "string", "description": "Whether this reminder applies to invoices, estimates, recurring invoices etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`invoice` | Invoices\n`contact` | Clients\n`recurringinvoice` | Recurring invoices\n`estimate` | Estimates\n`purchase` | Bills\n</details>", "example": "invoice"}, "type": {"type": "string", "description": "Whether the reminder is for an overdue invoice, or a client amount due etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`document_overdue` | Overdue reminder\n`document_due_date_approaching` | About to become overdue\n`document_issued` | Issued reminder\n`estimate_issued` | Pending estimates\n`client_due` | Client amount due\n`client_overdue` | Client amount overdue\n`recurring_issued` | About to be issued\n`recurring_expires` | About to expire\n</details>", "example": "document_overdue"}, "message": {"type": "string", "description": "The message body. You may use variables to insert dynamic data to the message. Please consult the web application for the full list of the available variable names.", "example": "Hello %CNAME%, visit %PERMALINK% to pay for the invoice."}, "subject": {"type": "string", "description": "The message subject. You may use variables to insert dynamic data to the subject. Please consult the web application for the full list of the available variable names.", "example": "Outstanding payment %DUE% for %DOCUMENTNAME%"}, "user_channels": {"name": "user_channels", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`email` | Email\n`slack` | Slack\n</details>"}, "required": false, "type": "array", "example": ["slack", "email"], "description": "Clients will always receive reminders via email. If the reminder is sent to the team members (`audience` is set to `user` or `both`, it can be delivered via `email`, `slack` or both."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "options": {"type": "object", "properties": {"amount": {"type": "string", "description": "The threshold above which the reminder will be sent. For example, when sending reminders for outstanding invoices, the message will be sent only if the outstanding amount is higher than the specified value. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places."}, "number_of_days": {"type": "integer", "description": "Number of days after which the message will be sent. For example, when sending reminders for outstanding invoices, the message will be sent X days after the invoice has gone overdue."}, "language": {"type": "string", "description": "When working with clients abroad, you may want to send different reminders based on their language. Use this filter to limit the resulting records based on the language (e.g. send only for invoices issued in Italian). This field is optional. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}}, "description": "The rules based on which the reminder is being sent."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/reminders/{id}/": {"get": {"description": "Get a single reminder.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["reminders"], "summary": "/v1.0/reminders/{id}/", "operationId": "reminders_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "audience": {"type": "string", "description": "Reminders may be sent to clients, as well as your own team members. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`user` | My team\n`client` | Client\n`both` | Both my team & the client\n</details>", "example": "client"}, "application": {"type": "string", "description": "Whether this reminder applies to invoices, estimates, recurring invoices etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`invoice` | Invoices\n`contact` | Clients\n`recurringinvoice` | Recurring invoices\n`estimate` | Estimates\n`purchase` | Bills\n</details>", "example": "invoice"}, "type": {"type": "string", "description": "Whether the reminder is for an overdue invoice, or a client amount due etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`document_overdue` | Overdue reminder\n`document_due_date_approaching` | About to become overdue\n`document_issued` | Issued reminder\n`estimate_issued` | Pending estimates\n`client_due` | Client amount due\n`client_overdue` | Client amount overdue\n`recurring_issued` | About to be issued\n`recurring_expires` | About to expire\n</details>", "example": "document_overdue"}, "message": {"type": "string", "description": "The message body. You may use variables to insert dynamic data to the message. Please consult the web application for the full list of the available variable names.", "example": "Hello %CNAME%, visit %PERMALINK% to pay for the invoice."}, "subject": {"type": "string", "description": "The message subject. You may use variables to insert dynamic data to the subject. Please consult the web application for the full list of the available variable names.", "example": "Outstanding payment %DUE% for %DOCUMENTNAME%"}, "user_channels": {"name": "user_channels", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`email` | Email\n`slack` | Slack\n</details>"}, "required": false, "type": "array", "example": ["slack", "email"], "description": "Clients will always receive reminders via email. If the reminder is sent to the team members (`audience` is set to `user` or `both`, it can be delivered via `email`, `slack` or both."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "options": {"type": "object", "properties": {"amount": {"type": "string", "description": "The threshold above which the reminder will be sent. For example, when sending reminders for outstanding invoices, the message will be sent only if the outstanding amount is higher than the specified value. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places."}, "number_of_days": {"type": "integer", "description": "Number of days after which the message will be sent. For example, when sending reminders for outstanding invoices, the message will be sent X days after the invoice has gone overdue."}, "language": {"type": "string", "description": "When working with clients abroad, you may want to send different reminders based on their language. Use this filter to limit the resulting records based on the language (e.g. send only for invoices issued in Italian). This field is optional. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}}, "description": "The rules based on which the reminder is being sent."}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a reminder.\n---\nYou must provide at least the required fields for the record to be\nsuccessfully updated. Any missing parameter will\nresult in keeping the old value.\n\nThe `application` and `type` fields cannot be updated.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["audience", "application", "type", "options", "message", "subject"], "type": "object", "properties": {"active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "audience": {"type": "string", "description": "Reminders may be sent to clients, as well as your own team members. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`user` | My team\n`client` | Client\n`both` | Both my team & the client\n</details>", "example": "client"}, "application": {"type": "string", "description": "Whether this reminder applies to invoices, estimates, recurring invoices etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`invoice` | Invoices\n`contact` | Clients\n`recurringinvoice` | Recurring invoices\n`estimate` | Estimates\n`purchase` | Bills\n</details>", "example": "invoice"}, "type": {"type": "string", "description": "Whether the reminder is for an overdue invoice, or a client amount due etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`document_overdue` | Overdue reminder\n`document_due_date_approaching` | About to become overdue\n`document_issued` | Issued reminder\n`estimate_issued` | Pending estimates\n`client_due` | Client amount due\n`client_overdue` | Client amount overdue\n`recurring_issued` | About to be issued\n`recurring_expires` | About to expire\n</details>", "example": "document_overdue"}, "options": {"type": "object", "description": "The rules based on which the reminder is being sent.", "properties": {"amount": {"type": "string", "description": "The threshold above which the reminder will be sent. For example, when sending reminders for outstanding invoices, the message will be sent only if the outstanding amount is higher than the specified value. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places."}, "number_of_days": {"type": "integer", "description": "Number of days after which the message will be sent. For example, when sending reminders for outstanding invoices, the message will be sent X days after the invoice has gone overdue."}, "language": {"type": "string", "description": "When working with clients abroad, you may want to send different reminders based on their language. Use this filter to limit the resulting records based on the language (e.g. send only for invoices issued in Italian). This field is optional. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}}}, "message": {"type": "string", "description": "The message body. You may use variables to insert dynamic data to the message. Please consult the web application for the full list of the available variable names.", "example": "Hello %CNAME%, visit %PERMALINK% to pay for the invoice."}, "subject": {"type": "string", "description": "The message subject. You may use variables to insert dynamic data to the subject. Please consult the web application for the full list of the available variable names.", "example": "Outstanding payment %DUE% for %DOCUMENTNAME%"}, "user_channels": {"name": "user_channels", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`email` | Email\n`slack` | Slack\n</details>"}, "required": false, "type": "array", "example": ["slack", "email"], "description": "Clients will always receive reminders via email. If the reminder is sent to the team members (`audience` is set to `user` or `both`, it can be delivered via `email`, `slack` or both."}}}, "name": "data", "in": "body"}], "tags": ["reminders"], "summary": "/v1.0/reminders/{id}/", "operationId": "reminders_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "audience": {"type": "string", "description": "Reminders may be sent to clients, as well as your own team members. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`user` | My team\n`client` | Client\n`both` | Both my team & the client\n</details>", "example": "client"}, "application": {"type": "string", "description": "Whether this reminder applies to invoices, estimates, recurring invoices etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`invoice` | Invoices\n`contact` | Clients\n`recurringinvoice` | Recurring invoices\n`estimate` | Estimates\n`purchase` | Bills\n</details>", "example": "invoice"}, "type": {"type": "string", "description": "Whether the reminder is for an overdue invoice, or a client amount due etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`document_overdue` | Overdue reminder\n`document_due_date_approaching` | About to become overdue\n`document_issued` | Issued reminder\n`estimate_issued` | Pending estimates\n`client_due` | Client amount due\n`client_overdue` | Client amount overdue\n`recurring_issued` | About to be issued\n`recurring_expires` | About to expire\n</details>", "example": "document_overdue"}, "message": {"type": "string", "description": "The message body. You may use variables to insert dynamic data to the message. Please consult the web application for the full list of the available variable names.", "example": "Hello %CNAME%, visit %PERMALINK% to pay for the invoice."}, "subject": {"type": "string", "description": "The message subject. You may use variables to insert dynamic data to the subject. Please consult the web application for the full list of the available variable names.", "example": "Outstanding payment %DUE% for %DOCUMENTNAME%"}, "user_channels": {"name": "user_channels", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`email` | Email\n`slack` | Slack\n</details>"}, "required": false, "type": "array", "example": ["slack", "email"], "description": "Clients will always receive reminders via email. If the reminder is sent to the team members (`audience` is set to `user` or `both`, it can be delivered via `email`, `slack` or both."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "options": {"type": "object", "properties": {"amount": {"type": "string", "description": "The threshold above which the reminder will be sent. For example, when sending reminders for outstanding invoices, the message will be sent only if the outstanding amount is higher than the specified value. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places."}, "number_of_days": {"type": "integer", "description": "Number of days after which the message will be sent. For example, when sending reminders for outstanding invoices, the message will be sent X days after the invoice has gone overdue."}, "language": {"type": "string", "description": "When working with clients abroad, you may want to send different reminders based on their language. Use this filter to limit the resulting records based on the language (e.g. send only for invoices issued in Italian). This field is optional. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}}, "description": "The rules based on which the reminder is being sent."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a reminder.\n---\nThe only difference between full & partial update is that the latter\nwill treat all parameters as optional. Any missing parameter will\nresult in keeping the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "audience": {"type": "string", "description": "Reminders may be sent to clients, as well as your own team members. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`user` | My team\n`client` | Client\n`both` | Both my team & the client\n</details>", "example": "client"}, "application": {"type": "string", "description": "Whether this reminder applies to invoices, estimates, recurring invoices etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`invoice` | Invoices\n`contact` | Clients\n`recurringinvoice` | Recurring invoices\n`estimate` | Estimates\n`purchase` | Bills\n</details>", "example": "invoice"}, "type": {"type": "string", "description": "Whether the reminder is for an overdue invoice, or a client amount due etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`document_overdue` | Overdue reminder\n`document_due_date_approaching` | About to become overdue\n`document_issued` | Issued reminder\n`estimate_issued` | Pending estimates\n`client_due` | Client amount due\n`client_overdue` | Client amount overdue\n`recurring_issued` | About to be issued\n`recurring_expires` | About to expire\n</details>", "example": "document_overdue"}, "options": {"type": "object", "description": "The rules based on which the reminder is being sent.", "properties": {"amount": {"type": "string", "description": "The threshold above which the reminder will be sent. For example, when sending reminders for outstanding invoices, the message will be sent only if the outstanding amount is higher than the specified value. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places."}, "number_of_days": {"type": "integer", "description": "Number of days after which the message will be sent. For example, when sending reminders for outstanding invoices, the message will be sent X days after the invoice has gone overdue."}, "language": {"type": "string", "description": "When working with clients abroad, you may want to send different reminders based on their language. Use this filter to limit the resulting records based on the language (e.g. send only for invoices issued in Italian). This field is optional. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}}}, "message": {"type": "string", "description": "The message body. You may use variables to insert dynamic data to the message. Please consult the web application for the full list of the available variable names.", "example": "Hello %CNAME%, visit %PERMALINK% to pay for the invoice."}, "subject": {"type": "string", "description": "The message subject. You may use variables to insert dynamic data to the subject. Please consult the web application for the full list of the available variable names.", "example": "Outstanding payment %DUE% for %DOCUMENTNAME%"}, "user_channels": {"name": "user_channels", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`email` | Email\n`slack` | Slack\n</details>"}, "required": false, "type": "array", "example": ["slack", "email"], "description": "Clients will always receive reminders via email. If the reminder is sent to the team members (`audience` is set to `user` or `both`, it can be delivered via `email`, `slack` or both."}}}, "name": "data", "in": "body"}], "tags": ["reminders"], "summary": "/v1.0/reminders/{id}/", "operationId": "reminders_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "audience": {"type": "string", "description": "Reminders may be sent to clients, as well as your own team members. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`user` | My team\n`client` | Client\n`both` | Both my team & the client\n</details>", "example": "client"}, "application": {"type": "string", "description": "Whether this reminder applies to invoices, estimates, recurring invoices etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`invoice` | Invoices\n`contact` | Clients\n`recurringinvoice` | Recurring invoices\n`estimate` | Estimates\n`purchase` | Bills\n</details>", "example": "invoice"}, "type": {"type": "string", "description": "Whether the reminder is for an overdue invoice, or a client amount due etc. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`document_overdue` | Overdue reminder\n`document_due_date_approaching` | About to become overdue\n`document_issued` | Issued reminder\n`estimate_issued` | Pending estimates\n`client_due` | Client amount due\n`client_overdue` | Client amount overdue\n`recurring_issued` | About to be issued\n`recurring_expires` | About to expire\n</details>", "example": "document_overdue"}, "message": {"type": "string", "description": "The message body. You may use variables to insert dynamic data to the message. Please consult the web application for the full list of the available variable names.", "example": "Hello %CNAME%, visit %PERMALINK% to pay for the invoice."}, "subject": {"type": "string", "description": "The message subject. You may use variables to insert dynamic data to the subject. Please consult the web application for the full list of the available variable names.", "example": "Outstanding payment %DUE% for %DOCUMENTNAME%"}, "user_channels": {"name": "user_channels", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`email` | Email\n`slack` | Slack\n</details>"}, "required": false, "type": "array", "example": ["slack", "email"], "description": "Clients will always receive reminders via email. If the reminder is sent to the team members (`audience` is set to `user` or `both`, it can be delivered via `email`, `slack` or both."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "options": {"type": "object", "properties": {"amount": {"type": "string", "description": "The threshold above which the reminder will be sent. For example, when sending reminders for outstanding invoices, the message will be sent only if the outstanding amount is higher than the specified value. Decimal rendered as string, with the `.` character used as a floating point. Up to 2 decimal places."}, "number_of_days": {"type": "integer", "description": "Number of days after which the message will be sent. For example, when sending reminders for outstanding invoices, the message will be sent X days after the invoice has gone overdue."}, "language": {"type": "string", "description": "When working with clients abroad, you may want to send different reminders based on their language. Use this filter to limit the resulting records based on the language (e.g. send only for invoices issued in Italian). This field is optional. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}}, "description": "The rules based on which the reminder is being sent."}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a reminder.\n---\nThis action will permanently delete the reminder. To temporarily\ndisable it, use the `active` field.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["reminders"], "summary": "/v1.0/reminders/{id}/", "operationId": "reminders_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/salesseries/": {"get": {"description": "Get the list of sales numbering sequences.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `name`, `description`."}, {"required": false, "type": "string", "name": "documenttype", "in": "query", "description": "Optional filter."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `name`. Prepend a `-` to denote reverse ordering (e.g `-name`)."}], "tags": ["salesseries"], "summary": "/v1.0/salesseries/", "operationId": "salesseries_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "name": {"type": "string", "description": "The sequence prefix (e.g. \"INV\").", "example": "INV"}, "description": {"type": "string", "description": "An optional description used for your own reference.", "example": "A new sequence."}, "documenttypes": {"type": "string", "description": "List of document type IDs associated with this sequence.", "example": ["8800000040088865"]}, "official": {"type": "string", "description": "**This field is deprecated**. It always returns` true`.", "example": true}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/salesseries/{id}/": {"get": {"description": "Get a single sales numbering sequence.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["salesseries"], "summary": "/v1.0/salesseries/{id}/", "operationId": "salesseries_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "name": {"type": "string", "description": "The sequence prefix (e.g. \"INV\").", "example": "INV"}, "description": {"type": "string", "description": "An optional description used for your own reference.", "example": "A new sequence."}, "documenttypes": {"type": "string", "description": "List of document type IDs associated with this sequence.", "example": ["8800000040088865"]}, "official": {"type": "string", "description": "**This field is deprecated**. It always returns` true`.", "example": true}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "delete": {"description": "Delete a sales numbering sequence.\n---\nNote that you cannot delete sequences being currently in use.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["salesseries"], "summary": "/v1.0/salesseries/{id}/", "operationId": "salesseries_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/stockadjustments/": {"get": {"description": "Get the list of stock adjustments.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "product", "in": "query", "description": "Optionally filter by product ID."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `date`, `operand`. Prepend a `-` to denote reverse ordering (e.g `-date`)."}], "tags": ["stockadjustments"], "summary": "/v1.0/stockadjustments/", "operationId": "stockadjustments_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "operand": {"type": "string", "description": "Whether the adjustment increases or decreases the quantity in stock. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`+` | +\n`-` | -\n</details>", "example": "+"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "notes": {"type": "string", "description": "Adjustment reason / description.", "example": "Some notes"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new stock adjustment.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["product"], "type": "object", "properties": {"product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "operand": {"type": "string", "description": "Whether the adjustment increases or decreases the quantity in stock. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`+` | +\n`-` | -\n</details>", "example": "+"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "notes": {"type": "string", "description": "Adjustment reason / description.", "example": "Some notes"}}}, "name": "data", "in": "body"}], "tags": ["stockadjustments"], "summary": "/v1.0/stockadjustments/", "operationId": "stockadjustments_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "operand": {"type": "string", "description": "Whether the adjustment increases or decreases the quantity in stock. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`+` | +\n`-` | -\n</details>", "example": "+"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "notes": {"type": "string", "description": "Adjustment reason / description.", "example": "Some notes"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/stockadjustments/{id}/": {"get": {"description": "Get a single stock adjustment.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["stockadjustments"], "summary": "/v1.0/stockadjustments/{id}/", "operationId": "stockadjustments_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "product": {"type": "string", "description": "ID of the associated product / service.", "example": "9900000040000600"}, "operand": {"type": "string", "description": "Whether the adjustment increases or decreases the quantity in stock. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`+` | +\n`-` | -\n</details>", "example": "+"}, "quantity": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 4 decimal places.", "example": "2.00"}, "date": {"type": "string", "description": " Date is in the form of `YYYY-mm-dd`.", "example": "2018-10-25"}, "notes": {"type": "string", "description": "Adjustment reason / description.", "example": "Some notes"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "delete": {"description": "Delete a stock adjustment.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["stockadjustments"], "summary": "/v1.0/stockadjustments/{id}/", "operationId": "stockadjustments_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/taxes/": {"get": {"description": "Get the list of taxes.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `title`, `percentage`."}, {"required": false, "type": "string", "name": "active", "in": "query", "description": "Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "operand", "in": "query", "description": "Optionally filter by operand. Can be either `+` (tax) or `-` (deduction)."}, {"required": false, "type": "string", "name": "tax_type", "in": "query", "description": "Optionally filter by tax type. Can be either `vat` or `withholding`."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `title`, `operand`, `percentage`, `active`, `tax_type`. Prepend a `-` to denote reverse ordering (e.g `-title`)."}], "tags": ["taxes"], "summary": "/v1.0/taxes/", "operationId": "taxes_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "A unique title for this tax.", "example": "VAT"}, "operand": {"type": "string", "description": "Controls whether this a tax (positive value) or a deduction (negative value). One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`+` | +\n`-` | -\n</details>", "example": "+"}, "percentage": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "20.00"}, "tax_type": {"type": "string", "description": "Denote if this is a special tax. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`vat` | VAT\n`withholding` | Withholding tax\n</details>", "example": "vat"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new tax.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["title", "operand", "percentage"], "type": "object", "properties": {"title": {"type": "string", "description": "A unique title for this tax.", "example": "VAT"}, "title_translations": {"type": "object", "description": "This applies to organizations creating invoices in multiple languages and controls the tax translations for each language.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "\u0414\u0414\u0421"}, "de": {"type": "string", "description": "The german translation.", "example": "MwSt."}, "el": {"type": "string", "description": "The greek translation.", "example": "\u03a6\u03a0\u0391"}, "en": {"type": "string", "description": "The english translation.", "example": "VAT"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "VAT"}, "es": {"type": "string", "description": "The spanish translation.", "example": "IVA"}, "fr": {"type": "string", "description": "The french translation.", "example": "TVA"}, "it": {"type": "string", "description": "The italian translation.", "example": "IVA"}}}, "operand": {"type": "string", "description": "Controls whether this a tax (positive value) or a deduction (negative value). One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`+` | +\n`-` | -\n</details>", "example": "+"}, "percentage": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "20.00"}, "tax_type": {"type": "string", "description": "Denote if this is a special tax. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`vat` | VAT\n`withholding` | Withholding tax\n</details>", "example": "vat"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}}}, "name": "data", "in": "body"}], "tags": ["taxes"], "summary": "/v1.0/taxes/", "operationId": "taxes_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "A unique title for this tax.", "example": "VAT"}, "title_translations": {"type": "object", "description": "This applies to organizations creating invoices in multiple languages and controls the tax translations for each language.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "\u0414\u0414\u0421"}, "de": {"type": "string", "description": "The german translation.", "example": "MwSt."}, "el": {"type": "string", "description": "The greek translation.", "example": "\u03a6\u03a0\u0391"}, "en": {"type": "string", "description": "The english translation.", "example": "VAT"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "VAT"}, "es": {"type": "string", "description": "The spanish translation.", "example": "IVA"}, "fr": {"type": "string", "description": "The french translation.", "example": "TVA"}, "it": {"type": "string", "description": "The italian translation.", "example": "IVA"}}}, "operand": {"type": "string", "description": "Controls whether this a tax (positive value) or a deduction (negative value). One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`+` | +\n`-` | -\n</details>", "example": "+"}, "percentage": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "20.00"}, "tax_type": {"type": "string", "description": "Denote if this is a special tax. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`vat` | VAT\n`withholding` | Withholding tax\n</details>", "example": "vat"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/taxes/{id}/": {"get": {"description": "Get a single tax.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["taxes"], "summary": "/v1.0/taxes/{id}/", "operationId": "taxes_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "A unique title for this tax.", "example": "VAT"}, "title_translations": {"type": "object", "description": "This applies to organizations creating invoices in multiple languages and controls the tax translations for each language.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "\u0414\u0414\u0421"}, "de": {"type": "string", "description": "The german translation.", "example": "MwSt."}, "el": {"type": "string", "description": "The greek translation.", "example": "\u03a6\u03a0\u0391"}, "en": {"type": "string", "description": "The english translation.", "example": "VAT"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "VAT"}, "es": {"type": "string", "description": "The spanish translation.", "example": "IVA"}, "fr": {"type": "string", "description": "The french translation.", "example": "TVA"}, "it": {"type": "string", "description": "The italian translation.", "example": "IVA"}}}, "operand": {"type": "string", "description": "Controls whether this a tax (positive value) or a deduction (negative value). One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`+` | +\n`-` | -\n</details>", "example": "+"}, "percentage": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "20.00"}, "tax_type": {"type": "string", "description": "Denote if this is a special tax. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`vat` | VAT\n`withholding` | Withholding tax\n</details>", "example": "vat"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a tax.\n---\nYou must provide at least the required fields for the record to be\nsuccessfully updated. Any missing parameter will\nresult in keeping the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["title", "operand", "percentage"], "type": "object", "properties": {"title": {"type": "string", "description": "A unique title for this tax.", "example": "VAT"}, "title_translations": {"type": "object", "description": "This applies to organizations creating invoices in multiple languages and controls the tax translations for each language.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "\u0414\u0414\u0421"}, "de": {"type": "string", "description": "The german translation.", "example": "MwSt."}, "el": {"type": "string", "description": "The greek translation.", "example": "\u03a6\u03a0\u0391"}, "en": {"type": "string", "description": "The english translation.", "example": "VAT"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "VAT"}, "es": {"type": "string", "description": "The spanish translation.", "example": "IVA"}, "fr": {"type": "string", "description": "The french translation.", "example": "TVA"}, "it": {"type": "string", "description": "The italian translation.", "example": "IVA"}}}, "operand": {"type": "string", "description": "Controls whether this a tax (positive value) or a deduction (negative value). One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`+` | +\n`-` | -\n</details>", "example": "+"}, "percentage": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "20.00"}, "tax_type": {"type": "string", "description": "Denote if this is a special tax. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`vat` | VAT\n`withholding` | Withholding tax\n</details>", "example": "vat"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}}}, "name": "data", "in": "body"}], "tags": ["taxes"], "summary": "/v1.0/taxes/{id}/", "operationId": "taxes_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "A unique title for this tax.", "example": "VAT"}, "title_translations": {"type": "object", "description": "This applies to organizations creating invoices in multiple languages and controls the tax translations for each language.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "\u0414\u0414\u0421"}, "de": {"type": "string", "description": "The german translation.", "example": "MwSt."}, "el": {"type": "string", "description": "The greek translation.", "example": "\u03a6\u03a0\u0391"}, "en": {"type": "string", "description": "The english translation.", "example": "VAT"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "VAT"}, "es": {"type": "string", "description": "The spanish translation.", "example": "IVA"}, "fr": {"type": "string", "description": "The french translation.", "example": "TVA"}, "it": {"type": "string", "description": "The italian translation.", "example": "IVA"}}}, "operand": {"type": "string", "description": "Controls whether this a tax (positive value) or a deduction (negative value). One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`+` | +\n`-` | -\n</details>", "example": "+"}, "percentage": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "20.00"}, "tax_type": {"type": "string", "description": "Denote if this is a special tax. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`vat` | VAT\n`withholding` | Withholding tax\n</details>", "example": "vat"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a tax.\n---\nThe only difference between full & partial update is that the latter\nwill treat all parameters as optional. Any missing parameter will\nresult in keeping the old value.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"title": {"type": "string", "description": "A unique title for this tax.", "example": "VAT"}, "title_translations": {"type": "object", "description": "This applies to organizations creating invoices in multiple languages and controls the tax translations for each language.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "\u0414\u0414\u0421"}, "de": {"type": "string", "description": "The german translation.", "example": "MwSt."}, "el": {"type": "string", "description": "The greek translation.", "example": "\u03a6\u03a0\u0391"}, "en": {"type": "string", "description": "The english translation.", "example": "VAT"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "VAT"}, "es": {"type": "string", "description": "The spanish translation.", "example": "IVA"}, "fr": {"type": "string", "description": "The french translation.", "example": "TVA"}, "it": {"type": "string", "description": "The italian translation.", "example": "IVA"}}}, "operand": {"type": "string", "description": "Controls whether this a tax (positive value) or a deduction (negative value). One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`+` | +\n`-` | -\n</details>", "example": "+"}, "percentage": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "20.00"}, "tax_type": {"type": "string", "description": "Denote if this is a special tax. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`vat` | VAT\n`withholding` | Withholding tax\n</details>", "example": "vat"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}}}, "name": "data", "in": "body"}], "tags": ["taxes"], "summary": "/v1.0/taxes/{id}/", "operationId": "taxes_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "A unique title for this tax.", "example": "VAT"}, "title_translations": {"type": "object", "description": "This applies to organizations creating invoices in multiple languages and controls the tax translations for each language.", "properties": {"bg": {"type": "string", "description": "The bulgarian translation.", "example": "\u0414\u0414\u0421"}, "de": {"type": "string", "description": "The german translation.", "example": "MwSt."}, "el": {"type": "string", "description": "The greek translation.", "example": "\u03a6\u03a0\u0391"}, "en": {"type": "string", "description": "The english translation.", "example": "VAT"}, "en-gb": {"type": "string", "description": "The english (united kingdom) translation.", "example": "VAT"}, "es": {"type": "string", "description": "The spanish translation.", "example": "IVA"}, "fr": {"type": "string", "description": "The french translation.", "example": "TVA"}, "it": {"type": "string", "description": "The italian translation.", "example": "IVA"}}}, "operand": {"type": "string", "description": "Controls whether this a tax (positive value) or a deduction (negative value). One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`+` | +\n`-` | -\n</details>", "example": "+"}, "percentage": {"type": "string", "description": " Decimal rendered as string, with the `.` character used as a floating point. Up to 6 decimal places.", "example": "20.00"}, "tax_type": {"type": "string", "description": "Denote if this is a special tax. One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`vat` | VAT\n`withholding` | Withholding tax\n</details>", "example": "vat"}, "active": {"type": "boolean", "description": "Instead of deleting, you may archive the record."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a tax.\n---\nNote that you cannot delete taxes used in invoices, credit notes etc.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["taxes"], "summary": "/v1.0/taxes/{id}/", "operationId": "taxes_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/themes/": {"get": {"description": "Get the list of templates.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `title`, `company_name`, `slogan`, `company_info`, `invoice_public_notes`, `estimate_public_notes`, `invoice_email_message`, `estimate_email_message`."}, {"required": false, "type": "string", "name": "template", "in": "query", "description": "Optionally filter by the template layout. One of `strict`, `prof`, `modern` or `classic`"}, {"required": false, "type": "string", "name": "language", "in": "query", "description": "Optionally filter templates based on their language."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `title`, `template`, `language`, `font_size`. Prepend a `-` to denote reverse ordering (e.g `-title`)."}], "tags": ["themes"], "summary": "/v1.0/themes/", "operationId": "themes_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The title is used for your own reference, to help you identify the template.", "example": "The default template"}, "default": {"type": "boolean", "description": "The default template is applied to new invoices when no template is explicitly specified and no other template is associated with the invoice client. Out of your templates list, only one can be marked as default."}, "template": {"type": "string", "description": "The template layout. Elorus comes with a fixed library of invoice layouts to choose from. Please visit the web application for more information on what each layout looks like. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`strict` | Strict\n`prof` | Professional\n`modern` | Modern\n`classic` | Classic\n</details>", "example": "classic"}, "variation": {"type": "string", "description": "The predefined set of colors to use when rendering the template.", "example": "default"}, "language": {"type": "string", "description": "The default invoicing language. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}, "font_size": {"type": "string", "description": "The font size to use when rendering the invoice, estimate etc.", "example": "default"}, "company_name": {"type": "string", "description": "How your company name will be displayed when using this theme.", "example": "ACME Inc."}, "slogan": {"type": "string", "description": "A tagline that will appear under the company name.", "example": "Creating awesomeness"}, "company_info": {"type": "string", "description": "How your company details (address, contact info etc.) will be displayed when using this template.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "logo": {"type": "string", "description": "The file URL.", "example": "//url-to-access-the-file/"}, "electronic_signature": {"type": "string", "description": "The file URL.", "example": "//url-to-access-the-file/"}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}, "discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "invoice_terms": {"type": "string", "description": "Default terms & conditions for new documents.", "example": "Default invoice terms & conditions."}, "estimate_terms": {"type": "string", "description": "Default terms & conditions for new documents.", "example": "Default estimate terms & conditions."}, "invoice_public_notes": {"type": "string", "description": "Default public notes for new documents.", "example": "Default notes on the invoice."}, "estimate_public_notes": {"type": "string", "description": "Default public notes for new documents.", "example": "Default notes on the estimate."}, "invoice_email_message": {"type": "string", "description": "This message will appear by default when you try to send your invoices or credit notes via email.", "example": "<div style=\"white-space: pre-wrap;\"><p>Hello %CNAME%,<br><br>Please visit %PERMALINK% to access the invoice.<br>You can also download a pdf version from that link.<br><br>Thanks,<br>%SNAME%</p></div>"}, "estimate_email_message": {"type": "string", "description": "This message will appear by default when you try to send your estimates via email.", "example": "<div style=\"white-space: pre-wrap;\"><p>Hello %CNAME%,<br><br>Please visit %PERMALINK% to access the estimate.<br>You can also download a pdf version from that link.<br><br>Thanks,<br>%SNAME%</p></div>"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new template.\n---\n**Incoming data must be encoded as `multipart/form-data` so that you\nmay upload files.** Please not that the response will still be in\nJSON format and will contain appropriate URLs to access any related\nfiles (e.g. company logo).", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": true, "type": "string", "name": "title", "in": "formData", "description": "The title is used for your own reference, to help you identify the template."}, {"required": false, "type": "boolean", "name": "default", "in": "formData", "description": "The default template is applied to new invoices when no template is explicitly specified and no other template is associated with the invoice client. Out of your templates list, only one can be marked as default."}, {"required": false, "type": "string", "name": "template", "in": "formData", "description": "The template layout. Elorus comes with a fixed library of invoice layouts to choose from. Please visit the web application for more information on what each layout looks like. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`strict` | Strict\n`prof` | Professional\n`modern` | Modern\n`classic` | Classic\n</details>"}, {"required": false, "type": "string", "name": "variation", "in": "formData", "description": "The predefined set of colors to use when rendering the template. **This field has been deprecated** in favor of a detailed, more sophisticated color definition mechanism. You are advised **not to update** the `layout` of existing templates, since it might lead to unpredictable results. For new templates, we suggest you send the value `default`, and fine-tune the template appearance via the web application."}, {"required": false, "type": "string", "name": "language", "in": "formData", "description": "The default invoicing language. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>"}, {"required": false, "type": "string", "name": "font_size", "in": "formData", "description": "The font size to use when rendering the invoice, estimate etc. **This field has been deprecated** in favor of a detailed, more sophisticated font & font size definition mechanism. You are advised **not to update** the `font size` of existing templates using this version of the API. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`small` | Small\n`default` | Medium\n`large` | Large\n</details>"}, {"required": false, "type": "string", "name": "company_name", "in": "formData", "description": "How your company name will be displayed when using this theme."}, {"required": false, "type": "string", "name": "slogan", "in": "formData", "description": "A tagline that will appear under the company name."}, {"required": false, "type": "string", "name": "company_info", "in": "formData", "description": "How your company details (address, contact info etc.) will be displayed when using this template."}, {"required": false, "type": "string", "name": "logo", "in": "formData", "description": "The actual file contents."}, {"required": false, "type": "string", "name": "electronic_signature", "in": "formData", "description": "The actual file contents."}, {"required": false, "type": "boolean", "name": "hide_description", "in": "formData", "description": "Hide the item description column."}, {"required": false, "type": "boolean", "name": "hide_quantity", "in": "formData", "description": "Hide the item quantity column."}, {"required": false, "type": "boolean", "name": "hide_vat", "in": "formData", "description": "Hide the item vat column."}, {"required": false, "type": "boolean", "name": "hide_contact_information", "in": "formData", "description": "Hide the client's contact person, email, and phone."}, {"required": false, "type": "boolean", "name": "hide_creator_information", "in": "formData", "description": "Hide creator's personal information (name, email, and phone)."}, {"required": false, "type": "boolean", "name": "hide_vat_table", "in": "formData", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, {"required": false, "type": "integer", "name": "unit_measure_appearance", "in": "formData", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}, {"required": false, "type": "integer", "name": "discount_appearance", "in": "formData", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, {"required": false, "type": "boolean", "name": "hide_payments", "in": "formData", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, {"required": false, "type": "boolean", "name": "hide_client_due", "in": "formData", "description": "Hide client's due amount from the commercial document's printable version."}, {"required": false, "type": "string", "name": "invoice_terms", "in": "formData", "description": "Default terms & conditions for new documents."}, {"required": false, "type": "string", "name": "estimate_terms", "in": "formData", "description": "Default terms & conditions for new documents."}, {"required": false, "type": "string", "name": "invoice_public_notes", "in": "formData", "description": "Default public notes for new documents."}, {"required": false, "type": "string", "name": "estimate_public_notes", "in": "formData", "description": "Default public notes for new documents."}, {"required": false, "type": "string", "name": "invoice_email_message", "in": "formData", "description": "This message will appear by default when you try to send your invoices or credit notes via email."}, {"required": false, "type": "string", "name": "estimate_email_message", "in": "formData", "description": "This message will appear by default when you try to send your estimates via email."}], "tags": ["themes"], "summary": "/v1.0/themes/", "operationId": "themes_create", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The title is used for your own reference, to help you identify the template.", "example": "The default template"}, "default": {"type": "boolean", "description": "The default template is applied to new invoices when no template is explicitly specified and no other template is associated with the invoice client. Out of your templates list, only one can be marked as default."}, "template": {"type": "string", "description": "The template layout. Elorus comes with a fixed library of invoice layouts to choose from. Please visit the web application for more information on what each layout looks like. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`strict` | Strict\n`prof` | Professional\n`modern` | Modern\n`classic` | Classic\n</details>", "example": "classic"}, "variation": {"type": "string", "description": "The predefined set of colors to use when rendering the template. **This field has been deprecated** in favor of a detailed, more sophisticated color definition mechanism. You are advised **not to update** the `layout` of existing templates, since it might lead to unpredictable results. For new templates, we suggest you send the value `default`, and fine-tune the template appearance via the web application.", "example": "default"}, "language": {"type": "string", "description": "The default invoicing language. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}, "font_size": {"type": "string", "description": "The font size to use when rendering the invoice, estimate etc. **This field has been deprecated** in favor of a detailed, more sophisticated font & font size definition mechanism. You are advised **not to update** the `font size` of existing templates using this version of the API. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`small` | Small\n`default` | Medium\n`large` | Large\n</details>", "example": "default"}, "company_name": {"type": "string", "description": "How your company name will be displayed when using this theme.", "example": "ACME Inc."}, "slogan": {"type": "string", "description": "A tagline that will appear under the company name.", "example": "Creating awesomeness"}, "company_info": {"type": "string", "description": "How your company details (address, contact info etc.) will be displayed when using this template.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "logo": {"type": "string", "description": "The actual file contents.", "example": "//url-to-access-the-file/"}, "electronic_signature": {"type": "string", "description": "The actual file contents.", "example": "//url-to-access-the-file/"}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}, "discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "invoice_terms": {"type": "string", "description": "Default terms & conditions for new documents.", "example": "Default invoice terms & conditions."}, "estimate_terms": {"type": "string", "description": "Default terms & conditions for new documents.", "example": "Default estimate terms & conditions."}, "invoice_public_notes": {"type": "string", "description": "Default public notes for new documents.", "example": "Default notes on the invoice."}, "estimate_public_notes": {"type": "string", "description": "Default public notes for new documents.", "example": "Default notes on the estimate."}, "invoice_email_message": {"type": "string", "description": "This message will appear by default when you try to send your invoices or credit notes via email.", "example": "<div style=\"white-space: pre-wrap;\"><p>Hello %CNAME%,<br><br>Please visit %PERMALINK% to access the invoice.<br>You can also download a pdf version from that link.<br><br>Thanks,<br>%SNAME%</p></div>"}, "estimate_email_message": {"type": "string", "description": "This message will appear by default when you try to send your estimates via email.", "example": "<div style=\"white-space: pre-wrap;\"><p>Hello %CNAME%,<br><br>Please visit %PERMALINK% to access the estimate.<br>You can also download a pdf version from that link.<br><br>Thanks,<br>%SNAME%</p></div>"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/themes/{id}/": {"get": {"description": "Get a single template.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["themes"], "summary": "/v1.0/themes/{id}/", "operationId": "themes_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The title is used for your own reference, to help you identify the template.", "example": "The default template"}, "default": {"type": "boolean", "description": "The default template is applied to new invoices when no template is explicitly specified and no other template is associated with the invoice client. Out of your templates list, only one can be marked as default."}, "template": {"type": "string", "description": "The template layout. Elorus comes with a fixed library of invoice layouts to choose from. Please visit the web application for more information on what each layout looks like. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`strict` | Strict\n`prof` | Professional\n`modern` | Modern\n`classic` | Classic\n</details>", "example": "classic"}, "variation": {"type": "string", "description": "The predefined set of colors to use when rendering the template.", "example": "default"}, "language": {"type": "string", "description": "The default invoicing language. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}, "font_size": {"type": "string", "description": "The font size to use when rendering the invoice, estimate etc.", "example": "default"}, "company_name": {"type": "string", "description": "How your company name will be displayed when using this theme.", "example": "ACME Inc."}, "slogan": {"type": "string", "description": "A tagline that will appear under the company name.", "example": "Creating awesomeness"}, "company_info": {"type": "string", "description": "How your company details (address, contact info etc.) will be displayed when using this template.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "logo": {"type": "string", "description": "The file URL.", "example": "//url-to-access-the-file/"}, "electronic_signature": {"type": "string", "description": "The file URL.", "example": "//url-to-access-the-file/"}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}, "discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "invoice_terms": {"type": "string", "description": "Default terms & conditions for new documents.", "example": "Default invoice terms & conditions."}, "estimate_terms": {"type": "string", "description": "Default terms & conditions for new documents.", "example": "Default estimate terms & conditions."}, "invoice_public_notes": {"type": "string", "description": "Default public notes for new documents.", "example": "Default notes on the invoice."}, "estimate_public_notes": {"type": "string", "description": "Default public notes for new documents.", "example": "Default notes on the estimate."}, "invoice_email_message": {"type": "string", "description": "This message will appear by default when you try to send your invoices or credit notes via email.", "example": "<div style=\"white-space: pre-wrap;\"><p>Hello %CNAME%,<br><br>Please visit %PERMALINK% to access the invoice.<br>You can also download a pdf version from that link.<br><br>Thanks,<br>%SNAME%</p></div>"}, "estimate_email_message": {"type": "string", "description": "This message will appear by default when you try to send your estimates via email.", "example": "<div style=\"white-space: pre-wrap;\"><p>Hello %CNAME%,<br><br>Please visit %PERMALINK% to access the estimate.<br>You can also download a pdf version from that link.<br><br>Thanks,<br>%SNAME%</p></div>"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a template.\n---\n**Incoming data must be encoded as `multipart/form-data` so that you\nmay upload files.** Please not that the response will still be in\nJSON format and will contain appropriate URLs to access any related\nfiles (e.g. company logo).", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": true, "type": "string", "name": "title", "in": "formData", "description": "The title is used for your own reference, to help you identify the template."}, {"required": false, "type": "boolean", "name": "default", "in": "formData", "description": "The default template is applied to new invoices when no template is explicitly specified and no other template is associated with the invoice client. Out of your templates list, only one can be marked as default."}, {"required": false, "type": "string", "name": "template", "in": "formData", "description": "The template layout. Elorus comes with a fixed library of invoice layouts to choose from. Please visit the web application for more information on what each layout looks like. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`strict` | Strict\n`prof` | Professional\n`modern` | Modern\n`classic` | Classic\n</details>"}, {"required": false, "type": "string", "name": "variation", "in": "formData", "description": "The predefined set of colors to use when rendering the template. **This field has been deprecated** in favor of a detailed, more sophisticated color definition mechanism. You are advised **not to update** the `layout` of existing templates, since it might lead to unpredictable results. For new templates, we suggest you send the value `default`, and fine-tune the template appearance via the web application."}, {"required": false, "type": "string", "name": "language", "in": "formData", "description": "The default invoicing language. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>"}, {"required": false, "type": "string", "name": "font_size", "in": "formData", "description": "The font size to use when rendering the invoice, estimate etc. **This field has been deprecated** in favor of a detailed, more sophisticated font & font size definition mechanism. You are advised **not to update** the `font size` of existing templates using this version of the API. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`small` | Small\n`default` | Medium\n`large` | Large\n</details>"}, {"required": false, "type": "string", "name": "company_name", "in": "formData", "description": "How your company name will be displayed when using this theme."}, {"required": false, "type": "string", "name": "slogan", "in": "formData", "description": "A tagline that will appear under the company name."}, {"required": false, "type": "string", "name": "company_info", "in": "formData", "description": "How your company details (address, contact info etc.) will be displayed when using this template."}, {"required": false, "type": "string", "name": "logo", "in": "formData", "description": "The actual file contents."}, {"required": false, "type": "string", "name": "electronic_signature", "in": "formData", "description": "The actual file contents."}, {"required": false, "type": "boolean", "name": "hide_description", "in": "formData", "description": "Hide the item description column."}, {"required": false, "type": "boolean", "name": "hide_quantity", "in": "formData", "description": "Hide the item quantity column."}, {"required": false, "type": "boolean", "name": "hide_vat", "in": "formData", "description": "Hide the item vat column."}, {"required": false, "type": "boolean", "name": "hide_contact_information", "in": "formData", "description": "Hide the client's contact person, email, and phone."}, {"required": false, "type": "boolean", "name": "hide_creator_information", "in": "formData", "description": "Hide creator's personal information (name, email, and phone)."}, {"required": false, "type": "boolean", "name": "hide_vat_table", "in": "formData", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, {"required": false, "type": "integer", "name": "unit_measure_appearance", "in": "formData", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}, {"required": false, "type": "integer", "name": "discount_appearance", "in": "formData", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, {"required": false, "type": "boolean", "name": "hide_payments", "in": "formData", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, {"required": false, "type": "boolean", "name": "hide_client_due", "in": "formData", "description": "Hide client's due amount from the commercial document's printable version."}, {"required": false, "type": "string", "name": "invoice_terms", "in": "formData", "description": "Default terms & conditions for new documents."}, {"required": false, "type": "string", "name": "estimate_terms", "in": "formData", "description": "Default terms & conditions for new documents."}, {"required": false, "type": "string", "name": "invoice_public_notes", "in": "formData", "description": "Default public notes for new documents."}, {"required": false, "type": "string", "name": "estimate_public_notes", "in": "formData", "description": "Default public notes for new documents."}, {"required": false, "type": "string", "name": "invoice_email_message", "in": "formData", "description": "This message will appear by default when you try to send your invoices or credit notes via email."}, {"required": false, "type": "string", "name": "estimate_email_message", "in": "formData", "description": "This message will appear by default when you try to send your estimates via email."}], "tags": ["themes"], "summary": "/v1.0/themes/{id}/", "operationId": "themes_update", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The title is used for your own reference, to help you identify the template.", "example": "The default template"}, "default": {"type": "boolean", "description": "The default template is applied to new invoices when no template is explicitly specified and no other template is associated with the invoice client. Out of your templates list, only one can be marked as default."}, "template": {"type": "string", "description": "The template layout. Elorus comes with a fixed library of invoice layouts to choose from. Please visit the web application for more information on what each layout looks like. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`strict` | Strict\n`prof` | Professional\n`modern` | Modern\n`classic` | Classic\n</details>", "example": "classic"}, "variation": {"type": "string", "description": "The predefined set of colors to use when rendering the template. **This field has been deprecated** in favor of a detailed, more sophisticated color definition mechanism. You are advised **not to update** the `layout` of existing templates, since it might lead to unpredictable results. For new templates, we suggest you send the value `default`, and fine-tune the template appearance via the web application.", "example": "default"}, "language": {"type": "string", "description": "The default invoicing language. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}, "font_size": {"type": "string", "description": "The font size to use when rendering the invoice, estimate etc. **This field has been deprecated** in favor of a detailed, more sophisticated font & font size definition mechanism. You are advised **not to update** the `font size` of existing templates using this version of the API. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`small` | Small\n`default` | Medium\n`large` | Large\n</details>", "example": "default"}, "company_name": {"type": "string", "description": "How your company name will be displayed when using this theme.", "example": "ACME Inc."}, "slogan": {"type": "string", "description": "A tagline that will appear under the company name.", "example": "Creating awesomeness"}, "company_info": {"type": "string", "description": "How your company details (address, contact info etc.) will be displayed when using this template.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "logo": {"type": "string", "description": "The actual file contents.", "example": "//url-to-access-the-file/"}, "electronic_signature": {"type": "string", "description": "The actual file contents.", "example": "//url-to-access-the-file/"}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}, "discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "invoice_terms": {"type": "string", "description": "Default terms & conditions for new documents.", "example": "Default invoice terms & conditions."}, "estimate_terms": {"type": "string", "description": "Default terms & conditions for new documents.", "example": "Default estimate terms & conditions."}, "invoice_public_notes": {"type": "string", "description": "Default public notes for new documents.", "example": "Default notes on the invoice."}, "estimate_public_notes": {"type": "string", "description": "Default public notes for new documents.", "example": "Default notes on the estimate."}, "invoice_email_message": {"type": "string", "description": "This message will appear by default when you try to send your invoices or credit notes via email.", "example": "<div style=\"white-space: pre-wrap;\"><p>Hello %CNAME%,<br><br>Please visit %PERMALINK% to access the invoice.<br>You can also download a pdf version from that link.<br><br>Thanks,<br>%SNAME%</p></div>"}, "estimate_email_message": {"type": "string", "description": "This message will appear by default when you try to send your estimates via email.", "example": "<div style=\"white-space: pre-wrap;\"><p>Hello %CNAME%,<br><br>Please visit %PERMALINK% to access the estimate.<br>You can also download a pdf version from that link.<br><br>Thanks,<br>%SNAME%</p></div>"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a template.\n---\nThe only difference between full & partial update is that the latter\nwill treat all parameters as optional. Any missing parameter will\nresult in keeping the old value.\n\n**Incoming data must be encoded as `multipart/form-data` so that you\nmay upload files.** Please not that the response will still be in\nJSON format and will contain appropriate URLs to access any related\nfiles (e.g. company logo).", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "string", "name": "title", "in": "formData", "description": "The title is used for your own reference, to help you identify the template."}, {"required": false, "type": "boolean", "name": "default", "in": "formData", "description": "The default template is applied to new invoices when no template is explicitly specified and no other template is associated with the invoice client. Out of your templates list, only one can be marked as default."}, {"required": false, "type": "string", "name": "template", "in": "formData", "description": "The template layout. Elorus comes with a fixed library of invoice layouts to choose from. Please visit the web application for more information on what each layout looks like. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`strict` | Strict\n`prof` | Professional\n`modern` | Modern\n`classic` | Classic\n</details>"}, {"required": false, "type": "string", "name": "variation", "in": "formData", "description": "The predefined set of colors to use when rendering the template. **This field has been deprecated** in favor of a detailed, more sophisticated color definition mechanism. You are advised **not to update** the `layout` of existing templates, since it might lead to unpredictable results. For new templates, we suggest you send the value `default`, and fine-tune the template appearance via the web application."}, {"required": false, "type": "string", "name": "language", "in": "formData", "description": "The default invoicing language. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>"}, {"required": false, "type": "string", "name": "font_size", "in": "formData", "description": "The font size to use when rendering the invoice, estimate etc. **This field has been deprecated** in favor of a detailed, more sophisticated font & font size definition mechanism. You are advised **not to update** the `font size` of existing templates using this version of the API. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`small` | Small\n`default` | Medium\n`large` | Large\n</details>"}, {"required": false, "type": "string", "name": "company_name", "in": "formData", "description": "How your company name will be displayed when using this theme."}, {"required": false, "type": "string", "name": "slogan", "in": "formData", "description": "A tagline that will appear under the company name."}, {"required": false, "type": "string", "name": "company_info", "in": "formData", "description": "How your company details (address, contact info etc.) will be displayed when using this template."}, {"required": false, "type": "string", "name": "logo", "in": "formData", "description": "The actual file contents."}, {"required": false, "type": "string", "name": "electronic_signature", "in": "formData", "description": "The actual file contents."}, {"required": false, "type": "boolean", "name": "hide_description", "in": "formData", "description": "Hide the item description column."}, {"required": false, "type": "boolean", "name": "hide_quantity", "in": "formData", "description": "Hide the item quantity column."}, {"required": false, "type": "boolean", "name": "hide_vat", "in": "formData", "description": "Hide the item vat column."}, {"required": false, "type": "boolean", "name": "hide_contact_information", "in": "formData", "description": "Hide the client's contact person, email, and phone."}, {"required": false, "type": "boolean", "name": "hide_creator_information", "in": "formData", "description": "Hide creator's personal information (name, email, and phone)."}, {"required": false, "type": "boolean", "name": "hide_vat_table", "in": "formData", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, {"required": false, "type": "integer", "name": "unit_measure_appearance", "in": "formData", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}, {"required": false, "type": "integer", "name": "discount_appearance", "in": "formData", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, {"required": false, "type": "boolean", "name": "hide_payments", "in": "formData", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, {"required": false, "type": "boolean", "name": "hide_client_due", "in": "formData", "description": "Hide client's due amount from the commercial document's printable version."}, {"required": false, "type": "string", "name": "invoice_terms", "in": "formData", "description": "Default terms & conditions for new documents."}, {"required": false, "type": "string", "name": "estimate_terms", "in": "formData", "description": "Default terms & conditions for new documents."}, {"required": false, "type": "string", "name": "invoice_public_notes", "in": "formData", "description": "Default public notes for new documents."}, {"required": false, "type": "string", "name": "estimate_public_notes", "in": "formData", "description": "Default public notes for new documents."}, {"required": false, "type": "string", "name": "invoice_email_message", "in": "formData", "description": "This message will appear by default when you try to send your invoices or credit notes via email."}, {"required": false, "type": "string", "name": "estimate_email_message", "in": "formData", "description": "This message will appear by default when you try to send your estimates via email."}], "tags": ["themes"], "summary": "/v1.0/themes/{id}/", "operationId": "themes_partial_update", "consumes": ["multipart/form-data"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The title is used for your own reference, to help you identify the template.", "example": "The default template"}, "default": {"type": "boolean", "description": "The default template is applied to new invoices when no template is explicitly specified and no other template is associated with the invoice client. Out of your templates list, only one can be marked as default."}, "template": {"type": "string", "description": "The template layout. Elorus comes with a fixed library of invoice layouts to choose from. Please visit the web application for more information on what each layout looks like. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`strict` | Strict\n`prof` | Professional\n`modern` | Modern\n`classic` | Classic\n</details>", "example": "classic"}, "variation": {"type": "string", "description": "The predefined set of colors to use when rendering the template. **This field has been deprecated** in favor of a detailed, more sophisticated color definition mechanism. You are advised **not to update** the `layout` of existing templates, since it might lead to unpredictable results. For new templates, we suggest you send the value `default`, and fine-tune the template appearance via the web application.", "example": "default"}, "language": {"type": "string", "description": "The default invoicing language. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`en` | English\n`en-gb` | English (United Kingdom)\n`el` | Greek\n`fr` | French\n`de` | German\n`it` | Italian\n`es` | Spanish\n`bg` | Bulgarian\n</details>", "example": "en"}, "font_size": {"type": "string", "description": "The font size to use when rendering the invoice, estimate etc. **This field has been deprecated** in favor of a detailed, more sophisticated font & font size definition mechanism. You are advised **not to update** the `font size` of existing templates using this version of the API. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`small` | Small\n`default` | Medium\n`large` | Large\n</details>", "example": "default"}, "company_name": {"type": "string", "description": "How your company name will be displayed when using this theme.", "example": "ACME Inc."}, "slogan": {"type": "string", "description": "A tagline that will appear under the company name.", "example": "Creating awesomeness"}, "company_info": {"type": "string", "description": "How your company details (address, contact info etc.) will be displayed when using this template.", "example": "4 Catherine St., Southaven, MS 38671, USA"}, "logo": {"type": "string", "description": "The actual file contents.", "example": "//url-to-access-the-file/"}, "electronic_signature": {"type": "string", "description": "The actual file contents.", "example": "//url-to-access-the-file/"}, "hide_description": {"type": "boolean", "description": "Hide the item description column."}, "hide_quantity": {"type": "boolean", "description": "Hide the item quantity column."}, "hide_vat": {"type": "boolean", "description": "Hide the item vat column."}, "hide_contact_information": {"type": "boolean", "description": "Hide the client's contact person, email, and phone."}, "hide_creator_information": {"type": "boolean", "description": "Hide creator's personal information (name, email, and phone)."}, "hide_vat_table": {"type": "boolean", "description": "The VAT table analyzes the amounts of each VAT rate found on the document."}, "unit_measure_appearance": {"type": "integer", "description": "Measurement unit column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | Hide\n`1` | Symbol\n`2` | Abbreviation\n</details>"}, "discount_appearance": {"type": "integer", "description": "Discount column appearance.  One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`0` | As value\n`1` | As percentage\n`2` | Hide discount column\n</details>"}, "hide_payments": {"type": "boolean", "description": "Hide both paid and outstanding amount from the commercial document's printable version."}, "hide_client_due": {"type": "boolean", "description": "Hide client's due amount from the commercial document's printable version."}, "invoice_terms": {"type": "string", "description": "Default terms & conditions for new documents.", "example": "Default invoice terms & conditions."}, "estimate_terms": {"type": "string", "description": "Default terms & conditions for new documents.", "example": "Default estimate terms & conditions."}, "invoice_public_notes": {"type": "string", "description": "Default public notes for new documents.", "example": "Default notes on the invoice."}, "estimate_public_notes": {"type": "string", "description": "Default public notes for new documents.", "example": "Default notes on the estimate."}, "invoice_email_message": {"type": "string", "description": "This message will appear by default when you try to send your invoices or credit notes via email.", "example": "<div style=\"white-space: pre-wrap;\"><p>Hello %CNAME%,<br><br>Please visit %PERMALINK% to access the invoice.<br>You can also download a pdf version from that link.<br><br>Thanks,<br>%SNAME%</p></div>"}, "estimate_email_message": {"type": "string", "description": "This message will appear by default when you try to send your estimates via email.", "example": "<div style=\"white-space: pre-wrap;\"><p>Hello %CNAME%,<br><br>Please visit %PERMALINK% to access the estimate.<br>You can also download a pdf version from that link.<br><br>Thanks,<br>%SNAME%</p></div>"}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a template.\n---\nNote that you cannot delete templates currently in use by invoices,\nestimates, credit notes or clients.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["themes"], "summary": "/v1.0/themes/{id}/", "operationId": "themes_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/trackingcategories/": {"get": {"description": "Get the list of tracking categories.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `title`, `options`."}, {"required": false, "type": "string", "name": "active", "in": "query", "description": "Can be either `1` or `0`."}, {"required": false, "type": "string", "name": "application", "in": "query", "description": "Optional filter."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `title`, `active`. Prepend a `-` to denote reverse ordering (e.g `-title`)."}], "tags": ["trackingcategories"], "summary": "/v1.0/trackingcategories/", "operationId": "trackingcategories_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The tracking category title.", "example": "Continent"}, "active": {"type": "boolean", "description": "Instead of deleting a tracking category, you may archive it."}, "options": {"name": "options", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["Africa", "Antarctica", "Asia", "Australia", "Europe", "North America", "South America"], "description": "The list of option tags for the tracking category."}, "application": {"name": "application", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`sales` | Sales\n`purchases` | Purchases\n`cashreceipts` | Payments received\n`cashpayments` | Payments sent\n`productorservice` | Products / Services\n</details>"}, "required": false, "type": "array", "example": ["sales", "purchases"], "description": "The types of records that this category will track.At least one of [`sales`, `purchases`, `cashreceipts`,`cashpayments`, `productorservice`]."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "post": {"description": "Create a new tracking category.\n---", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["title", "options", "application"], "type": "object", "properties": {"title": {"type": "string", "description": "The tracking category title.", "example": "Continent"}, "active": {"type": "boolean", "description": "Instead of deleting a tracking category, you may archive it."}, "options": {"name": "options", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["Africa", "Antarctica", "Asia", "Australia", "Europe", "North America", "South America"], "description": "The list of option tags for the tracking category."}, "application": {"name": "application", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`sales` | Sales\n`purchases` | Purchases\n`cashreceipts` | Payments received\n`cashpayments` | Payments sent\n`productorservice` | Products / Services\n</details>"}, "required": true, "type": "array", "example": ["sales", "purchases"], "description": "The types of records that this category will track.At least one of [`sales`, `purchases`, `cashreceipts`,`cashpayments`, `productorservice`]."}}}, "name": "data", "in": "body"}], "tags": ["trackingcategories"], "summary": "/v1.0/trackingcategories/", "operationId": "trackingcategories_create", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The tracking category title.", "example": "Continent"}, "active": {"type": "boolean", "description": "Instead of deleting a tracking category, you may archive it."}, "options": {"name": "options", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["Africa", "Antarctica", "Asia", "Australia", "Europe", "North America", "South America"], "description": "The list of option tags for the tracking category."}, "application": {"name": "application", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`sales` | Sales\n`purchases` | Purchases\n`cashreceipts` | Payments received\n`cashpayments` | Payments sent\n`productorservice` | Products / Services\n</details>"}, "required": false, "type": "array", "example": ["sales", "purchases"], "description": "The types of records that this category will track.At least one of [`sales`, `purchases`, `cashreceipts`,`cashpayments`, `productorservice`]."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/trackingcategories/{id}/": {"get": {"description": "Get a single tracking category.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["trackingcategories"], "summary": "/v1.0/trackingcategories/{id}/", "operationId": "trackingcategories_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The tracking category title.", "example": "Continent"}, "active": {"type": "boolean", "description": "Instead of deleting a tracking category, you may archive it."}, "options": {"name": "options", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["Africa", "Antarctica", "Asia", "Australia", "Europe", "North America", "South America"], "description": "The list of option tags for the tracking category."}, "application": {"name": "application", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`sales` | Sales\n`purchases` | Purchases\n`cashreceipts` | Payments received\n`cashpayments` | Payments sent\n`productorservice` | Products / Services\n</details>"}, "required": false, "type": "array", "example": ["sales", "purchases"], "description": "The types of records that this category will track.At least one of [`sales`, `purchases`, `cashreceipts`,`cashpayments`, `productorservice`]."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}, "put": {"description": "Update a tracking category.\n---\nYou must provide at least the required fields for the\ntracking category to be successfully updated.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"required": ["title", "options", "application"], "type": "object", "properties": {"title": {"type": "string", "description": "The tracking category title.", "example": "Continent"}, "active": {"type": "boolean", "description": "Instead of deleting a tracking category, you may archive it."}, "options": {"name": "options", "items": {"type": "string", "description": ""}, "required": true, "type": "array", "example": ["Africa", "Antarctica", "Asia", "Australia", "Europe", "North America", "South America"], "description": "The list of option tags for the tracking category."}, "application": {"name": "application", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`sales` | Sales\n`purchases` | Purchases\n`cashreceipts` | Payments received\n`cashpayments` | Payments sent\n`productorservice` | Products / Services\n</details>"}, "required": true, "type": "array", "example": ["sales", "purchases"], "description": "The types of records that this category will track.At least one of [`sales`, `purchases`, `cashreceipts`,`cashpayments`, `productorservice`]."}}}, "name": "data", "in": "body"}], "tags": ["trackingcategories"], "summary": "/v1.0/trackingcategories/{id}/", "operationId": "trackingcategories_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The tracking category title.", "example": "Continent"}, "active": {"type": "boolean", "description": "Instead of deleting a tracking category, you may archive it."}, "options": {"name": "options", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["Africa", "Antarctica", "Asia", "Australia", "Europe", "North America", "South America"], "description": "The list of option tags for the tracking category."}, "application": {"name": "application", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`sales` | Sales\n`purchases` | Purchases\n`cashreceipts` | Payments received\n`cashpayments` | Payments sent\n`productorservice` | Products / Services\n</details>"}, "required": false, "type": "array", "example": ["sales", "purchases"], "description": "The types of records that this category will track.At least one of [`sales`, `purchases`, `cashreceipts`,`cashpayments`, `productorservice`]."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "patch": {"description": "Partially update a tracking category.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"title": {"type": "string", "description": "The tracking category title.", "example": "Continent"}, "active": {"type": "boolean", "description": "Instead of deleting a tracking category, you may archive it."}, "options": {"name": "options", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["Africa", "Antarctica", "Asia", "Australia", "Europe", "North America", "South America"], "description": "The list of option tags for the tracking category."}, "application": {"name": "application", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`sales` | Sales\n`purchases` | Purchases\n`cashreceipts` | Payments received\n`cashpayments` | Payments sent\n`productorservice` | Products / Services\n</details>"}, "required": false, "type": "array", "example": ["sales", "purchases"], "description": "The types of records that this category will track.At least one of [`sales`, `purchases`, `cashreceipts`,`cashpayments`, `productorservice`]."}}}, "name": "data", "in": "body"}], "tags": ["trackingcategories"], "summary": "/v1.0/trackingcategories/{id}/", "operationId": "trackingcategories_partial_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "title": {"type": "string", "description": "The tracking category title.", "example": "Continent"}, "active": {"type": "boolean", "description": "Instead of deleting a tracking category, you may archive it."}, "options": {"name": "options", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["Africa", "Antarctica", "Asia", "Australia", "Europe", "North America", "South America"], "description": "The list of option tags for the tracking category."}, "application": {"name": "application", "items": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`sales` | Sales\n`purchases` | Purchases\n`cashreceipts` | Payments received\n`cashpayments` | Payments sent\n`productorservice` | Products / Services\n</details>"}, "required": false, "type": "array", "example": ["sales", "purchases"], "description": "The types of records that this category will track.At least one of [`sales`, `purchases`, `cashreceipts`,`cashpayments`, `productorservice`]."}, "organization": {"type": "integer", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}, "delete": {"description": "Delete a tracking category.\n---\nNote that you cannot delete tracking categories being in use\n(currently associated with existing records). You may want to\narchive such categories instead.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["trackingcategories"], "summary": "/v1.0/trackingcategories/{id}/", "operationId": "trackingcategories_delete", "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/trackingcategories/{id}/bulk-update/": {"patch": {"description": "Assign records in bulk.\n\nUse this endpoint to associate or unlink multiple records\nwith a specific option.", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"action": {"type": "string", "description": "Whether to add or remove associated records. One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`add` | Add\n`remove` | Remove\n</details>"}, "option": {"type": "string", "description": "The tracking category option, for which records will be added or removed"}, "records": {"items": {"type": "object", "properties": {"model_type": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`invoice` | Invoice\n`creditnote` | Credit note\n`recurringinvoice` | Recurring invoice\n`expense` | Expense\n`recurringexpense` | Recurring expense\n`purchase` | Bill\n`purchasecreditnote` | Supplier credit\n`recurringpurchase` | Recurring bill\n`cashreceipt` | Payment received\n`recurringcashreceipt` | Recurring payment received\n`cashpayment` | Payment sent\n`productorservice` | Product / Service\n</details>"}, "object_id": {"type": "string", "description": ""}}}, "required": false, "type": "array", "name": "records", "description": ""}}}, "name": "data", "in": "body"}], "tags": ["trackingcategories"], "summary": "/v1.0/trackingcategories/{id}/bulk-update/", "operationId": "trackingcategories_bulk_update", "consumes": ["application/json"], "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/trackingcategories/{id}/rename-option/": {"patch": {"description": "Rename a tracking category option\n\nAll the related records that use this option will also be updated", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"schema": {"type": "object", "properties": {"old_option": {"type": "string", "description": "Option to be renamed."}, "new_option": {"type": "string", "description": "New option name."}, "options": {"name": "options", "items": {"type": "string", "description": ""}, "required": false, "type": "array", "example": ["Africa", "Antarctica", "Asia", "Australia", "Europe", "North America", "South America"], "description": ""}}}, "name": "data", "in": "body"}], "tags": ["trackingcategories"], "summary": "/v1.0/trackingcategories/{id}/rename-option/", "operationId": "trackingcategories_rename_option", "consumes": ["application/json"], "responses": {"200": {"description": "Success"}, "400": {"description": "Bad request. The exact error message is sent in the response body."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}}}}, "/v1.0/users/": {"get": {"description": "Get the list of users.\n---\nThe list includes invited users whose invitation status is pending.", "parameters": [{"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}, {"required": false, "type": "integer", "name": "page", "in": "query", "description": "A page number within the paginated result set."}, {"required": false, "type": "integer", "name": "page_size", "in": "query", "description": "Number of results to return per page. Default is 100."}, {"required": false, "type": "string", "name": "search", "in": "query", "description": "A search term."}, {"required": false, "type": "string", "name": "search_fields", "in": "query", "description": "The fields on which search will be performed once a search term is provided. A comma-separated list. If not provided, the search operation will span across all fields. The available fields are `assignee__email`, `invitation_email`, `assignee__first_name`, `assignee__last_name`."}, {"required": false, "type": "string", "name": "ordering", "in": "query", "description": "Which field to use when ordering the results.A comma-separated list, if more than one is provided. The available fields are `pk`. Prepend a `-` to denote reverse ordering (e.g `-pk`)."}, {"required": false, "type": "string", "name": "type", "in": "query", "description": "Optional filter."}], "tags": ["users"], "summary": "/v1.0/users/", "operationId": "users_list", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "assignee": {"type": "string", "description": "The ID of the associated user. This might be blank if the user has not accepted the invitation yet.", "example": "8800000040088865"}, "core_role": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`manager` | Manager\n`staff` | Staff\n`partner` | Partner\n</details>", "example": "manager"}, "custom_role": {"type": "integer", "description": "The ID of the associated custom role (if any).", "example": ""}, "active": {"type": "boolean", "description": "Inactive users may not access the organization data."}, "invitation_email": {"type": "string", "description": "The email address where the invitation was initially sent to.", "example": "invited@email.com"}, "invitation_status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`ini` | Initialized\n`pen` | Pending\n`acc` | Accepted\n</details>", "example": "acc"}, "restrict_contact_access": {"type": "boolean", "description": "Whether the user is authorized to view all of the organization contacts or not."}, "contacts": {"type": "string", "description": "A list of contact IDs that the user is allowed to access. If the user has restricted contact access and this list is empty, she is not allowed to access any contact.", "example": ["3300000040000100"]}, "organization": {"type": "string", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}, "type": "array", "description": "The array of results."}, "next": {"type": "string", "description": "URL to the next page, if any.", "example": ""}, "previous": {"type": "string", "description": "URL to the previous page, if any.", "example": ""}, "count": {"type": "integer", "description": "Number of total results.", "example": 10}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}, "/v1.0/users/{id}/": {"get": {"description": "Get a single user.\n---", "parameters": [{"required": true, "type": "string", "name": "id", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "X-Elorus-Organization", "in": "header", "description": "The ID of the organization you want to operate on."}, {"required": false, "type": "string", "name": "X-Elorus-Demo", "in": "header", "description": "Just send this header if you want to ensure you operate on demo organizations only. Useful while you're developing your application, to avoid accidents on production data."}], "tags": ["users"], "summary": "/v1.0/users/{id}/", "operationId": "users_read", "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"id": {"type": "string", "description": "", "example": "1050000300010040"}, "assignee": {"type": "string", "description": "The ID of the associated user. This might be blank if the user has not accepted the invitation yet.", "example": "8800000040088865"}, "core_role": {"type": "string", "description": " One of the following or blank (empty string):\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`manager` | Manager\n`staff` | Staff\n`partner` | Partner\n</details>", "example": "manager"}, "custom_role": {"type": "integer", "description": "The ID of the associated custom role (if any).", "example": ""}, "active": {"type": "boolean", "description": "Inactive users may not access the organization data."}, "invitation_email": {"type": "string", "description": "The email address where the invitation was initially sent to.", "example": "invited@email.com"}, "invitation_status": {"type": "string", "description": " One of the following:\n<details>\n<summary>List of values</summary>\nValue | Description\n--- | ---\n`ini` | Initialized\n`pen` | Pending\n`acc` | Accepted\n</details>", "example": "acc"}, "restrict_contact_access": {"type": "boolean", "description": "Whether the user is authorized to view all of the organization contacts or not."}, "contacts": {"type": "string", "description": "A list of contact IDs that the user is allowed to access. If the user has restricted contact access and this list is empty, she is not allowed to access any contact.", "example": ["3300000040000100"]}, "organization": {"type": "string", "description": "ID of the owning organization.", "example": "1000000243015421"}, "created": {"type": "string", "description": "ISO-formatted creation date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}, "modified": {"type": "string", "description": "ISO-formatted last modification date & time. Timezone information is included.", "example": "2019-01-28T13:48:56.504916Z"}}}}, "401": {"description": "Unauthorized request. User credentials were invalid or missing."}, "403": {"description": "Permission denied. User was not allowed to perform the requested action."}}}}}, "tags": [{"x-traitTag": true, "name": "Authorization", "description": "\n**Organizations** are a key concept in Elorus. Each user is assigned a role \nwithin an organization / company, depending on which he may or may not \nbe able to perform actions. To specify the organization on which you \nwish to operate, you must provide the custom \n`X-Elorus-Organization` HTTP header:\n\n    X-Elorus-Organization: 128759403567807\n\nSince each API key represents a user, the ability to retrieve, update or \ndelete data **depends on the user role** within the specified organization.\n\nIn the event of an unauthorized request, the Elorus API returns a `HTTP 403` \nresponse. Additional details about the error may be provided within the \nresponse body.\n\nThe use of `X-Elorus-Organization` is explicitly documented where needed,\nunder the *Header Parameters* section. \n\nTo start developing with the Elorus API you need to sign up for a free account.\nThe best way to try out Elorus and test your code is through \n[demo organizations](#tag/Using-the-API). \n"}, {"x-traitTag": true, "name": "Using the API", "description": "\n## Demo organizations\n\nWhile developing your application, \nit is recommended to restrict all API requests only to demo organizations \nby providing the `X-Elorus-Demo` HTTP header:\n\n    X-Elorus-Demo: true\n    \n\nThis way Elorus will enforce a demo organization, preventing accidental data \nloss on production organizations. Demo organizations are a special form of \norganizations, suitable for reviewing \nElorus and experimenting with the API. Within a demo organization:\n\n- You can create unlimited documents to unlimited clients / suppliers.\n- You can only have a single user - yourself.\n- User management & plan subscription functionality is disabled both in \nthe application UI and the API.\n- Data is automatically reset at the 1st of every month.\n\n****\nCurrently demo organizations are created only upon request. Contact the [Elorus \nsupport team](mailto:support@elorus.com) to get started with your demo \norganization.\n****\n\n## Call rate limits\n\nEach user has a hard limit of 1000 API calls per day. \nAt the same time, a user may not perform more than 60 requests \nper minute. If an API call e these limits, you will receive an \n`HTTP 429` response. The accompanying error message will look like \n`\"Request was throttled. Expected available in 60.0 seconds\"`.\n\n## Localization\n\n### Language\n\nThe English language is used throughout the Elorus API, regardless \nof the authenticated user's language preference. The English\nlocale conventions are also used for decimal numbers and dates:\n\n- The character `.` is used as a floating point for decimal numbers.\n- Dates are expected & returned in the form of `YYYY-mm-dd`.\n\n### Timezone\nThe UTC timezone is used throughout the Elorus API. \nDatetime values are formatted in the standard ISO format.\n"}, {"x-traitTag": false, "name": "contacts", "description": "\nA contact may be a client, supplier or both.  \n"}, {"x-traitTag": false, "name": "invoices", "description": "\nAn invoice holds information regarding the actual transaction\n(such as the client, date, amounts etc.), as well as additional\ninformation needed to render the document as PDF.\n\n#### PDF rendering\nThe entity responsible for rendering invoices to PDF is called\n[Template](#tag/themes). Templates dictate the design (such as\nthe layout, color schemes, logo etc) as well as the contents\nof the PDF (language, show / hide payment details etc.).\n\nInvoices may override certain template\nsettings, to allow for a full control over the PDF rendering of a \nparticular invoice. These settings are found under the `template_settings`\ngroup of fields.\n\n#### Client data\nInvoices also keep a copy of all the client information that will\nappear on the PDF. As a result you may modify the underlying client\n[contact](#tag/contacts) (e.g. update the billing address) \nwithout affecting the printable form of past transactions with that client.\n\n\n#### Payment gateways\nIf you want to let clients pay online, you must associate \none or more [payment gateways](#tag/paymentgateways) with your invoices.\nEach invoice may have a distinct set of payment gateways, depending\non the business needs (e.g. the client's currency or country etc.)  \n\n\n#### Tracking categories\nInvoices may be assigned custom tags. Tags are grouped under\n[custom categories](#tag/trackingcategories) and can help you\nbetter understand your sales performance. The API allows for full\ncontrol over the invoice tracking.\n"}, {"x-displayName": "Credit notes", "x-traitTag": false, "name": "creditnotes", "description": "\nA credit note holds information regarding the actual transaction\n(such as the client, date, amounts etc.), as well as additional\ninformation needed to render the document as PDF.\n\n#### PDF rendering\nThe entity responsible for rendering credit notes to PDF is called\n[Template](#tag/themes). Templates dictate the design (such as\nthe layout, color schemes, logo etc) as well as the contents\nof the PDF (language, show / hide payment details etc.).\n\nCredit notes may override certain template\nsettings, to allow for a full control over the PDF rendering of a \nparticular credit note. These settings are found under the `template_settings`\ngroup of fields.\n\n#### Client data\nCredit notes also keep a copy of all the client information that will\nappear on the PDF. As a result you may modify the underlying client\n[contact](#tag/contacts) (e.g. update the billing address) \nwithout affecting the printable form of past transactions with that client.\n\n#### Tracking categories\nCredit notes may be assigned custom tags. Tags are grouped under\n[custom categories](#tag/trackingcategories) and can help you\nbetter understand your sales performance. The API allows for full\ncontrol over the credit note tracking. \n"}, {"x-traitTag": false, "name": "estimates", "description": "\nAn estimate holds information regarding the actual offer\n(such as the client, date, amounts etc.), as well as additional\ninformation needed to render the document as PDF.\n\n#### PDF rendering\nThe entity responsible for rendering credit notes to PDF is called\n[Template](#tag/themes). Templates dictate the design (such as\nthe layout, color schemes, logo etc) as well as the contents\nof the PDF (language, which columns to show / hide on each line etc.).\n\nEstimates may override certain template\nsettings, to allow for a full control over the PDF rendering of a \nparticular estimate. These settings are found under the `template_settings`\ngroup of fields.\n\n#### Client data\nEstimates also keep a copy of all the client information that will\nappear on the PDF. As a result you may modify the underlying client\n[contact](#tag/contacts) (e.g. update the client address) \nwithout affecting the printable form of past transactions with that client.\n\n#### Accepted / rejected estimates\nWhenever an estimate is sent to the client, they are able to accept or\nreject the quote. This information is stored on the `accept_status` field.\nThe API also allows you to programmatically mark the estimate as \naccepted or rejected, by modifying the `accept_status` field.\n\n#### Generating invoices\nDepending on the application settings, a new invoice might be automatically\ngenerated once an estimate gets accepted. A reference to the invoice\nis stored on the `converted_invoice` field.\n\nThat being said, you may manually convert an estimate to invoice\nvia the [corresponding endpoint](#operation/estimates_to_invoice).\n"}, {"x-displayName": "Recurring invoices", "x-traitTag": false, "name": "recurringinvoices", "description": "\nRecurring invoices serve as a template, based on which\nnew invoices are created automatically. The frequency \nthat new invoices are generated \nis determined by a corresponding *schedule*.\n\n#### Recurring schedule\nThe recurring schedule comprises four fields. The `start_datetime`\ndenotes the first time that a new invoice should be created. The\n`interval` and `period` fields specify the frequency \n(e.g. every 2 weeks) and the `end_datetime` the date on which the\nlast execution will occur. For example, to create a recurring invoice\nthat will start on Jan 1, 2019 and will generate new invoices\nevery month until Jan 1, 2020, the recurring schedule would be:\n\n~~~\nstart_datetime   2019-01-01T10:00:00.0Z\ninterval         1\nperiod           months\nend_datetime     2020-01-01T10:00:00.0Z\n~~~\n\n#### Generated invoices\nAdditional information regarding the generated invoices \n(i.e. the client, invoice lines, appearance settings etc.) is also\nstored on the recurring invoice. Therefore, recurring invoices\nhave most of their fields in common with \n[normal invoices](#tag/invoices). For example, the recurring invoice's\n`draft` field controls whether the created invoice will be a draft,\nrather than whether the recurring invoice itself is a draft. \nTo easily identify the role of each field, please see the field\ndescription in the corresponding endpoints.\n\n\n#### Tracking categories\nRecurring invoices can also hold information about your \n[custom tags](#tag/trackingcategories). Once again, this \ndoes not categorize the recurring invoice; it dictates\nthe tags that will be automatically assigned to the created\ninvoices instead. \n"}, {"x-displayName": "Bills", "x-traitTag": false, "name": "purchases", "description": "\nBills typically represent invoices that you receive from \nsuppliers. \n\n#### Bill lines\nElorus allows you to record every line of the\nreceived invoice separately. If you do not care about the\ninvoice details, you can always just send the bill's\ntotal amounts in a single line.\n\n\n#### Tracking categories\nBills may be assigned custom tags. Tags are grouped under\n[custom categories](#tag/trackingcategories) and can help you\nbetter understand your purchases. The API allows for full\ncontrol over the bill tracking.\n"}, {"x-displayName": "Supplier credits", "x-traitTag": false, "name": "purchasecreditnotes", "description": "\nSupplier credits typically represent credit notes that you receive from \nsuppliers. \n\n#### Supplier credit lines\nElorus allows you to record every line of the\nreceived credit note separately. If you do not care about the\ndetails, you can always just send the total amounts in a single line.\n\n\n#### Tracking categories\nSupplier credits may be assigned custom tags. Tags are grouped under\n[custom categories](#tag/trackingcategories) and can help you\nbetter understand your purchases. The API allows for full\ncontrol over the supplier credit tracking.\n"}, {"x-displayName": "Recurring bills", "x-traitTag": false, "name": "recurringpurchases", "description": "\nRecurring bills serve as a template, based on which\nnew bills are created automatically. The frequency \nthat new bills are generated \nis determined by a corresponding *schedule*.\n\n#### Recurring schedule\nThe recurring schedule comprises four fields. The `start_datetime`\ndenotes the first time that a new bill should be created. The\n`interval` and `period` fields specify the frequency \n(e.g. every 2 weeks) and the `end_datetime` the date on which the\nlast execution will occur. For example, to create a recurring bill\nthat will start on Jan 1, 2019 and will generate new bills\nevery month until Jan 1, 2020, the recurring schedule would be:\n\n~~~\nstart_datetime   2019-01-01T10:00:00.0Z\ninterval         1\nperiod           months\nend_datetime     2020-01-01T10:00:00.0Z\n~~~\n\n#### Generated bills\nAdditional information regarding the generated bills \n(i.e. the supplier, amounts etc.) is also\nstored on the recurring bill. Therefore, recurring bills\nhave most of their fields in common with \n[normal bills](#tag/purchases). For example, \nthe recurring bill's\n`draft` field controls whether the created bill will be a draft,\nrather than whether the recurring bill itself is a draft. \nTo easily identify the role of each field, please see the field\ndescription in the corresponding endpoints.\n\n\n#### Tracking categories\nRecurring bills can also hold information about your \n[custom tags](#tag/trackingcategories). Once again, this \ndoes not categorize the recurring bill; it dictates\nthe tags that will be automatically assigned to the created\nbills instead. \n"}, {"x-displayName": "Products / services", "x-traitTag": false, "name": "products", "description": "\nThis entity represents inventory items that \nyour company may sell or purchase. Products / services may be\nassigned to invoices, credit notes etc. and are primarily \nused to:\n\n- View sales / purchase reports per item\n- Manage inventory stock\n\n\n#### Products / services in sales & purchases\n\nIn real world, products may be sold, purchased or both. \nIn Elorus, you must explicitly specify whether you buy or \nsell a product: \n\nTo be able to associate a product with an invoice or \ncredit note, the product's\n`sales` property must be set to `true`. \nTo be able to associate a product with a bill or \na supplier credit, the product's\n`purchases` property must be set to `true`  \n\n\n#### Stock management\n\nTo let keep track of the product's stock in your inventory, \nthe `manage` property must be set to `true`. \nEach time the product is being sold \n(i.e. an invoice line is associated with the product) \nthe stock will increase as dictated by the quantity. Each time\nthe product is being purchased (i.e. associated with a bill)\nthe stock will decrease as dictated by the quantity.\n\n#### Tracking categories\nProducts / services may be assigned custom tags. Tags are grouped under\n[custom categories](#tag/trackingcategories) and are primarily a reporting\ntool: they can help you better understand your sales / purchases.\n"}, {"x-displayName": "Product stock adjustments", "x-traitTag": false, "name": "stockadjustments", "description": "\nStock adjustments enable the direct increase / decrease of a product's stock.\nThey're used to update the inventory quantity without issuing an \ninvoice or bill. Stock adjustments apply only to products / services whose \n[stock is managed](#tag/products).\n"}, {"x-displayName": "Payments received", "x-traitTag": false, "name": "cashreceipts", "description": "\nPayments received represent money that you received in the context\nof a single transaction. They can be either a client payment,\na supplier refund or other income (for more information, \nplease see the Elorus documentation).\n\n\n#### IMPORTANT NOTE\n\n>  Historically, a payment record\n> could only be associated with a single invoice or supplier credit.\n> As of Sep. 2018, Elorus supports associating a single transaction\n> with many invoices or supplier credits \n> (e.g. a client pays for multiple invoices at once). \n> However, for backwards compatibility reasons, **this version of the API\n> uses the old scheme**. For example, if you use the \n> [payment details endpoint](#operation/cashreceipts_read) of an existing\n> client payment, you will get\n> the associated invoices in a comma-separated list. However, you may\n> create new client payment that is only associated with a single invoice.\n\n#### Tracking categories\nPayments received may be assigned custom tags. Tags are grouped under\n[custom categories](#tag/trackingcategories) and can help you\nbetter understand your cash flow. The API allows for full\ncontrol over the payments received tracking.\n"}, {"x-displayName": "Payments sent", "x-traitTag": false, "name": "cashpayments", "description": "\nPayments received represent money that you sent in the context\nof a single transaction. They can be either a supplier payment,\na client refund or other expenses (for more information, \nplease see the Elorus documentation).\n\n\n#### IMPORTANT NOTE\n\n>  Historically, a payment record\n> could only be associated with a single bill or credit note.\n> As of Sep. 2018, Elorus supports associating a single transaction\n> with many bills or credit notes \n> (e.g. a you pay off multiple supplier invoices at once). \n> However, for backwards compatibility reasons, **this version of the API\n> uses the old scheme**. For example, if you use the \n> [payment details endpoint](#operation/cashpayments_read) of an existing\n> supplier payment, you will get\n> the associated bills in a comma-separated list. However, you may\n> create new supplier payment that is only associated with a single bill.\n\n#### Tracking categories\nPayments sent may be assigned custom tags. Tags are grouped under\n[custom categories](#tag/trackingcategories) and can help you\nbetter understand your cash flow. The API allows for full\ncontrol over the payments sent tracking.\n"}, {"x-displayName": "Recurring payments received", "x-traitTag": false, "name": "recurringcashreceipts", "description": "\nRecurring payments received serve as a template, based on which\nnew payment received records are created automatically. The frequency \nthat new payments are generated is determined by a corresponding *schedule*.\n\n#### Recurring schedule\nThe recurring schedule comprises four fields. The `start_datetime`\ndenotes the first time that a new record should be created. The\n`interval` and `period` fields specify the frequency \n(e.g. every 2 weeks) and the `end_datetime` the date on which the\nlast execution will occur. For example, to create a recurring payment received\nthat will start on Jan 1, 2019 and will generate new payment records\nevery month until Jan 1, 2020, the recurring schedule would be:\n\n~~~\nstart_datetime   2019-01-01T10:00:00.0Z\ninterval         1\nperiod           months\nend_datetime     2020-01-01T10:00:00.0Z\n~~~\n\n#### Generated records\n[Payments received](#tag/cashreceipts) records may be of the \nfollowing types: Client payments, supplier refunds or \nother income. However, recurring payments received \n**may only create records of type *other income* **. \n\n\n#### Tracking categories\nRecurring payments received can also hold information about your \n[custom tags](#tag/trackingcategories). This data \ndoes not refer to the recurring payment itself; it dictates\nthe tags that will be automatically assigned to the created\nrecords instead. \n"}, {"x-displayName": "Incoming cheques", "x-traitTag": false, "name": "incomingcheques", "description": "\nTo use these endpoints, *cheque management* must be enabled for\nthe organization in question.\n"}, {"x-displayName": "Outgoing cheques", "x-traitTag": false, "name": "outgoingcheques", "description": "\nTo use these endpoints, *cheque management* must be enabled for\nthe organization in question.\n"}, {"x-traitTag": false, "name": "taxes"}, {"x-displayName": "Payment gateways", "x-traitTag": false, "name": "paymentgateways", "description": "\nYou may retrieve the list of payment gateways via the API. However,\nto update or create new records, the web application must be used.\n"}, {"x-traitTag": false, "name": "reminders", "description": "\nReminders may be sent to both clients & partners whenever an important\nevent occurs. \n\nEach reminder serves a different purpose. You may automatically \nnotify your clients whenever their amount due surpasses a fixed \nlimit, or whenever a specific invoice is overdue more than X \ndays, etc. The `application`, `type` and `options` fields \nwork together to control the reminder's behavior.'\n"}, {"x-displayName": "Tracking categories", "x-traitTag": false, "name": "trackingcategories", "description": "\nTracking categories are primarily a reporting tool to help you\nmonitor the performance of all sorts of records. Think of each category\nas a group of conceptually related, mutually exclusive options (tags) that\ncan be used to identify a record.\n\nFor example, to monitor your sales by continent, you may create a\ntracking category named \"Continent\". The available options will be\n\"North America\", \"South America\", \"Europe\", \"Asia\", \"Africa\", \n\"Australia\" and \"Antarctica\". Once the category is created, \nyou may associate each invoice with exactly one continent.\n\nTracking categories can be used as filters in reports (e.g. you can filter\nthe results by continent), or even as groupers (e.g. you may view\nyour revenues per continent and calculate sub-totals).\n"}, {"x-displayName": "Templates", "x-traitTag": false, "name": "themes", "description": "\nTemplates dictate the way that invoices, estimates, credit notes etc. will\nbe rendered. They hold information about both the content (e.g. which columns \nto show on the line items table, whether to display the outstanding amount \nor not, etc.) and the design (e.g. colors, fonts, static texts). \nTemplates may also be used to specify default messages that will\nbe used when communicating with your clients via email.\n\n#### IMPORTANT NOTE\n\n> Templates have been the subject of a major update, where new functionality\n> was added and some features were removed / deprecated. The update took place\n> after API v1.0 was released. The following endpoints\n> are generally forwards-compatible, however you should avoid performing actions\n> that modify templates (i.e. `POST`, `PUT` & `PATCH` operations), \n> unless it's really necessary.\n\nEach template is associated with a language. You may use multiple templates\nto address international clients and issue invoices in different languages.\n"}, {"x-displayName": "Document types", "x-traitTag": false, "name": "documenttypes", "description": "\nDocument types define distinct kinds of documents, each following a separate\nnumbering sequence. The most common document type is the \"Invoice\". If, \nfor example, one needs to issue \"Tax invoices\" and \"Retail invoices\" \nseparately, they would create two new document types.\n\nEach document type applies to a specific type of records. You may create \ndocument types that apply to invoices, credit notes or estimates.\n\nFinally, document types specify the translations to use when invoicing\nin multiple languages.\n"}, {"x-displayName": "Sales numbering sequences", "x-traitTag": false, "name": "salesseries", "description": "\nNumbering sequences are prefixes that define a new, unique numbering for\ninvoices, credit notes or estimates. For example, given an\ninvoicing sequence \"A\" and a second sequence \"B\", your invoices may look\nlike:\n- Invoice A-1\n- Invoice A-2\n- Invoice A-3\n- Invoice B-1\n- Invoice B-2\n- ...\n\nSequences are always associated with a [document type](#tag/documenttypes),\nwhich in turn applies to either invoices, credit notes, recurring invoices\nor estimates. Using the sales numbering sequences endpoints, you may only \naccess sequences associated with invoices, credit notes and \nrecurring invoices. \n"}, {"x-displayName": "Estimate numbering sequences", "x-traitTag": false, "name": "estimateseries", "description": "\nNumbering sequences are prefixes that define a new, unique numbering for\nestimates, invoices or credit notes. For example, given an\ninvoicing sequence \"A\" and a second sequence \"B\", your estimates may look\nlike:\n- Estimate A-1\n- Estimate A-2\n- Estimate A-3\n- Estimate B-1\n- Estimate B-2\n- ...\n\nSequences are always associated with a [document type](#tag/documenttypes),\nwhich in turn applies to either invoices, credit notes, recurring invoices\nor estimates. Using the estimates numbering sequences endpoints, you may only \naccess sequences associated with estimates.\n"}, {"x-displayName": "Organization", "x-traitTag": false, "name": "organization"}, {"x-displayName": "Custom roles", "x-traitTag": false, "name": "organizationroles", "description": "\nRoles describe a set of predefined permissions that allow or deny\naccess to specific functionality. Each organization user is always\nassigned to a role, so that Elorus knows how to handle permissions.\nThere are two types of roles: **Core roles** and **custom roles**.\n\n\n**Core roles** come pre-installed on every organization and cannot by \nmodified or deleted. Currently, there are three core roles:\n\n- **Managers**, that can perform **any** action, including organization\nmanagement (manage users, subscription plan, company settings). Every\norganization must always have at least one manager.\n\n- **Staff** members, that can perform any action, **except from**\norganization management (cannot manage users, subscription \nplan or company settings).\n\n- **Partners**, that can only **view** the organization data,\nare **not** allowed to edit or create records and cannot \nmanage the organization users or settings.\n\n\nOn the other hand, **custom roles** can be created by the organization\nmanagers and explicitly specify whether users should be allowed\nor denied access to each and every functionality, to suit all\nbusiness needs.\n\n\nUsing this version of the api you may retrieve the list of custom roles,\nalong with their ids and descriptions, so that you may easily identify\nthe role when using the [organization users](#tag/users)\nAPI endpoints.\n"}, {"x-displayName": "Organization users", "x-traitTag": false, "name": "users"}, {"x-displayName": "User", "x-traitTag": false, "name": "profile"}], "securityDefinitions": {"API key": {"description": "\nTo connect to the API one must be registered with Elorus and own an \n**API key**. The API key is bound to a specific user, and therefore\n can be used to perform any action the user can perform within Elorus.\nTo obtain your key you must contact the Elorus support team. \n\nThe *API key* must be sent on every request through the standard \n`Authorization` HTTP header as follows:\n\n    Authorization: Token <the_token>\n\n", "type": "apiKey", "name": "Authorization", "in": "header"}}}